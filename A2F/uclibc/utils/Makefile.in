# Makefile for uClibc
#
# Copyright (C) 2000-2008 Erik Andersen <andersen@uclibc.org>
#
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.


# "make utils" flags

CFLAGS-utils := \
    $(SSP_ALL_CFLAGS) \
    -I$(top_srcdir)ldso/include \
    -DUCLIBC_RUNTIME_PREFIX=\"$(RUNTIME_PREFIX)\" \
    -DUCLIBC_LDSO=$(UCLIBC_LDSO) \
    -I$(top_srcdir)/$(KERNEL_HEADERS) \
    -DNOT_IN_libc \
    -B$(top_builddir)lib \
    -Wl,-rpath-link,$(top_builddir)lib

ifeq ($(UCLIBC_BUILD_PIE),y)
CFLAGS-utils-shared := $(PIEFLAG) $(LDPIEFLAG)
else
CFLAGS-utils-shared :=
endif

CFLAGS-ldconfig :=
ifeq ($(UCLIBC_STATIC_LDCONFIG),y)
CFLAGS-ldconfig += -static
else
CFLAGS-ldconfig += $(CFLAGS-utils-shared)
endif

CFLAGS-ldd := $(CFLAGS-utils-shared)

# Need CFLAGS-utils explicitly, because the source file is not located in utils
CFLAGS-iconv := $(CFLAGS-utils) \
    $(CFLAGS-utils-shared) \
    -DL_iconv_main \

CFLAGS-locale := $(CFLAGS-utils)


# "make hostutils" flags

ifeq ($(LDSO_CACHE_SUPPORT),y)
LDSO_CACHE_SUPPORT := -D__LDSO_CACHE_SUPPORT__=1
endif

BUILD_CFLAGS-utils := \
    -include $(top_srcdir)include/elf.h \
    -I$(top_srcdir)ldso/include \
    -DUCLIBC_RUNTIME_PREFIX=\"$(RUNTIME_PREFIX)\" \
    -DUCLIBC_LDSO=$(UCLIBC_LDSO) \
    $(LDSO_CACHE_SUPPORT)
BUILD_CFLAGS-ldconfig.host := $(BUILD_CFLAGS-utils)
BUILD_CFLAGS-ldd.host      := $(BUILD_CFLAGS-utils)


# Rules

utils_DIR := $(top_srcdir)utils
utils_OUT := $(top_builddir)utils

DEPS-ldconfig := $(utils_DIR)/chroot_realpath.c
DEPS-ldconfig.host := $(DEPS-ldconfig)

ifeq ($(HAVE_SHARED),y)
utils_OBJ += ldconfig ldd
endif

utils_ICONV_OBJ :=
utils_LOCALE_OBJ :=
ifeq ($(UCLIBC_HAS_LOCALE),y)
utils_ICONV_OBJ := $(utils_OUT)/iconv
utils_LOCALE_OBJ := $(utils_OUT)/locale
endif

utils_OBJ := $(patsubst %,$(utils_OUT)/%,$(utils_OBJ))

hostutils_OBJ := $(patsubst %,%.host,$(utils_OBJ))

utils: $(utils_OBJ) $(utils_ICONV_OBJ) $(utils_LOCALE_OBJ)

# NOTE: We build the utils AFTER we have a uClibc-targeted toolchain.

$(utils_OBJ): $(utils_OUT)/% : $(utils_DIR)/%.c | $(libc)
	$(compile.u)

$(utils_OUT)/iconv: $(top_srcdir)libc/misc/wchar/wchar.c | $(libc)
	$(compile.u)

$(utils_OUT)/locale: $(top_srcdir)extra/locale/programs/locale.c | $(libc)
	$(compile.u)

hostutils: $(hostutils_OBJ)

$(hostutils_OBJ): $(utils_OUT)/%.host : $(utils_DIR)/%.c
	$(hcompile.u)


install-y += utils_install

# This installs both utils and hostutils, so doesn't depend on either.

utils_install: $(addsuffix $(DOTHOST), $(utils_OBJ) $(utils_ICONV_OBJ) $(utils_LOCALE_OBJ))
ifeq ($(HAVE_SHARED),y)
	$(Q)$(INSTALL) -D -m 755 $(utils_OUT)/ldd$(DOTHOST) $(PREFIX)$(DEVEL_PREFIX)bin/ldd
	$(Q)$(INSTALL) -D -m 755 $(utils_OUT)/ldconfig$(DOTHOST) $(PREFIX)$(RUNTIME_PREFIX)sbin/ldconfig
endif
ifeq ($(UCLIBC_HAS_LOCALE),y)
	$(Q)$(INSTALL) -D -m 755 $(utils_OUT)/iconv$(DOTHOST) $(PREFIX)$(DEVEL_PREFIX)bin/iconv
	$(Q)$(INSTALL) -m 755 $(utils_OUT)/locale$(DOTHOST) $(PREFIX)$(DEVEL_PREFIX)bin/locale
endif


objclean-y += utils_clean

utils_clean:
	$(do_rm) $(addprefix $(utils_OUT)/, ldconfig ldd iconv locale *.host)
	# This is a hack..
	$(Q)$(RM) $(utils_OUT)/.*.dep
