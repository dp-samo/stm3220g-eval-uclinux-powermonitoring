2011-04-15  Pedro Alves  <pedro@codesourcery.com>

	Issue #10455.

	gdb/
	* regcache. (get_thread_arch_regcache): If creating a regcache for
	null_ptid, assume and allow a NULL address space, instead of
	asking the target for the ptid's address space.
	* infrun.c (ptid_is_pid): Remove assertion.

2011-04-14  Kwok Cheung Yeung  <kcy@codesourcery.com>

	Issue #10450.

	* release-notes-csl.xml (Workaround for kernel error when using
	gdbserver): New.
	
	gdb/gdbserver/
	* linux-sh-low.c (sh_num_gregs): New.
	(PTRACE_GETREGS, PTRACE_SETREGS, PTRACE_GETFPREGS, PTRACE_SETFPREGS):
	Redefine ptrace commands undefined in sys/user.h.
	(sh_fill_gregset): Change to use sh_num_gregs.  Update comment.
	(sh_store_gregset): New.
	(sh_fill_fpregset): New.
	(sh_store_fpregset): New.
	(target_regsets): Define register sets for general-purpose and
	floating-point registers.
	
2011-04-06  Pedro Alves  <pedro@codesourcery.com>

        Issue #9754.

        gdb/
        * mips-tdep.c (mips_make_symbol_special): Lookup minimal symbol by
        PC instead of by linkage name.

2011-04-04  Janis Johnson  <janisjo@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (exec_target_file, exec_symbol_file,
	rename_exec_file, touch_exec_file): New.
	* gdb.base/reread.exp: Use them.

2011-04-01  Pedro Alves  <pedro@codesourcery.com>

	Issue #9534

	Backport from upstream:
	2011-04-01  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/cpexprs.exp (Overloaded methods): No longer try the
	base::overload(void) method without specifying "const".

2011-03-30  Janis Johnson  <janisjo@codesourcery.com>

	gdb/testsuite/
	* gdb.threads/thread-specific.exp: Initialize a local variable to
	avoid a test error.

2011-03-24  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_register_g_packet_guesses): Handle 72-register
	result.

2011-03-10  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/gdbserver/
	* linux-mips-low.c (current_ptid): Delete.
	(mips_linux_read_watch_registers): Use lwpid_of.

2011-03-09  Jie Zhang  <jie@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #10234 - Hardware watchpoint support for MIPS gdbserver

	* release-notes-csl.xml (gdbserver support for watchpoints): New note.

	gdb/gdbserver/
	* linux-mips-low.c (struct mips_watchpoint, struct arch_process_info)
	(struct arch_lwp_info, W_BIT, R_BIT, I_BIT, W_MASK, R_MASK, I_MASK)
	(IRW_MASK, MAX_DEBUG_REGISTER, get_irw_mask, get_reg_mask)
	(get_num_valid, get_watchlo, set_watchlo, get_watchhi, set_watchhi)
	(mips_linux_read_watch_registers, type_to_irw, fill_mask)
	(try_one_watch, update_debug_registers_callback)
	(mips_linux_new_process, mips_linux_new_thread)
	(mips_linux_prepare_to_resume, populate_regs_from_watches)
	(mips_insert_point, mips_remove_point, mips_stopped_by_watchpoint)
	(mips_stopped_data_address): New, based on MIPS GDB watchpoint
	support and IA32 gdbserver watchpoint support.
	(the_low_target): Add watchpoint support functions.

2011-03-05  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* lib/mi-support.exp (breakpoint_re): Only match breakpoint
	deletion events.  Rename to...
	(breakpoint_deleted_re): ... this.
	(mi_gdb_target_cmd): Avoid non-stop mode target stop race.
	(mi_expect_stop): Avoid non-stop mode breakpoint deletion race.

2011-03-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* lib/gdbserver-support.exp (gdb_target_cmd): Handle non-stop
	mode request failures.
	* lib/gdb.exp (runto): Likewise.

2011-03-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* gdb.threads/ia64-sigill.exp: Avoid making use of a lin-lwp
	feature on non-Linux-native targets.  Kill the program at the
	end.

2011-03-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_expect): Pass all the exception conditions up
	to the caller.

2011-03-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* symfile.c (generic_load): Adjust the start address by the
	offset used with "load".

2011-02-02  Maciej W. Rozycki  <macro@codesourcery.com>

	Revert:

	2011-01-30  Maciej W. Rozycki  <macro@codesourcery.com>

	bfd/
	* elfxx-mips.c (plt_entry): Adjust comments for MIPS16 PLT
	support removal.
	(mips_elf_link_hash_table): Likewise.
	(mips16_o32_exec_plt_entry): Remove variable.
	(micromips_o32_exec_plt_entry): Rename to...
	(comp_o32_exec_plt_entry): ... this.
	(mips_elf_calculate_relocation): Remove MIPS16 PLT support.
	(_bfd_mips_elf_create_dynamic_sections): Likewise.
	(_bfd_mips_elf_check_relocs): Likewise.
	(_bfd_mips_elf_adjust_dynamic_symbol): Likewise.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_get_synthetic_symtab): Likewise.

	opcodes/
	* mips-dis.c (_print_insn_mips): Remove MIPS16 PLT support.

2011-01-31  Kazu Hirata  <kazu@codesourcery.com>

	Issue #10453
	* remote.c (remote_read_bytes): Return i on success.

2011-01-30  Maciej W. Rozycki  <macro@codesourcery.com>

	bfd/
	* elfxx-mips.c (plt_entry): Adjust comments for MIPS16 PLT
	support removal.
	(mips_elf_link_hash_table): Likewise.
	(mips16_o32_exec_plt_entry): Remove variable.
	(micromips_o32_exec_plt_entry): Rename to...
	(comp_o32_exec_plt_entry): ... this.
	(mips_elf_calculate_relocation): Remove MIPS16 PLT support.
	(_bfd_mips_elf_create_dynamic_sections): Likewise.
	(_bfd_mips_elf_check_relocs): Likewise.
	(_bfd_mips_elf_adjust_dynamic_symbol): Likewise.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_get_synthetic_symtab): Likewise.

	opcodes/
	* mips-dis.c (_print_insn_mips): Remove MIPS16 PLT support.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	bfd/
	* elfxx-mips.h (_bfd_mips_elf_get_synthetic_symtab): New
	prototype.
	* elfxx-mips.c (plt_entry): New structure.
	(mips_elf_link_hash_entry): Add has_plt_entry member.
	(mips_elf_link_hash_table): Rename plt_entry_size member to
	plt_mips_entry_size.  Add plt_comp_entry_size, plt_mips_offset,
	plt_comp_offset and plt_got_index entries.
	(mips_exec_plt_entry): Update comment.
	(mips16_o32_exec_plt_entry): New variable.
	(micromips_o32_exec_plt_entry): Likewise.
	(mips_elf_link_hash_newfunc): Initialise has_plt_entry.
	(mips_elf_output_extsym): Update to use gotplt_union's plist
	member rather than offset.
	(mips_elf_gotplt_index): Likewise.  Remove the VxWorks
	restriction.
	(mips_elf_calculate_relocation): Handle MIPS16/microMIPS PLT
	entries.
	(_bfd_mips_elf_create_dynamic_sections): Likewise.
	(mips_elf_allocate_lazy_stub): Likewise.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.
	(mips_elf_make_plt_record): New function.
	(_bfd_mips_elf_check_relocs): Update comment.  Record occurences
	of JAL relocations that might need a PLT entry.
	(_bfd_mips_elf_adjust_dynamic_symbol): Update to use
	gotplt_union's plist member rather than offset.  Handle
	MIPS16/microMIPS PLT entries.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_link_hash_table_create): Update to use
	gotplt_union's plist member rather than offset.  Initialize new
	members of mips_elf_link_hash_table.
	(_bfd_mips_elf_get_synthetic_symtab): New function.
	* elf32-mips.c (elf_backend_plt_sym_val): Remove macro.
	(bfd_elf32_get_synthetic_symtab): New macro.

	gdb/
	* elfread.c (elf_symtab_read): Handle the case where for
	synthetic symbols udata.i is used rather than udata.p.
	* mips-tdep.c (mips_elf_make_msymbol_special): Handle MIPS16 and
	microMIPS synthetic symbols.

	opcodes/
	* mips-dis.c (is_micromips_mode_p): Handle microMIPS PLT entries.
	(_print_insn_mips): Handle MIPS16 PLT entries.

2011-01-28  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (GDB microMIPS disassembler bug fix):
	New.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	opcodes/
	2010-11-23  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-opc.c (mips_builtin_opcodes): Add TRAP annotation to
	"aclr", "aset" and "iret".  Remove LDD annotation from "aclr"
	and "aset".
	* micromips-opc.c (micromips_opcodes): Likewise.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	Issue #9656

	include/opcode/
	2010-09-28  Chao-ying Fu  <fu@mips.com>
	* mips.h (MICROMIPSOP_MASK_COPZ): Widen to 23 bits.
	(MICROMIPSOP_SH_COPZ): Update accordingly.

	opcodes/
	2010-09-28  Chao-ying Fu  <fu@mips.com>
	* micromips-opc.c (CP): New macro.
	(micromips_opcodes): Fix mask and pinfo of "cop2".

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	Issue #9286
	bfd/
	2010-08-24  Maciej W. Rozycki  <macro@codesourcery.com>
	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Handle
	R_MICROMIPS_JALR relocs.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	bfd/
	2009-12-17  Joseph Myers  <joseph@codesourcery.com>
	* elfxx-mips.c (mips_elf_calculate_relocation): Do not mark calls
	to undefined weak functions as needing jalx.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	opcodes/
	2009-10-19  Chao-ying Fu  <fu@mips.com>
	* mips-dis.c (print_insn_micromips): Fix the address mask used
	for J, JAL and JALS instructions with the 'a' operand specifier.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from binutils:

	include/opcode/
	2009-10-01  Chao-ying Fu  <fu@mips.com>
	* mips.h (INSN2_MOD_GPR_MHI): New macro.
	(INSN2_MOD_GPR_MM, INSN2_MOD_GPR_MN): Likewise.
	(MICROMIPSOP_MASK_MH, MICROMIPSOP_SH_MH): Likewise.
	(MICROMIPSOP_MASK_MI, MICROMIPSOP_SH_MI): Likewise.
	(MICROMIPSOP_MASK_MM, MICROMIPSOP_SH_MM): Likewise.
	(MICROMIPSOP_MASK_MN, MICROMIPSOP_SH_MN): Likewise.
	(MICROMIPSOP_MASK_MK, MICROMIPSOP_SH_MK): Remove macros.

	opcodes/
	2009-10-15  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* micromips-opc.c (MOD_mhi, MOD_mm, MOD_mn): New macros.
	(micromips_opcodes): Add "bals", "bgezals", "bltzals" and
	"movep".  Change "add.d", "add.ps", "div.d", "movn.d",
	"movn.ps", "movn.s", "movz.d", "movz.ps", "movz.s", "mul.d",
	"mul.ps", "sub.d" and "sub.ps" instruction encodings.  Fix
	"msubu", "suxc1" and "swxc1" register usage annotation.
	* mips-dis.c (micromips_to_32_reg_h_map): New variable.
	(micromips_to_32_reg_i_map): Likewise.
	(micromips_to_32_reg_m_map): Likewise.
	(micromips_to_32_reg_n_map): New macro.
	(print_insn_micromips) Handle microMIPS "mh", "mi", "mm" and
	"mn" operands.

2011-01-28  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (micromips_decode_reg3): Rename to...
	(mips_decode_reg3): ... this.
	(micromips_next_pc): Update accordingly.
	(extended_offset): Correct calculation.  Adjust formatting.
	(extended_mips16_next_pc): Correct B instruction's offset
	calculation.  Correct register decoding of the BEQZ and BNEZ
	as well as jump-register instructions.  Handle compact jumps.

2011-01-27  Luis Machado  <lgustavo@codesourcery.com>

	Issue #9395

	* release-notes-csl.xml (Improved GDB startup times when debugging
	remote targets): New note.

2011-01-27  Pedro Alves  <pedro@codesourcery.com>
	    Luis Machado  <lgustavo@codesourcery.com>

	Issue #9395, part 5/5

	gdb/
	* solib-svr4.c (pheaders_inferior_data): New static global.
	(pheader_info): New structure.
	(pheaders_info): Likewise.
	(pheaders_inferior_data_cleanup): New function.
	(invalidate_pheaders_cache_inf): Likewise.
	(invalidate_pheaders_cache): Likewise.
	(get_pheaders_inferior_data): Likewise.
	(read_program_header): Use cached program header information
	if available, otherwise load and cache it.
	(_initialize_svr4_solib): Register per-inferior program headers
	cache and register observers to invalidate it when needed.

2011-01-27  Luis Machado  <lgustavo@codesourcery.com>

	Issue #9395, part 4/5

	Backport from upstream:

	2011-01-25  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* remote-fileio.c: Include target.h.
	(remote_fileio_write_bytes): Delete.
	(remote_fileio_func_open, remote_fileio_func_write)
	(remote_fileio_func_rename, remote_fileio_func_unlink): Use
	target_read_memory.
	(remote_fileio_func_stat): Use target_read_memory and
	target_write_memory.
	(remote_fileio_func_gettimeofday): Use target_write_memory.
	(remote_fileio_func_system): Use target_read_memory.
	* remote.c (remote_write_bytes): Make it static.
	(remote_read_bytes): Don't handle partial reads here.
	* remote.h (remote_read_bytes): Delete declaration.

2011-01-27  Pedro Alves  <pedro@codesourcery.com>

	Issue #9395, part 3/5

	gdb/gdbserver
	* gdbserver (tracepoint_look_up_symbols): Return upon the
	first symbol error.

2011-01-27  Pedro Alves  <pedro@codesourcery.com>
	    Luis Machado  <lgustavo@codesourcery.com>

	Issue #9395, part 2/5

	gdb/
	* target.c (target_read_partial): Declare prototype.
	(target_read_string): Use 64-bytes blocks for reads and use
	target_read_partial instead of target_read_memory.

2011-01-27  Pedro Alves  <pedro@codesourcery.com>
	    Luis Machado  <lgustavo@codesourcery.com>

	Issue #9395, part 1/5

	gdb/
	* auxv.c: Include observer.h.
	(auxv_inferior_data_cleanup): New.
	(invalidate_auxv_cache_inf): New.
	(invalidate_auxv_cache): New.
	(get_auxv_inferior_data): New.
	(auxv_inferior_data): New static global.
	(auxv_info): New structure.
	(target_auxv_search): Use get_auxv_inferior_data instead of
	target_read_alloc and don't free cached buffers.
	(fprint_target_auxv): Likewise
	(_initialize_auxv): Register per-inferior auxv cache and register
	observers to invalidate auxv cache when needed.

2010-11-24  Nathan Sidwell  <nathan@codesourcery.com>

	Issue #10085
	opcodes/
	* arm-dis.c (thumb32_opcodes): BLX must have bit zero clear.

	gas/testsuite/
	* gas/arm/blx-bad.s: New.
	* gas/arm/blx-bad.d: New.

2010-10-25  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #9744

	* release-notes-csl.xml: New note.

	bfd/
	* cpu-powerpc.c (bfd_powerpc_archs): Add "powerpc:e5500" entry.

2010-10-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7923 - schedlock.exp ERRORs

	gdb/testsuite/
	* gdb.threads/schedlock.c (MAXITER): Define.
	(args, thread_function): Use long long and MAXITER.

2010-10-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7922 - MI non-stop test ERRORs

	gdb/testsuite/
	* lib/mi-support.exp (mi_run_cmd): Ignore warnings.

2010-10-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7921 - gcore-buffer-overflow.exp ERROR.

	gdb/testsuite/
	* gdb.base/gcore-buffer-overflow.exp: Skip on Windows.

2010-10-18  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #9705

	* release-notes-csl.xml: New note.

	gdb/
	* rs6000-tdep.c (bfd_uses_spe_extensions): New function.
	(rs6000_gdbarch_init): Call it.

2010-10-17  Vladimir Prus  <vladimir@codesourcery.com>

	In MI3 mode, use separate channels for error and log messages.

	gdb/
	* interps.h (interp_init_ftype): New parameter 'interp'.
	* interps.c (interp_set): Pass interpreter to the init method.

	* mi/mi-interp.c (mi_interpreter_init): Adjust propotype.
	In MI3 mode, use separate channel for log messages.
	* cli/cli-interp.c (cli_interpreter_init): Adjust prototype.
	* tui/tui-interp.c (tui_init): Adjust prototype.

2010-10-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #9466 - GDB warnings at startup

	Backport from upstream:

	2010-10-08  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* tracepoint.c (merge_uploaded_trace_state_variables): Only print
	messages if info_verbose.

2010-10-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/moribund-step.exp: Set async mode.

2010-09-16  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #9536

	gdb/testsuite/
	* gdb.base/break-entry.exp: Skip test if we are using a stub.

2010-09-20  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.base/sepdebug.exp: Use mkdir -p.

2010-09-20  Vladimir Prus  <vladimir@codesourcery.com>

	MI breakpoint notifications.
    
	* annotate.c (breakpoint_changed): Adjust parameter type.
	* breakpoint.c (set_breakpoint_condition): Adjust to change
	in breakpoint_modified type.
	(breakpoint_set_commands): Likewise.
	(do_map_commands_command): Likewise.
	(bpstat_check_breakpoint_conditions): Notify that breakpoint has
	changed after bumping hit count.
	(bpstat_stop_status): Likewise.
	(print_one_breakpoint_location): Don't wrap in tuple here.
	(print_one_breakpoint): Always print individual locations.
	For locations, use unnamed tuple.
	(disable_breakpoints_in_unloaded_shlib): Notify that breakpoint
	has changed.
	(create_catchpoint, create_syscall_event_catchpoint): Call
	breakpoint_created obsever.
	(mention): Don't call breakpoint_created observer.
	(create_breakpoint_sal): Call breakpoint_created observer.
	(create_breakpoint, watch_command_1): Likewise.
	(create_ada_exception_breakpoint): Likewise.
	(delete_breakpoint): Call breakpoint_deleted breakpoint.
	(locations_are_equal): New.
	(update_breakpoint_locations): If locations were changed, notify.
	(set_ignore_count, disable_breakpoint, do_enable_breakpoint):
	Call breakpoint_modified observer.

	* mi/mi-cmd-break.c (breakpoint_notify): Adjust.
	(mi_cmd_break_insert): Don't set observers for modify and delete.
	* mi/mi-interp.c (mi_suppress_breakpoint_notifications): New.
	(mi_breakpoint_created, mi_breakpoint_deleted)
	(mi_breakpoint_modified): New.
	(mi_interpreter_init): Hook the above.
	* mi/mi-main.c (mi_cmd_execute): Disable breakpoint notifications
	while -break-* commands are executing.
	* mi/mi-main.h (mi_suppress_breakpoint_notifications): New.
	* mi/mi-out.c (struct ui_out_data): New field original_buffer.
	(mi_redirect): New.
	(mi_ui_out_impl): Hook in mi_redirect.
	(mi_field_skip): True to the name, skip the field, don't output
	a field with an empty value.

	* python/py-breakpoint.c (gdbpy_breakpoint_created)
	(gdbpy_breakpoint_deleted): Adjust.
	* tui/tui-hooks.c (tui_event_create_breakpoint)
	(tui_event_delete_breakpoint, tui_event_modify_breakpoint): Adjust.

	* testsuite/gdb.mi/mi-cli.exp: Adust.
	* testsuite/gdb.mi/mi2-cli.exp: Adust.
	* testsuite/gdb.mi/mi-watch.exp: Adust.
	* testsuite/gdb.mi/mi2-watch.exp: Adust.
	* testsuite/lib/mi-support.exp (mi_expect_stop): Accept breakpoint
	
2010-09-16  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #9540

	gdb/testsuite/
	* gdb.python/py-inferior.exp: Introduce python_pack_char and use
	it in multi-byte pack expressions.

2010-09-16  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.stabs/gdb11479.exp (do_test): Use runto_main.

2010-09-14  Kazu Hirata  <kazu@codesourcery.com>

	Issue #9515
	gdb/gdbserver/
	* linux-low.c (linux_read_fdpic_loadmap): Cast
	PTRACE_GETFDPIC_EXEC and PTRACE_GETFDPIC_INTERP to int.

2010-09-14  Kazu Hirata  <kazu@codesourcery.com>

	Issue #9515
	gdb/gdbserver/
	* linux-low.c (linux_tracefork_child): Cast arg to char * before
	performing an arithmetic operation on it.

2010-09-11  Vladimir Prus  <vladimir@codesourcery.com>

	Introduce --only-system-gdbinit option.
	Issue #9187: can't launch QEMU debugger from IDE.

	gdb/
	* top.h (only_system_gdbinit): Declare.
	* top.c (only_system_gdbinit): Define.
	* main.c (captured_main): Accept and handle --only-system-gdbinit.

2010-09-09  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #8566

	gdb/
	* rs6000-tdep.c (variants): Add e500mc64 entry.

2010-09-09  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/gdbserver/
	* configure.ac: Add --enable-inprocess-agent option.
	* configure: Rebuilt.
	
	* release-notes-csl.xml: Remove wording about fast and static
	tracepoints.

2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Update version number.

2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #9396 - Crash when reading RealView output

	* release-notes-csl.xml (Improved support for debugging RealView
	C++ programs): New note.

	Backport from upstream:

	2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* gnu-v3-abi.c (gnuv3_print_method_ptr): Do not use
	the domain type.
	(gnuv3_make_method_ptr): Likewise.

	2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (read_structure_type): Move processing of
	fields and member functions from here...
	(process_structure_scope): ... to here.

	2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/templates.cc (Empty, FunctionArg): New classes.
	(FunctionArg::method): New function.
	(empty, arg): New variables.
	(main): Call arg.method.
	* gdb.cp/templates.exp (test_template_args): New function.
	(do_tests): Call it.

2010-09-08  Vladimir Prus  <vladimir@codesourcery.com>

	Fix assignment to frozen varobj.
	Issue #9086: Assigning a value to io register crashes GDB.

	gdb/
	* target-descriptions.c (space_value_read): Verify
	we're not lazy bitfield.
	(space_value_write): Use correct offset when writing
	bitfields.
	* varobj.c (varobj_set_value): Permit a frozen varobj.
	After write, arrange for a read-back of all non-read-sensitive
	values and mark read-sensitive ones lazy non-fetched ones.
	(install_new_value): Fix typoe.
	(varobj_update): If a frozen value that was changed by
	-var-assign, report it without recursing further as
	
2010-09-06  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:

	gdb/gdbserver/
	2010-09-06  Pedro Alves  <pedro@codesourcery.com>

	* Makefile.in (install-only): Replace $IPA_DEPFILES with
	"$(IPA_DEPFILES)".

2010-09-03  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/hbreak2.exp: Remove prms_id and bug_id references.

2010-09-03  Kazu Hirata  <kazu@codesourcery.com>

	Issue #8579
	libiberty/
	* pex-win32.c (pex_win32_exec_child): Move calls to _close() to
	the end of the function.

	* release-notes-csl.xml: Document the bug fix above.

2010-08-30  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* ser-pipe.c (pipe_open): Use XZALLOC.

2010-08-30  Pedro Alves  <pedro@codesourcery.com>

	* release-notes-csl.xml: Mention update to 7.2.50.20100814.
	Mention tracing improvements.

2010-08-30  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* cli/cli-cmds.c (quit_command): Catch all errors from
	disconnect_tracing.

2010-08-30  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/cpexprs.exp (test_breakpoint): Continue to test_function
	instead of running to main.  Do not test the main function.
	* gdb/testsuite/gdb.cp/cpexprs.cc (main): Rename to test_function.
	Add new main.

2010-08-27  Kazu Hirata  <kazu@codesourcery.com>

	Issue #8527
	gdb/
	* cli/cli-cmds.c (quit_command): Call disconnect_tracing within
	TRY_CATCH.

2010-08-25  Joseph Myers  <joseph@codesourcery.com>

	Issue #9270

	Revert:

	2007-05-22  Carlos O'Donell  <carlos@codesourcery.com>

	* Makefile.tpl: Add install-pdf to install target deps.
	* Makefile.in: Regenerate.

2010-08-24  Vladimir Prus  <vladimir@codesourcery.com>

	#8580: An extra "0x" in library-loaded GDB/MI record

	gdb/
	* mi/mi-interp.c (mi_solib_loaded, mi_solib_unloaded): Remove
	extra "0x".

2010-08-20  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* i386-tdep.c (i386_validate_tdesc.p): Force non-inlined.

2010-08-18  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* python/python.c (gdbpy_post_event) [_WIN32]: Always fail.
	(gdbpy_initialize_events) [_WIN32]: Don't try creating a pipe.

2010-08-16  Pedro Alves  <pedro@codesourcery.com>

	Merge from FSF.

2010-08-11  Thomas Schwinge  <thomas@codesourcery.com>

	Backport from upstream:

	2010-08-11  Thomas Schwinge  <thomas@codesourcery.com>
	
	gdb/gdbserver/
	* linux-low.c (linux_wait_1): Correctly return the ptid of the child
	after its termination.

2010-07-30  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #9149 - Fix GDB build failure.

	gdb/
	* mi/mi-cmd-var.c (print_varobj): Declare gdb_type.

2010-07-30  Kazu Hirata  <kazu@codesourcery.com>

	Issue #8840
	gdb/
	* dwarf2-frame.c (dwarf2_frame_find_quirks): Check to see if
	s->producer is non-null before dereferencing it.

2010-07-29  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #9071 - Calculate potential varobj side effects in GDB

	gdb/
	* gdbtypes.c (append_composite_type_field_aligned): Set
	TYPE_ANY_FIELD_SENSITIVE.
	* gdbtypes.h (TYPE_ANY_FIELD_SENSITIVE): Define.
	(struct main_type): Add flag_any_field_sensitive.
	* mi/mi-cmd-var.c (print_varobj): Display has-side-effects="1" for
	TYPE_ANY_FIELD_SENSITIVE.

	gdb/doc/
	* gdb.texinfo (GDB/MI Variable Objects): Document has-side-effects.

2010-07-26  Pedro Alves  <pedro@codesourcery.com>

	* release-notes-csl.xml (GDB update): New note mentioning merge
	from FSF.

2010-07-26  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* frame.c (frame_set_unwound_pc_location): Use this_frame->next
	directly instead of get_next_frame.

2010-07-26  Pedro Alves  <pedro@codesourcery.com>

	Merge with our local changes:
	2010-04-19  Doug Evans  <dje@google.com>
	* ser-base.c (generic_readchar): Watch for EOF in read of error_fd.

	as:
	gdb/
	* ser-base.c (read_and_print): Watch for EOF in read of fd.

2010-07-25  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* dward2read.c (load_full_comp_unit): Avoid bogus may be used
	uninitialized warning.

2010-07-25  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* dward2read.c (read_subroutine_type): Only do the 'use the
	specification type' workaround/optimization on RealView.

2010-07-25  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* dward2read.c (load_full_comp_unit): Reduce divergence from
	upstream.

2010-07-23  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/cp-relocate.exp (get_func_address): Reinstate single
	quoting around ${func}.

2010-07-22  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/sepdebug.exp: Adjust per upstream changes.

2010-07-22  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/commands.exp: Adjust expected output.

2010-07-22  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* target-descriptions.c (tdesc_gdb_type): Fix merge.

2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (read_subroutine_type): Improve THIS detection,
	handling DW_AT_object_pointer for RCVT, and workaround GCC PR
	43053.

	gdb/testsuite/
	* gdb.cp/member-ptr.exp, gdb.cp/printmethod.exp,
	gdb.dwarf2/member-ptr-forwardref.exp: Adjust.

2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>
	    Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* dwarf2read.c: Include "c-lang.h", "value.h" and "valprint.h".
	(reading_partial_symbol): New.
	(struct partial_die_info) <has_template_arguments>: New field.
	<num_attrs>: Change type to unsigned char.  <building_fullname>:
	New field.
	(dwarf2_build_psymtabs_hard): Set reading_partial_symbols.  Only
	allocate a CU if we don't have one already.
	(partial_die_full_name): Handle template arguments.
	(dwarf2_psymtab_to_symtab): Clear reading_partial_symbols.
	(load_full_comp_unit): Only read a CU if we don't have one
	already.
	(do_ui_file_peek_last): New.
	(dwarf2_compute_name): Handle template parameters.
	(read_comp_unit): Read abbrevs if required.
	(load_partial_dies): Handle template arguments.
	(find_partial_die): If we have a partial die, also read in the CU.
	(dwarf2_const_value_bytes): New, abstracted out from
	dwarf2_const_value.
	(dwarf2_const_value): Adjust to use dwarf2_const_value_bytes.
	(determine_prefix): Detect and break loops created by RCVT's debug
	info.
	(maybe_queue_comp_unit): Bail out early if reading partial
	symbols.
	(follow_die_offset): Load full CU if we have no dies.

2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (thumb_insn_size, thumb_in_function_epilogue_p)
	(arm_in_function_epilogue_p): New.
	(thumb_insn_size): Delete.
	(arm_gdbarch_init): Install arm_in_function_epilogue_p as
	gdbarch_in_function_epilogue_p callback.

2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>

	Fix gdb1250.exp ERRORs

	gdb/
	* arch-utils.c (default_frame_saved_return_address_p): New.
	* arch-utils.h (default_frame_saved_return_address_p): Declare.

	* arm-tdep.c (arm_frame_saved_return_address_p): New.
	(rm_elf_osabi_sniffer): Install it as
	gdbarch_frame_saved_return_address_p callback.

	* frame.h (frame_saved_register_p): Declare.
	* frame.c (frame_register_unwind_location): Don't allow a NULL
	THIS_FRAME.
	(frame_saved_register_p): New.
	(get_prev_frame_1): Use gdbarch_frame_saved_return_address_p.

	* gdbarch.sh (frame_saved_return_address_p): New.

	* gdbarch.h, gdbarch.c: Regenerate.

2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* frame (inside_main_func): Also check the full symbol table.

	gdb/testsuite/
	* gdb.base/ending-run.exp: Handle stepping out of a wrapped main.
	* gdb.base/sepsymtab.exp: Handle $Super$$ wrapped main.

2010-07-02  Pedro Alves  <pedro@codesourcery.com>

	Revert:
	gdb/
	2010-05-21  Pierre Muller  <muller@ics.u-strasbg.fr>

	* dwarf2read.c (process_die): Also allow DW_TAG_const_type
	and DW_TAG_volatile_type.
	(new_symbol): Likewise.

2010-07-02  Pedro Alves  <pedro@codesourcery.com>

	Merge from FSF (2010-07-02)

2010-07-02  Pedro Alves  <pedro@codesourcery.com>

	Merge from FSF (2010-06-30)

2010-07-01  Pedro Alves  <pedro@codesourcery.com>

	Revert:
	2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (reading_partial_symbols): New.
	(struct comp_unit_head): Remove cu_head_ptr.
	(struct partial_die_info): Add has_template_arguments.
	(dwarf2_build_psymtabs_hard): Set reading_partial_symbols.  Do not
	set cu_head_ptr.
	(allocate_comp_unit): New function, broken out of load_comp_unit.
	(load_comp_unit): Use it.
	(partial_die_full_name): Load full DIEs to get template names.
	(dwarf2_psymtab_to_symtab): Clear reading_partial_symbols.
	(queue_comp_unit): Do not add to the read_in_chain here.
	(maybe_queue_comp_unit): Declare early.  Handle loading full DIEs
	during partial symbol reading.
	(load_full_comp_unit): Use allocate_comp_unit.
	(do_ui_file_peek_last): New function.
	(dwarf2_full_name): Declare early.  Add support for template
	parameters.
	(read_comp_unit): Read abbrevs if necessary.
	(load_partial_dies): Set has_template_arguments.
	(find_partial_die): Handle loaded CUs without partial DIEs.
	(dwarf2_const_value_data): Remove prototype.  Rewrite to not
	require a symbol.
	(dwarf2_const_value_bytes): New function, from dwarf2_const_value.
	(dwarf2_const_value): Use it.
	(follow_die_ref): Check the DIE offset instead of the relative
	address.  Handle loading full DIEs during partial symbol
	processing.

2010-07-01  Pedro Alves  <pedro@codesourcery.com>

	Revert code parts of:
	2010-03-11  Pedro Alves  <pedro@codesourcery.com>

	Issue #7734
	* release-notes-csl.xml: Mention fix.
	gdb/
	* dwarf2read.c (struct die_info): Make num_attrs 8-bit.  Add new
	`building_fullname' field.
	(dwarf2_full_name): Set and clear it when looking for a template's
	parameter types.
	(determine_prefix): Bail out if building the full name of the
	parent die.

2010-06-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/misc.exp (deduce_language_of_main): Take binfile argument.
	Call gdb_load.
	(do_tests): Use gdb_file_cmd instead of gdb_load.

2010-05-12  Julian Brown  <julian@codesourcery.com>

	bfd/
	* cpu-nios2.c: Update licence text to GPLv3 version.
	* elf-bfd.h (elf_target_id): Add NIOS2_ELF_DATA.
	* elf32-nios2.c: Update licence text to GPLv3 version.
	(elf32_nios2_link_hash_table): Replace sym_sec with sym_cache.
	(is_nios2_elf): New macro.
	(nios2_elf32_relax_section): Don't allow relocatable links. Use
	elf_symtab_hdr. Rename shadowed variable declarations.
	(nios2_elf32_relax_delete_bytes): Use elf_symtab_hdr. Add some
	validations.
	(nios2_elf32_relocate_section): Don't use shadowed variable
	declarations.
	(create_got_section): Add validation for htab. Get an
	existing .rela.got section rather than creating a new one.
	(nios2_elf32_create_dynamic_sections): Add validation for htab.
	(nios2_elf32_check_relocs): Use elf_symtab_hdr. Add validation for
	htab. Update for sec_cache changes.
	(nios2_elf32_gc_sweep_hook): Exit early if generating a
	relocatable. Add validation for htab. Use elf_symtab_hdr.
	(nios2_elf32_finish_dynamic_symbol)
	(nios2_elf32_finish_dynamic_sections)
	(nios2_elf32_adjust_dynamic_symbol, allocate_dynrelocs): Add
	validation for htab.
	(nios2_elf32_size_dynamic_sections): Add validation for htab. Use
	is_nios2_elf instead of bfd_get_flavour. Use elf_symtab_hdr.
	(nios2_elf32_link_hash_table_create): Add NIOS2_ELF_DATA argument.
	Initialise sym_cache.abfd instead of sym_sec.abfd.
	(is_nios2_elf_target): Remove.
	(nios2_elf_add_symbol_hook): Use is_nios2_elf instead of
	is_nios2_elf_target.
	(elf_backend_relocs_compatible): Add macro definition.

	gdb/
	* config/nios2/nios2.mt: Remove.
	* configure.tgt: Update.
	* gdbserver/Makefile.in (clean): Remove nios2-linux.c.
	* gdbserver/linux-nios2-low.c (init_registers_nios2_linux): Add
	declaration.
	(nios2_arch_setup): New. Call init_registers_nios2_linux.
	(nios2_get_pc, nios2_set_pc, nios2_reinsert_addr)
	(nios2_collect_register, nios2_supply_register, nios2_fill_gregset)
	(nios2_store_gregset): Add regcache argument.
	(the_low_target): Add nios2_arch_setup.
	* nios2-tdep.c (linux-tdep.h): Include.
	(register_info): Delete type field.
	(nios2_register_info_table): Remove uses of builtin types.
	(nios2_dwarf_reg_to_regnum): Add gdbarch argument.
	(nios2_read_memory_unsigned_integer): Remove unused function.
	(nios2_register_name): Add gdbarch argument.
	(nios2_register_virtual_size): Remove unused function.
	(nios2_register_type): Use per-gdbarch uint32 type.
	(nios2_match_sequence): Add gdbarch argument. Update memory reads
	for byte-ordering changes.
	(nios2_analyze_prologue): Add gdbarch argument. Use this_frame not
	next_frame. Update for byte order changes.
	(nios2_skip_prologue): Add gdbarch argument. Rewrite, based on MIPS.
	(nios2_breakpoint_from_pc): Add gdbarch argument. Fix formatting.
	(nios2_convert_register_p): Add gdbarch argument.
	(nios2_return_value): Likewise. Also add function value argument,
	and update uses of type.
	(nios2_unwind_dummy_id): Rename to...
	(nios2_dummy_id): This. Update to take this_frame rather than
	next_frame.
	(nios2_push_dummy_call): Fix for byte ordering changes.
	(nios2_unwind_pc): Update for builtin type changes.
	(nios2_frame_unwind_cache): Update to use this_frame rather than
	next_frame.
	(nios2_frame_this_id): Likewise.
	(nios2_frame_prev_register): Likewise. Rework, based on MIPS.
	(nios2_frame_base_address): Move definition.
	(nios2_frame_unwind): Initialise new fields.
	(nios2_frame_sniffer): Remove.
	(nios2_stub_frame_cache): Update to use this_frame rather than
	next_frame. Don't use current_gdbarch.
	(nios2_stub_frame_this_id): Update to use this_frame rather than
	next_frame.
	(nios2_stub_frame_prev_register): Update to use this_frame rather
	than next_frame.
	(nios2_stub_frame_sniffer): Move definition. Update.
	(nios2_stub_frame_unwind): Initialise new fields.
	(nios2_stub_frame_base_address): New.
	(nios2_stub_frame_base): New.
	(nios2_fetch_instruction): Add gdbarch argument. Update for byte
	ordering changes.
	(nios2_get_next_pc): Pass gdbarch to call to
	nios2_fetch_instruction.
	(nios2_software_single_step): Update for address-space changes.
	(nios2_gdbarch_init): Remove DWARF1 initialisation. Update frame
	sniffing/unwinding bits.

	opcodes/
	* nios2-dis.c: Update licence text to GPLv3 version.
	* nios2-opc.c: Likewise.

2010-05-12  Julian Brown  <julian@codesourcery.com>

	Merge NIOS2 support for GDB
	NOT ASSIGNED TO FSF
	COPYRIGHT ALTERA

	include/
	* dis-asm.h (print_insn_big_nios2, print_insn_little_nios2): Add
	prototypes.
	* elf/nios2.h: New file.
	* opcode/nios2.h: New file.
	* opcode/nios2-isa.h: New file.
    
	bfd/
	* archures.c: Additions for Nios II.
	* Makefile.am: Ditto.
	* targets.c: Ditto.
	* reloc.c: Ditto.
	* configure.in: Ditto.
	* cpu-nios2.c: New file.
	* elf32-nios2.c: New file.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* config.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* doc/Makefile.in: Regenerate.

	gdb/
	* testsuite/config/nios2-iss.exp: New file.
	* regformats/nios2-linux.dat: New file.
	* nios2-tdep.c: New file.
	* configure.tgt: Additions for Nios II.
	* gdbserver/Makefile.in: Ditto.
	* gdbserver/configure.srv: Handle nios2*-*-linux*.
	* gdbserver/linux-nios2-low.c: New file.
	* config/nios2/nios2.mt: New file.
	* features/nios2-linux.xml: New file.
	* features/Makefile (WHICH): Add nios2-linux.
	* features/nios2-cpu.xml: New file.

	opcodes/
	* configure.in: Additions for Nios II.
	* disassemble.c: Ditto.
	* opcodes/Makefile.am: Ditto.
	* opcodes/nios2-dis.c: New file.
	* opcodes/nios2-opc.c: New file.
	* opcodes/Makefile.in: Regenerate.
	* opcodes/config.in: Regenerate.
	* opcodes/aclocal.m4: Regenerate.
	* opcodes/configure: Regenerate.

2010-04-20  Maciej W. Rozycki <macro@codesourcery.com>

	bfd/
	* cpu-mips.c (arch_info_struct): Fix the entry for xlr.

2010-04-20  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #8402

	* release-notes-csl.xml: New note.

	gdb/
	* dwarf2read.c (dwarf_maybe_concatenate): New function.
	(dwarf_decode_lines): Use it.
	(dwarf2_start_subfile): Likewise.

2010-04-12  Maxim Kuvyrkov  <maxim@codesourcery.com>

	* release-notes-csl.xml: Fix whitespaces.

2010-04-08  Pedro Alves  <pedro@codesourcery.com>

	Issue #7887.

	* release-notes-csl.xml: Mention fixes.

2010-04-08  Pedro Alves  <pedro@codesourcery.com>

	Issue #7887, part 2.

	gdb/
	* dwarf2read.c (read_func_scope): Always add inline functions as
	functions instead of lexical scopes, even if there are no
	DW_AT_call_line or DW_AT_call_file attributes.
	* frame.c (find_frame_sal): Use inline_call_site.  When inline
	call site info is missing, fallback to the non-inline code path,
	instead of just setting the sal's PC.
	* infrun.c (handle_inferior_event): Mention how many inline
	functions were skipped.
	* infcmd.c (step_once): When stepping into an inline function,
	there's no inline call site info, keep stepping until the line
	changes.
	* inline-frame.c (inline_call_site): New.
	* inline-frame.h (inline_call_site): Declare.

	gdb/testsuite/
	* gdb.opt/inline-bt.exp: Don't check if skip_inline_frame_tests is
	set.
	* gdb.opt/inline-locals.exp (no_frames): Delete.  Assume inline
	backtracing support.
	* gdb.opt/inline-bt.c, gdb.opt/inline-locals.c,
	gdb.opt/inline-markers.c, gdb.opt/inline-markers.c: Define inline
	for armcc.

2010-04-08  Pedro Alves  <pedro@codesourcery.com>

	Issue #7887, part 1.

	gdb/
	* buildsym.c (block_physically_contained_in): New.
	(fixup_block_superblock): New.
	* buildsym.h (fixup_block_superblock): Declare.
	* dwarf2read.c (dwarf2_finish_block): New.
	(read_func_scope, read_lexical_block_scope): Use it.

	gdb/testsuite/
	* gdb.dwarf2/dw2-fixup-superblock.c: New.
	* gdb.dwarf2/dw2-fixup-superblock.exp: New.

2010-04-08  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:

	gdb/
	2010-03-24  Daniel Jacobowitz  <dan@codesourcery.com>
	* dwarf2-frame.c (dwarf2_frame_find_quirks): Use producer_is_realview.
	* dwarf2read.c (load_full_comp_unit): Read DW_AT_producer.
	(read_structure_type): For RealView, set TYPE_STUB on structures with
	no byte size and no children.
	(read_subroutine_type): Mark functions as prototyped by default.
	* symtab.c (producer_is_realview): New function.
	* symtab.h (expand_line_sal): Fix declaration formatting.
	(producer_is_realview): Declare.

	gdb/testsuite/
	2010-03-24  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/callfuncs.exp (do_function_calls): Add XFAILs for RealView.
	* gdb.base/ptype.exp (ptype_maybe_prototyped): Add overprototyped
	argument.  Handle "short" and "long".
	(Top level): Pass overprototyped output for old_fptr and xptr.

2010-04-08  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:
	gdb/
	2010-03-31  Richard Earnshaw  <rearnsha@arm.com>

	* arm-tdep.c (thumb_get_next_pc_raw): Correctly detect TBH
	instructions.  Use the PC+4 if the base of the TBB or TBH is the 
	PC register.

2010-04-06  Joseph Myers  <joseph@codesourcery.com>

	Issue #8335

	gdb/
	* mips-linux-nat.c (mips64_linux_regsets_fetch_registers): Take
	ops parameter.  Update calls to super_fetch_registers.
	(mips64_linux_regsets_store_registers): Take ops parameter.
	Update calls to super_store_registers.
	(mips64_linux_fetch_registers): Update call to
	mips64_linux_regsets_fetch_registers.
	(mips64_linux_store_registers): Update call to
	mips64_linux_regsets_store_registers.

2010-03-31  Joseph Myers  <joseph@codesourcery.com>

	NOT ASSIGNED TO FSF
	COPYRIGHT CAVIUM
	Merge from Cavium binutils-2.16.1.diff.gz:

	include/opcode/
	* mips.h (M_SAA_AB, M_SAAD_AB): New.

	opcodes/
	* mips-opc.c (mips_builtin_opcodes): Add saa and saad
	instructions.

	Merge from Sourcery G++ binutils:
	2007-04-23  Richard Sandiford  <richard@codesourcery.com>

	Adapted from a patch by Cavium Networks.

	opcodes/
	* mips-dis.c (octeon_use_unalign): New variable.
	(mips_cp0_names_octeon, mips_cp0sel_names_octeon): New tables.
	(mips_arch_choices): Add an octeon entry.
	(parse_mips_dis_option): Handle octeon-useun and no-octeon-useun.
	(print_insn_mips): Skip aliases of uld, ulw, usd and usw when
	unaligned octeon instructions are allowed.  Print ldr, lwr,
	sdr and swr as nops in that case.
	(print_mips_disassembler_options): Print help for octeon-useun and
	no-octeon-useun.
	* mips-opc.c (IOCTEON): Define.
	(mips_builtin_opcodes): Add Octeon syncio, syncioall, uld, ulw,
	usd and usw instructions.

2010-03-22  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from mainline:

	2010-03-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* gdb.python/Makefile.in (EXECUTABLES): Add py-mi.
	* gdb.python/py-mi.exp (binfile): Rename to py-mi.

2010-03-21  Maxim Kuvyrkov  <maxim@codesourcery.com>

	gdb/testsuite/
	* gdb.base/interrupt.exp: Workaround problem of sending EOF on Windows
	hosts.

2010-03-18  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #8154 - ColdFire uClinux binary relocation.

	gdb/
	* m68klinux-tdep.c (m68k_uclinux_init_abi): New function.
	(_initialize_m68k_linux_tdep): Call it for GDB_OSABI_UCLINUX.

2010-03-18  Andrew Stubbs  <ams@codesourcery.com>

	gdb/
	* sh-linux-tdep.c (sh_linux_init_abi): Remove FDPIC bits.
	(sh_uclinux_init_abi): New function.
	(_initialize_sh_linux_tdep): Handle GDB_OSABI_UCLINUX.

2010-03-15  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (b7s3_reg): New macro.
	(micromips_decode_reg3): New function.
	(micromips_next_pc): Decode the 3-bit register argument of
	BEQZ16 and BNEZ16 correctly.

	* release-notes-csl.xml (microMIPS single stepping bug fix):
	New.

2010-03-12  Pedro Alves  <pedro@codesourcery.com>

	Issue #7924.

	* release-notes-csl.xml: Mention shared library support.

	gdb/	
	* Makefile.in (ALL_TARGET_OBS): Remove solib-target.o.
	(SFILES): Remove solib-null.c, add solib-target.c.
	(COMMON_OBS): Remove solib-null.o, add solib-target.o.
	(ALLDEPFILES): Remove solib-target.c.
	* solib.h (null_so_ops): Delete.
	* arm-linux-tdep.c: Include solib-target.h.
	(arm_uclinux_init_abi): Install solib_target_so_ops instead of
	null_so_ops.
	* solib-target.c (_initialize_solib_target): Set
	current_target_so_ops to solib_target_so_ops if not already set.
	* solib-null.c: Delete.

2010-03-12  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* Makefile.in (ALL_TARGET_OBS): Add solib-fdpic.o.

2010-03-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_breakpoint_from_pc): Set microMIPS
	breakpoint code to 5.

2010-03-11  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_breakpoint_from_pc): Halfword-swap the
	encoding of the 32-bit little-endian microMIPS breakpoint.

	* release-notes-csl.xml (microMIPS breakpoint bug fix): New.

2010-03-11  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_breakpoint_from_pc): Correct names of
	little-endian microMIPS breakpoints.

2010-03-11  Pedro Alves  <pedro@codesourcery.com>

	Issue #7734

	gdb/
	* dwarf2read.c (inherit_abstract_dies): Handle origin die's
	compilation unit being different from target die's.

2010-03-11  Pedro Alves  <pedro@codesourcery.com>

	Issue #7734

	* release-notes-csl.xml: Mention fix.

	gdb/
	* dwarf2read.c (struct die_info): Make num_attrs 8-bit.  Add new
	`building_fullname' field.
	(dwarf2_full_name): Set and clear it when looking for a template's
	parameter types.
	(determine_prefix): Bail out if building the full name of the
	parent die.

2010-03-10  Andrew Stubbs  <ams@codesourcery.com>

	gdb/
	* solib-fdpic.c: Include stdint.h instead of elf.h.
	(Elf32_Addr, Elf32_Half, Elf32_Word): New types.

2010-03-09  Andrew Stubbs  <ams@codesourcery.com>

	Fix broken commit.

	* solib-fdpic.c: New file.
	* solib-fdpic.h: New file.

2010-03-09  Andrew Stubbs  <ams@codesourcery.com>

	gdb/
	* configure.tgt: Add support for sh*-*-uclinux*.
	(gdb_target_obs): Add solib-fdpic.o for sh*-*-linux and sh*-*-uclinux.
	* remote.c (PACKET_qXfer_fdpic): New enum value.
	(remote_protocol_features): Add qXfer:fdpic:read packet.
	(remote_xfer_partial): Support TARGET_OBJECT_FDPIC.
	(_initialize_remote): Add set/show remote read-fdpic-loadmap command.
	* sh-linux-tdep.c: Include elf/sh.h, elf-bfd.h, solib.h, solist.h and
	solib-fdpic.h.
	(sh_linux_init_abi): Detect FDPIC binaries and enable solib-fdpic.
	* solib-fdpic.c: New file.
	* solib-fdpic.h: New file.
	* target.h (enum target_object): Add TARGET_OBJECT_FDPIC.

	gdb/gdbserver:
	* configure.srv: Add support for sh*-*-uclinux*.
	* linux-low.c (struct elf32_fdpic_loadseg): New type.
	(struct elf32_fdpic_loadmap): New type.
	(linux_read_fdpic_loadmap): New function.
	(linux_target_ops): Add linux_read_fdpic_loadmap.
	* server.c (handle_query): Support qXfer:fdpic:read packet.
	* target.h (struct target_ops): Add read_fdpic_loadmap.

	include/
	* elf/sh.h (EF_SH_PIC, EF_SH_FDPIC): New defines.
	(R_SH_LAST_INVALID_RELOC_5, R_SH_GOT20): New relocations.
	(R_SH_GOTOFF20, R_SH_GOTFUNCDESC, R_SH_GOTFUNCDESC20): Likewise.
	(R_SH_GOTOFFFUNCDESC, R_SH_GOTOFFFUNCDESC20): Likewise.
	(R_SH_FUNCDESC, R_SH_FUNCDESC_VALUE): Likewise.
	(R_SH_FIRST_INVALID_RELOC_6, R_SH_LAST_INVALID_RELOC_6): Likewise.

2010-03-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7952 - ARM uClinux debugging.

	gdb/
	* arm-linux-tdep.c (arm_uclinux_init_abi): New function.
	(_initialize_arm_linux_tdep): Register it for GDB_OSABI_UCLINUX.
	* configure.tgt: Set a default uClinux OSABI.
	* defs.h (enum gdb_osabi): Add GDB_OSABI_UCLINUX.
	* m68klinux-tdep.c (_initialize_m68k_linux_tdep): Register
	m68k_linux_init_abi for GDB_OSABI_UCLINUX also.
	* osabi.c (gdb_osabi_names): Add uClinux.
	* solib-null.c (null_so_ops): Make global.
	* solib.h (null_so_ops): Declare.

	gdb/gdbserver/
	* linux-arm-low.c (HAS_NOMMU): Define.
	(arm_arch_setup): Add <osabi> to target.xml.
	* server.c (get_features_xml): Make global.
	* server.h (get_features_xml): Declare.

2010-03-07  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (GDB asynchronous mode fix): Fix
	capitalization of title.

2010-03-06  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:
	2010-03-06  Simo Melenius  <simo.melenius@iki.fi>

	* linux-low.c (linux_wait_for_lwp): Fetch the regcache after
	switching the current inferior, not before.

2010-03-05  Sandra Loosemore  <sandra@codesourcery.com>

	Issue #7951

	* release-notes-csl.xml (GDB MDI target support): New note.

2010-03-04  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7932 - Incorrectly ARM mode disassembly

	gdb/
	* arm-tdep.c (arm_find_mapping_symbol): Move v7-M check from here ...
	(arm_pc_is_thumb): ... to here.

2010-03-03  Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #7871
	gdb/
	* mips-tdep.c (mips_elf_make_msymbol_special): Ignore
	non-function or synthetic symbols.

	* release-notes-csl.xml (Breakpoint bug fix): New.

2010-03-02  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7901 - Breakpoints report SIGTRAP

	2010-03-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* progspace.c (update_address_spaces): Update inferior address spaces
	also.

2010-03-01  Nathan Froyd  <froydnj@codesourcery.com>

	* release-notes-csl.xml: New note.

	gdb/
	* rs6000-tdep.c (gdb_print_insn_powerpc): Disassemble e500
	instructions if debugging an e500 binary.

2010-02-26  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (Thumb-2 single stepping): Update note.

	gdb/
	* arm-tdep.c (thumb_get_next_pc): Correct conditional branch opcode.

2010-02-25  Daniel Jacobowitz  <dan@codesourcery.com>
	    Pedro Alves  <pedro@codesourcery.com>

	libiberty/
	* cygpath.c (IMAGE_IMPORT_MODULE_DIRECTORY)
	(PIMAGE_IMPORT_MODULE_DIRECTORY, IMAGE_DIRECTORY_ENTRY_IMPORT): New.
	(msvcrt_dll): Use GetModuleHandle instead of
	LoadLibrary.  Check the import table to figure out which C
	runtime to use.
	(msvcrt_stat): New function.  Check for _stat32, _stat64i32,
	and _stat.
	(stat): Use msvcrt_stat.

2010-02-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #7798 - Fix debugging with sysroot-gdbserver.

	gdb/
	* solib-svr4.c (read_program_header): Support type == -1 to read
	all program headers.
	(bfd_read_program_headers): New function.
	(svr4_exec_displacement): Verify that AT_ENTRY is associated with
	exec_bfd.

2010-02-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from upstream:

	2010-02-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* symfile.c (find_lowest_section): Include SEC_ALLOC sections.

2010-02-24  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips32_bc1_pc): New function.
	(mips32_next_pc): Use it to handle floating point condition
	branches.  Handle BC1ANY2F, BC1ANY2T, BC1ANY4F, BC1ANY4T,
	BPOSGE32 and BPOSGE64 instructions.
	(mips32_instruction_has_delay_slot): Fix the encoding of
	BPOSGE32 and BPOSGE64 instructions.

	* release-notes-csl.xml (DSP and MIPS-3D ASE single stepping):
	New.

2010-02-24  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (b0s10_imm, b2s3_cc, b0s26_imm): New macros.
	(micromips_relative_offset7): New function.
	(micromips_relative_offset10): Likewise.
	(micromips_relative_offset16): Likewise.
	(micromips_pc_insn_size): Likewise.
	(micromips_bc1_pc): Likewise.
	(micromips_next_pc): Replace stub with proper implementation.
	(micromips_deal_with_atomic_sequence): Use
	micromips_relative_offset7 and micromips_relative_offset16.

	* release-notes-csl.xml (microMIPS debugging): New.

2010-02-24  Maciej W. Rozycki  <macro@codesourcery.com>

	* release-notes-csl.xml
	(FP condition branch single stepping bug fix): New.

2010-02-23  Maxim Kuvyrkov  <maxim@codesourcery.com>

	gdb/gdbserver/
	* configure.ac: Check for libdl.  If it is not available link against
	static libthread_db.
	* configure: Regenerate.

2010-02-23  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (micromips_deal_with_atomic_sequence): Rewrite
	POOL32Axf comment for clarity.
	(micromips_instruction_has_delay_slot): Likewise.

2010-02-23  Pedro Alves  <pedro@codesourcery.com>

	Issue #7667 - read watchpoints fix

	* release-notes-csl.xml: Document fix.

	Backport from upstream:

	2010-02-22  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* breakpoint.c (insert_bp_location): If inserting the read
	watchpoint failed, fallback to an access watchpoint.
	(bpstat_check_watchpoint): Stop for read watchpoint triggers even
	if the value changed, if not watching the same memory for writes.
	(watchpoint_locations_match): Add comment.
	(update_global_location_list): Copy the location's watchpoint type.
	* i386-nat.c (i386_length_and_rw_bits): It's an internal error to
	handle read watchpoints here.
	(i386_insert_watchpoint): Read watchpoints aren't supported.
	* remote.c (remote_insert_watchpoint): Return 1 for unsupported
	packets.
	* target.h (target_insert_watchpoint): Update description.

	gdbserver/
	* i386-low.c (i386_length_and_rw_bits): Throw a fatal error if
	handing a read watchpoint.
	(i386_low_insert_watchpoint): Read watchpoints aren't supported.

	gdb/testsuite/
	* gdb.base/watch-read.c, gdb.base/watch-read.exp: New files.

2010-02-22  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips32_next_pc): Fix floating point condition
	code mask.

2010-02-22  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (micromips_deal_with_atomic_sequence): Swap
	BGEZALS and BLTZALS in comment.
	(micromips_instruction_has_delay_slot): Likewise.

2010-02-22  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips32_scan_prologue): Only update the immediate
	load adjustment if still within the prologue.

	* release-notes-csl.xml (Function breakpoint bug fix): New.

2010-02-20  Pedro Alves <pedro@codesourcery.com>
            Maciej W. Rozycki <macro@codesourcery.com>

	gdb/
	* remote.c (remote_kill): Handle errors from the kill packet
	gracefully; fix an internal error.

2010-02-19  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #2186 - Thumb-2 single stepping

	* release-notes-csl.xml (Thumb-2 single stepping): New note.

2010-02-19  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* solib-svr4.c (bfd_lookup_symbol): Get target-specific symbol
	address adjustments.

2010-02-18  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): New note.

2010-02-18  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2loc.c (find_location_expression): Mask addresses before
	comparing.

2010-02-17  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/store.exp (up_set): Skip assignment if printing fails.

2010-02-17  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* configure.ac: Link to libdl for rtos-thread.c.

2010-02-17  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_breakpoint_from_pc): Correct size
	calculation for microMIPS breakpoints.  Fix formatting.

2010-02-17  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_remote_breakpoint_from_pc): New function.
	(mips_gdbarch_init): Install it.

	gdb/doc/
	* gdb.texinfo (Architecture-Specific Protocol Details): Document
	MIPS breakpoint types.

2010-02-16  Maciej W. Rozycki  <macro@codesourcery.com>

	Backport from mainline:

	gdb/
	2010-02-01  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdbarch.sh: Set LANG and LC_ALL to C, not c.
	(remote_breakpoint_for_pc): Correct invalid_p check.
	* gdbarch.c: Regenerated.

	gdb/
	2010-02-01  Daniel Jacobowitz  <dan@codesourcery.com>
	* arch-utils.c (default_remote_breakpoint_from_pc): New function.
	* arch-utils.h (default_remote_breakpoint_from_pc): Declare.
	* gdbarch.c, gdbarch.h: Regenerated.
	* gdbarch.sh (remote_breakpoint_from_pc): New architecture method.
	* remote.c (remote_insert_breakpoint, remote_insert_hw_breakpoint): Use
	gdbarch_remote_breakpoint_from_pc.

	gdb/doc/
	2010-02-01  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.texinfo (Architecture-Specific Protocol Details): New section.
	Document ARM breakpoint types.
	(Register Packet Format): Move into the new section.
	(Packets): Describe the KIND argument for Z0, z0, Z1, and z1 packets.

2010-02-16  Daniel Jacobowitz  <dan@codesourcery.com>

	libiberty/
	* cygpath.c (cygpath): If cygpath exits, retry on the next request.

2010-02-16  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (read_subroutine_type): Add a comment for
	GCC PR 43053.  Also read structure types before contained
	methods.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2010-01-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* target.c (update_current_target): s/inferiour/inferior/.
	(target_mourn_inferior): Likewise.

	gdb/testsuite/
	2010-01-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* lib/mi-support.exp (mi_send_resuming_command_raw):
	s/inferiour/inferior/.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2010-02-02  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (micromips_scan_prologue): Use current_gdbarch if
	no frame has been passed.

	gdb/
	2010-01-29  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (micromips_scan_prologue): Fix a typo.

	gdb/
	2010-01-28  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (fetch_mips_16): Use unmake_compact_addr.

	Merge microMIPS changes from binutils:

	bfd/
	2010-01-28  Joseph Myers  <joseph@codesourcery.com>
	* elfxx-mips.c (LA25_LUI_MICROMIPS, LA25_J_MICROMIPS,
	LA25_ADDIU_MICROMIPS): Remove.
	(LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2, LA25_J_MICROMIPS_1,
	LA25_J_MICROMIPS_2, LA25_ADDIU_MICROMIPS_1,
	LA25_ADDIU_MICROMIPS_2): Define.
	(mips_elf_create_la25_stub): Use these macros to generate stubs 16
	bits at a time.

	bfd/
	2010-01-20  Joseph Myers  <joseph@codesourcery.com>
	* bfd-in2.h: Regenerate.
	* elf32-mips.c (elf_micromips_ctor64_howto): Remove.
	(elf_micromips_howto_table_rel): Remove various relocations.
	(mips_elf_gprel32_reloc): Don't handle R_MICROMIPS_GPREL32.
	(mips32_64bit_reloc): Don't handle R_MICROMIPS_64 and
	R_MICROMIPS_32.
	(micromips_reloc_map): Remove various relocations.
	(bfd_elf32_bfd_reloc_type_lookup): Don't handle microMIPS
	specially.
	* elf64-mips.c (micromips_elf64_howto_table_rel,
	micromips_elf64_howto_table_rela, micromips_reloc_map): Remove
	various relocations.
	* elfn32-mips.c (elf_micromips_howto_table_rel,
	elf_micromips_howto_table_rela, micromips_reloc_map): Remove
	various relocations.
	* elfxx-mips.c (TLS_RELOC_P): Don't handle various microMIPS
	relocations.
	(micromips_reloc_shuffle_p): Don't exclude any microMIPS data
	relocations.
	(mips_elf_initialize_tls_slots): Don't handle microMIPS specially.
	(mips_elf_calculate_relocation, _bfd_mips_elf_check_relocs,
	mips_elf_adjust_addend): Don't handle various microMIPS
	relocations.
	* libbfd.h: Regenerate.
	* reloc.c (BFD_RELOC_MICROMIPS_64, BFD_RELOC_MICROMIPS_32,
	BFD_RELOC_MICROMIPS_GPREL32, BFD_RELOC_MICROMIPS_TLS_DTPMOD32,
	BFD_RELOC_MICROMIPS_TLS_DTPREL32,
	BFD_RELOC_MICROMIPS_TLS_DTPMOD64,
	BFD_RELOC_MICROMIPS_TLS_DTPREL64, BFD_RELOC_MICROMIPS_TLS_TPREL32,
	BFD_RELOC_MIPS_TLS_TPREL_HI16): Remove.

	include/elf/
	2010-01-20  Joseph Myers  <joseph@codesourcery.com>
	* mips.h (R_MICROMIPS_32, R_MICROMIPS_REL32, R_MICROMIPS_GPREL32,
	R_MICROMIPS_64, R_MICROMIPS_TLS_DTPMOD32,
	R_MICROMIPS_TLS_DTPREL32, R_MICROMIPS_TLS_DTPMOD64,
	R_MICROMIPS_TLS_DTPREL64, R_MICROMIPS_TLS_TPREL32,
	R_MICROMIPS_TLS_TPREL64, R_MICROMIPS_GLOB_DAT): Remove.

	bfd/
	2010-01-14  Joseph Myers  <joseph@codesourcery.com>
	* elfxx-mips.c (mips_elf_calculate_relocation): Expect low bit of
	$t9 to be set of microMIPS _gp_disp relocations.

	bfd/
	2010-01-14  Joseph Myers  <joseph@codesourcery.com>
	* elfxx-mips.c (LA25_LUI_MICROMIPS, LA25_J_MICROMIPS,
	LA25_ADDIU_MICROMIPS): Define.
	(mips_elf_add_la25_intro, mips_elf_add_la25_trampoline): Adjust
	value of stub symbol if target is a microMIPS function.
	(mips_elf_create_la25_stub): Create microMIPS stub if target is a
	microMIPS function.

	opcodes/
	2010-01-13  Chao-ying Fu  <fu@mips.com>
	mips-dis.c (is_micromips_mode_p): Rewrite.

	bfd/
	2010-01-13  Catherine Moore  <clm@codesourcery.com>
	* elfxx-mips.c (mips_elf_calculate_relocation): Check for a PLT
	output section for target_is_micromips_code_p.

	opcodes/
	2010-01-13  Chao-ying Fu  <fu@mips.com>
	* mips-dis.c (is_micromips_mode_p): Improve disassembly for
	microMIPS.

	bfd/
	2010-01-06  Catherine Moore  <clm@codesourcery.com>
	            Chao-ying Fu <fu@mips.com>
	* elfxx-mips.c (mips_elf_calculate_relocation): Use correct
	mask for jalx.
	
	bfd/
	2009-12-17  Joseph Myers  <joseph@codesourcery.com>
	* elfxx-mips.c (mips_elf_calculate_relocation): Do not mark calls
	to undefined weak functions as needing jalx.

	Merge from micromips branch:

	gdb/
	2009-10-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (b1s4_imm): New macro.
	(micromips_scan_prologue): Handle ADDIUS5 $sp, imm.
	(heuristic_proc_start): Likewise.
	(micromips_in_function_epilogue_p): Make it explicit only
	positive ADDIUSP offsets are expected.

	gdb/
	2009-10-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (mips_make_symbol_special): Also adjust the start
	of the block for microMIPS symbols.

	gdb/
	2009-10-29  Nathan Froyd  <froydnj@codesourcery.com>
	* mips-tdep.c (mips_adjust_breakpoint_address): Do function bounds
	checking in common code.  Fix check for whether the boundary should
	be adjusted.

	gdb/
	2009-10-23  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (micromips_deal_with_atomic_sequence): Handle
	BGEZALS and BLTZALS.
	(micromips_instruction_has_delay_slot): Likewise.

	include/opcode/
	2009-07-17  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h (INSN_MUCON): Rename to...
	(INSN_MCU): ... this.
	Update comments for the MuCon to MCU rename throughout.

	opcodes/
	2009-07-17  Maciej W. Rozycki  <macro@codesourcery.com>
	* micromips-opc.c (MC): Replace INSN_MUCON with INSN_MCU.
	* mips-opc.c (MC): Likewise.
	* mips-dis.c (mips_arch_choices): Likewise.

	gdb/
	2009-07-17  Maciej W. Rozycki  <macro@codesourcery.com>
	Issue #5110
	* mips-tdep.c (mips_micro_frame_this_id): Mark the outermost
	frame.

	include/opcode/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h (OP_MASK_3BITPOS, OP_SH_3BITPOS): New macros.
	(OP_MASK_OFFSET12, OP_SH_OFFSET12): Likewise.
	(INSN_ASE_MASK): Add the MuCon bit.
	(INSN_MUCON): New macro.
	(M_ACLR_AB, M_ACLR_OB, M_ASET_AB, M_ASET_OB): New enum values.

	opcodes/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-dis.c (mips_arch_choices): Enable MuCon for "mips32r2"
	and "mips64r2".
	(print_insn_args): Handle MuCon.
	* micromips-opc.c (MC): New macro.
	(micromips_opcodes): Add "aclr", "aset" and "iret".
	* mips-opc.c (MC): New macro.
	(mips_builtin_opcodes): Add "aclr", "aset" and "iret".

	gdb/
	2009-07-13  Nathan Froyd  <froydnj@codesourcery.com>
	* remote.c (MIN_REMOTE_PACKET_SIZE): Adjust for 64-bit targets.

	gdb/testsuite/
	2009-07-13  Nathan Froyd  <froydnj@codesourcery.com>
	* gdb.base/remote.exp: Adjust messages.

	include/opcode/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h (INSN2_MOD_31): Rename to...
	(INSN2_READ_GPR_31): ... this.
	(INSN2_UNCOND_BRANCH, INSN2_COND_BRANCH): New macros.

	opcodes/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* micromips-opc.c (MOD_31): Remove macro.
	(UBR, CBR, RD_31): New macros.
	(micromips_opcodes): Add branch annotation for "beqzc", "bnezc",
	"jraddiusp" and "jrc".  Update register use annotation for
	"jraddiusp", 16-bit "jalr" and 16-bit "jalrs".
	* mips-dis.c (print_insn_micromips): Add branch instruction type
	and delay slot determination.

	opcodes/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-dis.c (print_insn_mips): Correct branch instruction type
	determination.

	include/opcode/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h (MIPS16_INSN_UNCOND_BRANCH): New macro.
	(MIPS16_INSN_BRANCH): Rename to...
	(MIPS16_INSN_COND_BRANCH): ... this.

	opcodes/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-dis.c (print_mips16_insn_arg): Remove branch instruction
	type and delay slot determination.
	(print_insn_mips16): Extend branch instruction type and delay
	slot determination to cover all instructions.
	* mips16-opc.c (BR): Remove macro.
	(UBR, CBR): New macros.
	(mips16_opcodes): Update branch annotation for "b", "beqz",
	"bnez", "bteqz" and "btnez".  Add branch annotation for "jalrc"
	and "jrc".

	gdb/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (micromips_scan_prologue): Preinitialise v1_off.

	gdb/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (mips_fetch_instruction): Bail out on an invalid
	ISA.

	include/opcode/
	2009-06-30  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h: Correct description of the "mX" microMIPS instruction
	argument specifier.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (micromips_scan_prologue): Use zero-extension
	instead of sign-extension for the address offset of the SWSP
	instruction.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.h (mips_isa): New enum.
	(gdbarch_tdep): Add mips_isa.
	(mips_pc_is_mips16): Update declaration.
	(mips_pc_is_mips, mips_pc_is_micromips): New declarations.
	* mips-tdep.c (mips_compression_mips16): New variable.
	(mips_compression_micromips): Likewise.
	(mips_compression_strings): Likewise.
	(mips_compression_string): Likewise.
	(is_mips16_isa, is_micromips_isa): New functions.
	(is_mips16_addr): Rename to...
	(is_compact_addr): ... this.
	(unmake_mips16_addr): Likewise to...
	(unmake_compact_addr): ... this.
	(is_mips_addr, is_mips16_addr, is_micromips_addr): New
	functions.
	(mips_elf_make_msymbol_special): Handle microMIPS.
	(msymbol_is_special): Rename to...
	(msymbol_is_mips16): ... this.
	(mips_make_symbol_special, mips_pc_is_mips16): Update
	accordingly.
	(msymbol_is_mips, msymbol_is_micromips): New functions.
	(mips_pc_is_mips, mips_pc_is_micromips): Likewise.
	(mips_pc_isa): Likewise.
	(mips_fetch_instruction): Pass return status instead of printing
	an error message if requested.  Handle microMIPS.
	(micromips_op): New macro.
	(b0s4_imm, b0s5_imm, b0s5_reg, b0s7_imm, b1s9_imm): Likewise.
	(b4s2_regl, b5s5_op, b5s5_reg, b6s4_op): Likewise.
	(b0s6_op, b0s11_op, b0s12_imm, b0s16_imm, b6s10_ext): Likewise.
	(b11s5_reg, b12s4_op): Likewise.
	(mips_insn_size): New function.
	(mips32_next_pc): Update mips_fetch_instruction() call.
	(micromips_next_pc): New function.
	(unpack_mips16): Update mips_fetch_instruction() call.
	(mips_next_pc): Update mips_pc_is_mips16() call.  Handle
	microMIPS.
	(mips16_scan_prologue): Update mips_fetch_instruction() call.
	(mips_insn16_frame_sniffer): Update mips_pc_is_mips16() call.
	(mips_insn16_frame_base_sniffer): Likewise.
	(micromips_decode_imm9): New function.
	(micromips_scan_prologue): Likewise.
	(mips_micro_frame_cache): Likewise.
	(mips_micro_frame_this_id): Likewise.
	(mips_micro_frame_prev_register): Likewise.
	(mips_micro_frame_sniffer): Likewise.
	(mips_micro_frame_unwind): New variable.
	(mips_micro_frame_base_address): New function.
	(mips_micro_frame_base): New variable.
	(mips_micro_frame_base_sniffer): New function.
	(mips32_scan_prologue): Update mips_fetch_instruction() call.
	(mips_insn32_frame_sniffer): Check for the standard MIPS ISA
	rather than for MIPS16.
	(mips_insn32_frame_base_sniffer): Likewise.
	(deal_with_atomic_sequence): Rename to...
	(mips_deal_with_atomic_sequence): ... this.  Update the type
	of the variable used to hold an instruction.  Remove the ISA bit
	check.  Update mips_fetch_instruction() call.
	(micromips_deal_with_atomic_sequence): New function.
	(deal_with_atomic_sequence): Likewise.
	(mips_software_single_step): Update deal_with_atomic_sequence()
	call.
	(mips_about_to_return): Remove dead MIPS16 support code.  Update
	mips_fetch_instruction() call.  Handle JR.HB correctly.
	(heuristic_proc_start): Check for the standard MIPS ISA rather
	than for MIPS16.  Update mips_pc_is_mips16() and
	mips_fetch_instruction() calls.  Handle microMIPS.
	(mips_n32n64_return_value): Update mips_pc_is_mips16() call.
	(mips_o32_push_dummy_call, mips_o32_return_value): Likewise.
	(is_delayed): Remove function.
	(mips_single_step_through_delay): Replace the call to
	is_delayed() with mips32_instruction_has_delay_slot().  Correct
	MIPS16 handling.  Handle microMIPS.
	(mips_skip_prologue): Update mips_pc_is_mips16 call.  Handle
	microMIPS.
	(mips32_in_function_epilogue_p): Update mips_fetch_instruction()
	call.
	(micromips_in_function_epilogue_p): New function.
	(mips16_in_function_epilogue_p): Update mips_fetch_instruction()
	call.
	(mips_in_function_epilogue_p): Update mips_pc_is_mips16() call.
	Handle microMIPS.
	(gdb_print_insn_mips): Likewise.
	(mips_breakpoint_from_pc): Likewise.
	(mips32_instruction_has_delay_slot): Simplify making use of the
	updated mips_fetch_instruction() interface.
	(micromips_instruction_has_delay_slot): New function.
	(mips16_instruction_has_delay_slot): Simplify making use of the
	updated mips_fetch_instruction() interface.
	(mips_adjust_breakpoint_address): Check for the standard MIPS
	ISA rather than for MIPS16.  Update for unmake_compact_addr() 
	calls.  Handle microMIPS.
	(global_mips_compression): New function.
	(mips_gdbarch_init): Handle the compressed ISA setting from ELF
	file flags.  Register the microMIPS heuristic frame unwinder.
	(show_mips_compression): New function.
	(_initialize_mips_tdep): Add the "set mips compression" and
	"show mips compression" commands.
	* mips-mdebug-tdep.c (mips_mdebug_frame_sniffer): Check for the
	standard MIPS ISA rather than for MIPS16.

	gdb/doc/
	2009-06-26  Sandra Loosemore  <sandra@codesourcery.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.texinfo (MIPS): Document "set mips compression" and "show
	mips compression".

	gdb/doc/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.texinfo (MIPS): Remove duplicate "auto" reference from
	"set mips abi" documentation.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (mips_pc_is_mips16): Reverse the order of checks
	performed to deterermine whether an address refers to standard
	MIPS or MIPS16 code, that is check symbol annotation first before
	falling back to examining the ISA bit of the address passed.
	(mips16_next_pc): Use mips_pc_is_mips16() instead of
	is_mips16_addr().
	(mips_n32n64_return_value): Likewise.
	(mips_o32_push_dummy_call): Likewise.
	(mips_o32_return_value): Likewise.
	(mips_adjust_breakpoint_address): Likewise.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (mips_adjust_breakpoint_address): Use
	unmake_mips16_addr() to remove the ISA bit.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (deal_with_atomic_sequence): Handle BPOSGE32,
	BPOSGE64, BC1ANY2F, BC1ANY2T, BC1ANY4F and BC1ANY4T.
	(mips32_instruction_has_delay_slot): Likewise.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (unpack_mips16): Correct bitfield positions used
	for extraction of the immediate argument; fix sign-extension of
	same.

	gdb/
	2009-06-26  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-mdebug-tdep.c (mips_mdebug_frame_cache): Use
	get_frame_address_in_block() to retrieve the value of the PC
	associated with the frame.

	bfd/
	2009-06-19  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* elfxx-mips.c (micromips_reloc_shuffle_p): Correct TLS
	relocations.

	bfd/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	            Ilie Garbacea  <ilie@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* archures.c (bfd_mach_mips_micromips): New macro.
	* cpu-mips.c (I_micromips): New enum value.
	(arch_info_struct): Add bfd_mach_mips_micromips.
	* elf32-mips.c (elf_micromips_ctor64_howto): New variable.
	(elf_micromips_howto_table_rel): Likewise.
	(_bfd_mips_elf32_gprel16_reloc): Handle microMIPS.
	(mips_elf_gprel32_reloc): Update comment.
	(mips32_64bit_reloc): Support R_MICROMIPS_32.
	(micromips_reloc_map): New variable.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS.
	(mips_elf32_rtype_to_howto): Likewise.
	(mips_info_to_howto_rel): Likewise.
	(elf32_mips_relax_delete_bytes): New function.
	(opcode_descriptor): New structure.
	(b_insns_32, b_insn_16): New variables.
	(BZ32_REG, BZ32_REG_FIELD): New macros.
	(bz_insns_32, bzc_insns_32, bz_insns_16): New variables.
	(BZ16_VALID_REG, BZ16_REG_FIELD): New macros.
	(jal_insn_32_bd16, jal_insn_32_bd32): New variables.
	(jalr_insn_32_bd16, jalr_insn_32_bd32): Likewise.
	(ds_insns_32_bd16, ds_insns_32_bd32): Likewise.
	(jalr_insn_16_bd16, jalr_insn_16_bd32): Likewise.
	(ds_insns_16_bd16): Likewise.
	(lui_insn, addiu_insn, addiupc_insn): Likewise.
	(ADDIU_REG, ADDIUPC_VALID_REG, ADDIUPC_REG_FIELD): New macros.
	(lwgp_insn_32, lwgp_insn_16): New functions.
	(LWGP32_REG, LWGP16_VALID_REG, LWGP16_REG_FIELD): New macros.
	(MOVE32_RD, MOVE32_RS): Likewise.
	(MOVE16_RD_FIELD, MOVE16_RS_FIELD): Likewise.
	(move_insns_32, move_insns_16): New variables.
	(nop_insn_32, nop_insn_16): Likewise.
	(MATCH): New macro.
	(find_match): New function.
	(relax_delay_slot): Likewise.
	(IS_BITSIZE): New macro.
	(elf32_mips_relax_section): New function.
	(bfd_elf32_bfd_relax_section): Define.
	* elf64-mips.c (micromips_elf64_howto_table_rel): New variable.
	(micromips_elf64_howto_table_rela): Likewise.
	(micromips_reloc_map): Likewise.
	(bfd_elf64_bfd_reloc_type_lookup): Handle microMIPS.
	(bfd_elf64_bfd_reloc_name_lookup): Likewise.
	(mips_elf64_rtype_to_howto): Likewise.
	* elfn32-mips.c (elf_micromips_howto_table_rel): New variable.
	(elf_micromips_howto_table_rela): Likewise.
	(micromips_reloc_map): Likewise.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS.
	(bfd_elf32_bfd_reloc_name_lookup): Likewise.
	(mips_elf_n32_rtype_to_howto): Likewise.
	* elfxx-mips.c (TLS_RELOC_P): Handle microMIPS.
	(micromips_reloc_shuffle_p): Likewise.
	(got16_reloc_p, call16_reloc_p): Likewise.
	(hi16_reloc_p, lo16_reloc_p): Likewise.
	(_bfd_mips16_elf_reloc_unshuffle): Likewise.
	(_bfd_mips16_elf_reloc_shuffle): Likewise.
	(_bfd_mips_elf_lo16_reloc): Likewise.
	(mips_elf_initialize_tls_slots): Likewise.
	(mips_tls_got_index, mips_elf_got_page): Likewise.
	(mips_elf_create_local_got_entry): Likewise.
	(mips_elf_relocation_needs_la25_stub): Likewise.
	(mips_elf_calculate_relocation): Likewise.
	(mips_elf_perform_relocation): Likewise.
	(_bfd_mips_elf_symbol_processing): Likewise.
	(_bfd_mips_elf_add_symbol_hook): Likewise.
	(_bfd_mips_elf_link_output_symbol_hook): Likewise.
	(mips_elf_add_lo16_rel_addend): Likewise.
	(_bfd_mips_elf_check_relocs): Likewise.
	(mips_elf_adjust_addend): Likewise.
	(_bfd_mips_elf_relocate_section): Likewise.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_gc_sweep_hook): Likewise.
	(_bfd_mips_elf_print_private_bfd_data):	Likewise.
	* reloc.c (BFD_RELOC_MICROMIPS_64, BFD_RELOC_MICROMIPS_32): New
	relocations.
	(BFD_RELOC_MICROMIPS_16): Likewise.
	(BFD_RELOC_MICROMIPS_7_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_10_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_16_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_GPREL16): Likewise.
	(BFD_RELOC_MICROMIPS_GPREL32): Likewise.
	(BFD_RELOC_MICROMIPS_JMP, BFD_RELOC_MICROMIPS_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_HI16_S, BFD_RELOC_MICROMIPS_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_LITERAL): Likewise.
	(BFD_RELOC_MICROMIPS_GOT16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_SUB): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_PAGE): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_OFST): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHEST): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHER): Likewise.
	(BFD_RELOC_MICROMIPS_SCN_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_JALR): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPMOD32): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL32): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPMOD64): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL64): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GD): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_LDM): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GOTTPREL): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL32): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL64): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_LO16): Likewise.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	include/elf/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	* mips.h (R_MICROMIPS_min, R_MICROMIPS_16, R_MICROMIPS_32): New
	relocations.
	(R_MICROMIPS_REL32, R_MICROMIPS_26_S1): Likewise.
	(R_MICROMIPS_HI16, R_MICROMIPS_LO16): Likewise.
	(R_MICROMIPS_GPREL16, R_MICROMIPS_LITERAL): Likewise.
	(R_MICROMIPS_GOT16, R_MICROMIPS_PC7_S1): Likewise.
	(R_MICROMIPS_PC10_S1, R_MICROMIPS_PC16_S1): Likewise.
	(R_MICROMIPS_CALL16, R_MICROMIPS_GPREL32): Likewise.
	(R_MICROMIPS_64, R_MICROMIPS_GOT_DISP): Likewise.
	(R_MICROMIPS_GOT_PAGE, R_MICROMIPS_GOT_OFST): Likewise.
	(R_MICROMIPS_GOT_HI16, R_MICROMIPS_GOT_LO16): Likewise.
	(R_MICROMIPS_SUB, R_MICROMIPS_HIGHER): Likewise.
	(R_MICROMIPS_HIGHEST, R_MICROMIPS_CALL_HI16): Likewise.
	(R_MICROMIPS_CALL_LO16, R_MICROMIPS_SCN_DISP): Likewise.
	(R_MICROMIPS_JALR, R_MICROMIPS_HI0_LO16): Likewise.
	(R_MICROMIPS_TLS_DTPMOD32, R_MICROMIPS_TLS_DTPREL32): Likewise.
	(R_MICROMIPS_TLS_DTPMOD64, R_MICROMIPS_TLS_DTPREL64): Likewise.
	(R_MICROMIPS_TLS_GD, R_MICROMIPS_TLS_LDM): Likewise.
	(R_MICROMIPS_TLS_DTPREL_HI, R_MICROMIPS_TLS_DTPREL_LO): Likewise.
	(R_MICROMIPS_TLS_GOTTPREL, R_MICROMIPS_TLS_TPREL32): Likewise.
	(R_MICROMIPS_TLS_TPREL64, R_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(R_MICROMIPS_TLS_TPREL_LO116, R_MICROMIPS_GLOB_DAT): Likewise.
	(R_MICROMIPS_GPREL7_S2, R_MICROMIPS_PC23_S2): Likewise.
	(R_MICROMIPS_max): Likewise.
	(EF_MIPS_ARCH_ASE_MICROMIPS): New macro.
	(ELF_ST_IS_MIPS_PLT): Likewise.
	(STO_MICROMIPS): Likewise.
	(ELF_ST_IS_MICROMIPS, ELF_ST_MICROMIPS, ELF_ST_SET_MICROMIPS):
	Likewise.
	(ELF_ST_IS_MIPS_PIC, ELF_ST_SET_MIPS_PIC): Handle microMIPS.

	include/opcode/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* mips.h
	(INSN2_BRANCH_DELAY_16BIT, INSN2_BRANCH_DELAY_32BIT): New macros.
	(INSN2_WRITE_GPR_S, INSN2_READ_FPR_D): Likewise.
	(INSN2_MOD_GPR_MB, INSN2_MOD_GPR_MC, INSN2_MOD_GPR_MD): Likewise.
	(INSN2_MOD_GPR_ME, INSN2_MOD_GPR_MF, INSN2_MOD_GPR_MG): Likewise.
	(INSN2_MOD_GPR_MJ, INSN2_MOD_GPR_MP, INSN2_MOD_GPR_MQ): Likewise.
	(INSN2_MOD_SP, INSN2_MOD_31): Likewise.
	(INSN2_READ_GP, INSN2_READ_PC): Likewise.
	(CPU_MICROMIPS): New macro.
	(M_BC1FL, M_BC1TL, M_BC2FL, M_BC2TL, M_BEQL, M_BGEZL): New enum
	values.
	(M_BGEZALL, M_BGTZL, M_BLEZL, M_BLTZL, M_BLTZALL): Likewise.
	(M_CACHE_OB, M_LDC2_OB, M_LDL_OB, M_LDM_AB, M_LDM_OB): Likewise.
	(M_LDP_AB, M_LDP_OB, M_LDR_OB, M_LL_OB, M_LLD_OB): Likewise.
	(M_LWC2_OB, M_LWL_OB, M_LWM_AB, M_LWP_AB, M_LWP_OB): Likewise.
	(M_LWR_OB, M_LWU_OB, M_PREF_OB, M_SC_OB, M_SCD_OB): Likewise.
	(M_SDC2_OB, M_SDL_OB, M_SDM_AB, M_SDM_OB, M_SDP_AB): Likewise.
	(M_SDP_OB, M_SDR_OB, M_SWC2_OB, M_SWL_OB, M_SWM_AB): Likewise.
	(M_SWM_OB, M_SWP_AB, M_SWP_OB, M_SWR_OB): Likewise.
	(MICROMIPSOP_MASK_MAJOR, MICROMIPSOP_SH_MAJOR): New macros.
	(MICROMIPSOP_MASK_IMMEDIATE, MICROMIPSOP_SH_IMMEDIATE): Likewise.
	(MICROMIPSOP_MASK_DELTA, MICROMIPSOP_SH_DELTA): Likewise.
	(MICROMIPSOP_MASK_CODE10, MICROMIPSOP_SH_CODE10): Likewise.
	(MICROMIPSOP_MASK_TRAP, MICROMIPSOP_SH_TRAP): Likewise.
	(MICROMIPSOP_MASK_SHAMT, MICROMIPSOP_SH_SHAMT): Likewise.
	(MICROMIPSOP_MASK_TARGET, MICROMIPSOP_SH_TARGET): Likewise.
	(MICROMIPSOP_MASK_EXTLSB, MICROMIPSOP_SH_EXTLSB): Likewise.
	(MICROMIPSOP_MASK_EXTMSBD, MICROMIPSOP_SH_EXTMSBD): Likewise.
	(MICROMIPSOP_MASK_INSMSB, MICROMIPSOP_SH_INSMSB): Likewise.
	(MICROMIPSOP_MASK_BREAKCODE, MICROMIPSOP_SH_BREAKCODE): Likewise.
	(MICROMIPSOP_SH_BREAKCODE2): Likewise.
	(MICROMIPSOP_MASK_CACHEOP, MICROMIPSOP_SH_CACHEOP): Likewise.
	(MICROMIPSOP_MASK_COPSEL, MICROMIPSOP_SH_COPSEL): Likewise.
	(MICROMIPSOP_MASK_OFFSET12, MICROMIPSOP_SH_OFFSET12): Likewise.
	(MICROMIPSOP_MASK_3BITPOS, MICROMIPSOP_SH_3BITPOS): Likewise.
	(MICROMIPSOP_MASK_STYPE, MICROMIPSOP_SH_STYPE): Likewise.
	(MICROMIPSOP_MASK_OFFSET10, MICROMIPSOP_SH_OFFSET10): Likewise.
	(MICROMIPSOP_MASK_RS, MICROMIPSOP_SH_RS): Likewise.
	(MICROMIPSOP_MASK_RT, MICROMIPSOP_SH_RT): Likewise.
	(MICROMIPSOP_MASK_RD, MICROMIPSOP_SH_RD): Likewise.
	(MICROMIPSOP_MASK_FS, MICROMIPSOP_SH_FS): Likewise.
	(MICROMIPSOP_MASK_FT, MICROMIPSOP_SH_FT): Likewise.
	(MICROMIPSOP_MASK_FD, MICROMIPSOP_SH_FD): Likewise.
	(MICROMIPSOP_MASK_FR, MICROMIPSOP_SH_FR): Likewise.
	(MICROMIPSOP_MASK_RS3, MICROMIPSOP_SH_RS3): Likewise.
	(MICROMIPSOP_MASK_PREFX, MICROMIPSOP_SH_PREFX): Likewise.
	(MICROMIPSOP_MASK_BCC, MICROMIPSOP_SH_BCC): Likewise.
	(MICROMIPSOP_MASK_CCC, MICROMIPSOP_SH_CCC): Likewise.
	(MICROMIPSOP_MASK_COPZ, MICROMIPSOP_SH_COPZ): Likewise.
	(MICROMIPSOP_MASK_MB, MICROMIPSOP_SH_MB): Likewise.
	(MICROMIPSOP_MASK_MC, MICROMIPSOP_SH_MC): Likewise.
	(MICROMIPSOP_MASK_MD, MICROMIPSOP_SH_MD): Likewise.
	(MICROMIPSOP_MASK_ME, MICROMIPSOP_SH_ME): Likewise.
	(MICROMIPSOP_MASK_MF, MICROMIPSOP_SH_MF): Likewise.
	(MICROMIPSOP_MASK_MG, MICROMIPSOP_SH_MG): Likewise.
	(MICROMIPSOP_MASK_MJ, MICROMIPSOP_SH_MJ): Likewise.
	(MICROMIPSOP_MASK_MK, MICROMIPSOP_SH_MK): Likewise.
	(MICROMIPSOP_MASK_ML, MICROMIPSOP_SH_ML): Likewise.
	(MICROMIPSOP_MASK_MP, MICROMIPSOP_SH_MP): Likewise.
	(MICROMIPSOP_MASK_MQ, MICROMIPSOP_SH_MQ): Likewise.
	(MICROMIPSOP_MASK_MZ, MICROMIPSOP_SH_MZ): Likewise.
	(MICROMIPSOP_MASK_IMMA, MICROMIPSOP_SH_IMMA): Likewise.
	(MICROMIPSOP_MASK_IMMB, MICROMIPSOP_SH_IMMB): Likewise.
	(MICROMIPSOP_MASK_IMMC, MICROMIPSOP_SH_IMMC): Likewise.
	(MICROMIPSOP_MASK_IMMD, MICROMIPSOP_SH_IMMD): Likewise.
	(MICROMIPSOP_MASK_IMME, MICROMIPSOP_SH_IMME): Likewise.
	(MICROMIPSOP_MASK_IMMF, MICROMIPSOP_SH_IMMF): Likewise.
	(MICROMIPSOP_MASK_IMMG, MICROMIPSOP_SH_IMMG): Likewise.
	(MICROMIPSOP_MASK_IMMH, MICROMIPSOP_SH_IMMH): Likewise.
	(MICROMIPSOP_MASK_IMMI, MICROMIPSOP_SH_IMMI): Likewise.
	(MICROMIPSOP_MASK_IMMJ, MICROMIPSOP_SH_IMMJ): Likewise.
	(MICROMIPSOP_MASK_IMML, MICROMIPSOP_SH_IMML): Likewise.
	(MICROMIPSOP_MASK_IMMM, MICROMIPSOP_SH_IMMM): Likewise.
	(MICROMIPSOP_MASK_IMMN, MICROMIPSOP_SH_IMMN): Likewise.
	(MICROMIPSOP_MASK_IMMO, MICROMIPSOP_SH_IMMO): Likewise.
	(MICROMIPSOP_MASK_IMMP, MICROMIPSOP_SH_IMMP): Likewise.
	(MICROMIPSOP_MASK_IMMQ, MICROMIPSOP_SH_IMMQ): Likewise.
	(MICROMIPSOP_MASK_IMMU, MICROMIPSOP_SH_IMMU): Likewise.
	(MICROMIPSOP_MASK_IMMW, MICROMIPSOP_SH_IMMW): Likewise.
	(MICROMIPSOP_MASK_IMMX, MICROMIPSOP_SH_IMMX): Likewise.
	(MICROMIPSOP_MASK_IMMY, MICROMIPSOP_SH_IMMY): Likewise.
	(micromips_opcodes): New declaration.
	(bfd_micromips_num_opcodes): Likewise.

	opcodes/
	2009-06-04  Chao-ying Fu  <fu@mips.com>
	            Maciej W. Rozycki  <macro@codesourcery.com>
	* micromips-opc.c: New file.
	* mips-dis.c (micromips_to_32_reg_b_map): New array.
	(micromips_to_32_reg_c_map, micromips_to_32_reg_d_map): Likewise.
	(micromips_to_32_reg_e_map, micromips_to_32_reg_f_map): Likewise.
	(micromips_to_32_reg_g_map, micromips_to_32_reg_l_map): Likewise.
	(micromips_to_32_reg_q_map): Likewise.
	(micromips_imm_b_map, micromips_imm_c_map): Likewise.
	(print_insn_micromips): New function.
	(is_micromips_mode_p): New function.
	(_print_insn_mips): Handle microMIPS instructions.
	* Makefile.am (CFILES): Add micromips-opc.c.
	(ALL_MACHINES): Add micromips-opc.lo.
	(micromips-opc.lo): Add dependencies.
	* configure.in (bfd_mips_arch): Add micromips-opc.lo.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2009-11-19  Maciej W. Rozycki  <macro@codesourcery.com>
	Issue #7140
	* dwarf2-frame.c (dwarf2_frame_state): Add
	ghs_reg_offsets_negated and ghs_sp_same_value members.
	(dwarf2_frame_find_quirks): Initialise them.
	(execute_cfa_program): Handle them.

	* release-notes-csl.xml
	(Debugging programs built by Green Hills compilers): New.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2009-09-29  Maciej W. Rozycki  <macro@codesourcery.com>
	Issue #6505
	* dwarf2read.c (dwarf2_get_pc_bounds): Ignore GHS-produced
	information, it is broken.

	* release-notes-csl.xml
	(Debugging programs built by Green Hills compilers): New.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	Merge from MIPS binutils patches:

	bfd/
	2004-09-09  Nigel Stephens  <nigel@mips.com>
	* ihex.c (ihex_write_object_contents): Truncate address to 32 bits
	if the top 32 bits are a simple sign extension of the bottom.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	2009-04-03  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/display.exp: Suppress run tests if gdb,do_reload_on_run.
	* gdb.base/setshow.exp: Use gdb_run_cmd instead of run.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-linux-tdep.c (mips_linux_init_abi): Set num_pseudo_regs
	too.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_gdbarch_init): Only set pc_regnum and
	sp_regnum once the gdbarch_init_osabi hook has been called.

2010-02-12  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2008-10-23  Daniel Jacobowitz  <dan@codesourcery.com>
	Issue #3139
	* defs.h (make_arg_string): Declare.
	* symfile.c (load_command): Use make_arg_string.  Run local cleanups.
	* utils.c (make_arg_string): New function.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	2008-10-22  Maciej W. Rozycki  <macro@codesourcery.com>
	* lib/mi-support.exp (mi_send_resuming_command_raw): Treat the
	lack of the "thread-id" qualifier in the response to a command
	resuming execution as a success too.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	sim/mips/
	2008-10-17  Nathan Sidwell  <nathan@codesourcery.com>
	* interp.c (mdi_semihost_bkpt): New.
	(sim_create_inferior): Set it. Install breakpoint.
	(signal_exception): Detect mdi breakpoint and process it.
	(mdi_semihosting): New function.
	* sim-main.h (V1): Define it.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	2008-09-25  Daniel Jacobowitz  <dan@codesourcery.com>
	Issue #3904
	* release-notes-csl.xml: Document Windows path fix.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2008-09-08  Nathan Sidwell  <nathan@codesourcery.com>
	* remote.c (packet_check_result): Allow 'Enn :<something>' for
	an error.
	(get_offsets, remote_read_bytes): Use packet_check_result.

	gdb/doc/
	2008-09-08  Nathan Sidwell  <nathan@codesourcery.com>
	* gdb.texinfo (Packets): Add paragraph about error reply
	formats.

	* release-notes-csl.xml: Document.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#gdb-rtos-thread.diff

	gdb/
	2009-10-07  Daniel Jacobowitz  <dan@codesourcery.com>
	2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>
	* rtos-thread.c (raw_fetch_registers, raw_store_registers):
	Update for struct target_ops changes.
	(raw_wait): Likewise.
	(rtos_client_fetch_registers, rtos_client_store_registers):
	Likewise.
	(rtos_client_wait): Likewise.
	(rtos_client_threads_info, rtos_client_thread_alive): Likewise.
	(rtos_client_pid_to_str): Likewise.

	2008-04-24  Nathan Sidwell  <nathan@codesourcery.com>
	* rtos-thread.c (rtos_required_sym, rtos_optional_sym): Use
	rtos_dlerror.
	(load_plugins_command): Likewise.  Correct type of
	plugin_handle.

	2008-04-01  Nathan Sidwell  <nathan@codesourcery.com>
	* rtos-thread.c: Update to avoid cygwin dependency.

	2008-02-13  Maciej W. Rozycki  <macro@mips.com>
	            Nigel Stephens  <nigel@mips.com>
	* rtos-thread.c: New file.
	* rtos-thread.h: Likewise.
	* rtos-regno.h: Likewise.
	* mips-tdep.c (mips_register_rtos_regno): New function.
	(mips_gdbarch_init): Install it.
	* configure.tgt (mips*-*-linux*): Add rtos-thread.o to
	gdb_target_obs.
	(mips*-sde*-elf*): Likewise.
	* gdbarch.sh (register_rtos_regno): New architecture method.
	* gdbarch.c, gdbarch.h: Regenerate.
	* Makefile.in (ALLDEPFILES): Add rtos-thread.c.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#gdb-mi-watch.diff

	gdb/testsuite/
	2007-06-07  Maciej W. Rozycki  <macro@mips.com>
	* gdb.mi/mi-watch.exp (test_watchpoint_creation_and_listing):
	Allow additional output before a success report.
	* gdb.mi/mi2-watch.exp (test_watchpoint_creation_and_listing):
	Likewise.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#break-bp_num.diff

	gdb/testsuite/
	2007-05-17  Maciej W. Rozycki  <macro@mips.com>
	* gdb.base/break.exp: Use an auxiliary variable with a default
	breakpoint number in case breakpoint creation fails.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#12588-0.diff

	gdb/testsuite/
	2004-11-05  Chris Dearman  <chris@mips.com>
	* gdb.asm/mips.inc: Initialise stack pointer.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#12099-1.diff

	gdb/testsuite/
	2004-09-01  Nigel Stephens  <nigel@mips.com>
	* gdb.base/chng-syms.exp: Don't run this test if
	gdb,do_reload_on_run is true, since the reload step breaks the
	expect script.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#12099-0.diff

	gdb/testsuite/
	2004-09-01  Nigel Stephens  <nigel@mips.com>
	* gdb.base/auxv.exp (fetch_auxv): If "No auxiliary vector"
	message is seen, don't fail, just mark as unsupported.  Only do
	final "continues" to generate a core dump if $core_works is
	true.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#12761.diff
	#12099-2.diff

	gdb/testsuite/
	2004-11-24  Nigel Stephens  <nigel@mips.com>
	* gdb.base/ending-run.exp: Handle case where a "next" from _init
	lands us in the exit function.

	gdb/testsuite/
	2004-09-01  Nigel Stephens  <nigel@mips.com>
	* gdb.base/ending-run.exp: Allow for step to end of run ending
	up in __wrap_exit function.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#mdi-14618.diff
	#mdi-14483.diff

	gdb/testsuite/
	2006-03-15  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-vpe]
	* lib/gdb.exp (gdb_load): With gdb_load_commands only match
	$gdb_prompt at the beginning of a new line.

	gdb/testsuite/
	2006-05-16  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-vpe]
	* lib/mi-support.exp (mi_gdb_load): Issue commands from
	"gdb_load_commands" to gdb.

	2005-09-29  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-vpe]
	* config/monitor.exp (gdb_load): Rename to...
	(gdb_do_load): ... this.
	* config/sid.exp (gdb_load, gdb_do_load): Likewise.
	* config/sim.exp (gdb_load, gdb_do_load): Likewise.
	* config/slite.exp (gdb_load, gdb_do_load): Likewise.
	* config/vx.exp (gdb_load, gdb_do_load): Likewise.
	* lib/gdb.exp (gdb_load): Issue commands from "gdb_load_commands"
	to gdb.  Call the original function, renamed to...
	(gdb_do_load): ... this.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#mdi-14296.diff

	2005-08-15  Maciej W. Rozycki  <macro@mips.com>
	2010-02-13  Maciej W. Rozycki  <macro@codesourcery.com>
	[mti-dbg-vpe]
	* lib/gdb.exp (gdb_run_cmd): Process "gdb_init_commands".
	* lib/mi-support.exp (mi_run_cmd): Process "gdb_init_commands".

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#mdi-12703.diff

	gdb/testsuite/
	2004-11-17  David Ung  <davidu@mips.com>
	* gdb.base/gdb1555.exp: Set unsupported for mips*-sde*-* when
	linking with shared libraries.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14674.diff

	gdb/testsuite/
	2006-09-07  Maciej W. Rozycki  <macro@mips.com>
	2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>
	[mti-mips16e-nodataincode]
	* gdb.base/maint.exp: Formatting fixes.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14673.diff

	gdb/testsuite/
	2006-05-25  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-vpe]
	* gdb.threads/watchthreads.c (flag): New variable.
	(thread_function): Synchronise the threads.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14627.diff

	gdb/testsuite/
	2006-04-24  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-relocate]
	* gdb.base/relocate.exp (get_var_address): Accept any symbol
	name reported.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14622.diff

	gdb/testsuite/
	2006-03-31  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-fs2]
	* gdb.threads/schedlock.exp (stop_process): Bump up the delay
	before interrupting.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14602.diff

	2005-11-18  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* gdb.threads/manythreads.exp: Disable for SDE targets as
	incapable of creating large numbers of threads.

2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>

	#14510.diff

	gdb/testsuite/
	2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.mi/var-cmd.c (do_locals_tests): Make sure automatic
	variables are initialized.
	(do_children_tests): Likewise.

	2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.mi/mi2-var-child.exp: Update accordingly.

	2009-04-03  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.mi/var-cmd.c: Resync from stable.

	gdb/testsuite/
	2010-02-11  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.mi/mi2-var-child.exp: Update accordingly.

	2005-12-13  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-variables]
	* gdb.mi/var-cmd.c (do_locals_tests): Initialize automatic
	variables before examining.
	(do_children_tests): Likewise.

	2005-10-07  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-fs2]
	* gdb.mi/var-cmd.c (do_children_tests): Initialize
	"struct_declarations" before examining.

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#14231.diff

	gdb/testsuite/
	2005-07-28  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* gdb.threads/print-threads.exp (test_all_threads): Increase the
	timeout to ignore possible inaccuracy of sleep().

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#14229.diff

	gdb/testsuite/
	2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.threads/print-threads.exp (test_all_threads): Accept no
	exit code message on program termination too.

	gdb/testsuite/
	2005-07-28  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* gdb.threads/print-threads.exp (test_all_threads): Use the
	standard pattern for program termination output.

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#13953.diff

	gdb/testsuite/
	2005-06-01  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-freebpcmd]
	* gdb.base/freebpcmd.exp: Consume the trailing GDB prompt after
	sending breakpoint commands.

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#13887.diff

	gdb/testsuite/
	2005-05-25  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* gdb.base/watchpoint.exp (test_simple_watchpoint): Accept
	possible warnings on watchpoint enabling.

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#13452.diff

	gdb/testsuite/
	2005-03-22  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-gdb]
	* gdb.base/ending-run.exp: Add another matching pattern for a trap
	in exit().

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	#13652.diff
	#13192.diff

	gdb/testsuite/
	2009-08-10  Maciej W. Rozycki  <macro@codesourcery.com>
	Issue #5455
	* lib/gdb.exp (gdb_compile_pthreads): Try linking with a thread
	library first, before falling back to none.

	2005-04-22  Chris Dearman  <chris@mips.com>
	[mti-34k-pthreads]
	* lib/gdb.exp (gdb_compile_pthreads): Check for gdb,pthreads
	when compiling pthreads based tests.

	2005-02-03  Chris Dearman  <chris@mips.com>
	* lib/gdb.exp (gdb_compile_pthreads): Also try compiling without
	any explicit threads library.  Added error case for "missing
	symbol".

	* gdb.threads/switch-threads.c: Include stddef.h for definition
	of NULL.

2010-02-10  Maciej W. Rozycki  <macro@codesourcery.com>

	NOTE: causes regressions in gdb.dwarf2/dw2-ranges.exp.

	#14443.diff

	gdb/
	2009-04-20  Daniel Jacobowitz  <dan@codesourcery.com>
	* blockframe.c (get_frame_block): Fix uninitialized variable.

	2009-04-17  Daniel Jacobowitz  <dan@codesourcery.com>
	* blockframe.c (get_frame_block) [MIPSSDE]: Use
	overlay_mapped_address.
	* stack.c (print_frame): Do not call find_pc_sect_function
	for overlays here.

	2009-04-03  Daniel Jacobowitz  <dan@codesourcery.com>
	Issue #4176
	* stack.c (find_frame_funname): Use get_frame_function if
	possible.  Add comment.

	2005-09-21  Nigel Stephens  <nigel@mips.com>
	2009-04-03  Daniel Jacobowitz  <dan@codesourcery.com>
	2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>
	[mti-gdb-ksegoverlay]
	* mips-tdep.c (heuristic_proc_start): Cope with pc being in an
	"unmapped overlay" when computing the fence post.
	(mips_new_objfile): New objfile hook, only for MIPSSDE bare-iron
	configurations -- scans sections in objfile and for each section
	whose vma is in kseg0 or kseg1 sets its lma to the equivalent
	kseg1 or kseg0 address, and switches on overlay_debugging.  Also
	sets section's ovly_mapped flag to 2, to indicate that this is a
	pseudo overlay that is permanently doubly mapped.
	(_initialize_mips_tdep): Register mips_new_objfile() as an
	objfile observer.

	* breakpoint.c (insert_bp_location): Call
	section_is_real_overlay() instead of section_is_overlay().
	(remove_breakpoint): Similarly.
	(clear_command): Similarly.

	* printcmd.c (sym_info): Similarly.
	(address_info): Similarly.

	* symfile.c (symbol_file_add_with_addrs_or_offsets): Fixed to
	call deprecated_target_new_objfile_hook, and close the bfds,
	even if there are no symbols in the file.
	(section_is_mapped): When overlay_debugging is on, return the
	actual value of osect->ovly_mapped, not whether it is non-zero.
	(section_is_real_overlay): True only for real overlays, not the
	new fake overlays with ovly_mapped of 2, which we now create for
	multiply virtually mapped regions.

	* symfile.h (section_is_real_overlay): New prototype.

	* stack.c (find_frame_funname): Handle the pc being in an
	overlay section and move use its mapped address.

2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>

	#12338-3.diff

	gdb/
	2004-10-06  Chris Dearman  <chris@mips.com>
	* dwarf2read.c (INLINE_KLUDGE): Define to include code to work
	around incorrect DWARF2 infomation generated by gcc for inlined
	functions.

2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>

	#12271-3.diff

	gdb/
	2004-09-27  Chris Dearman  <chris@mips.com>
	2008-10-15  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (heuristic_proc_start): For MIPSSDE only.  Do not
	search for the beginning of a function if outside the current
	executable.  Limit the search to a section boundary if
	applicable.  Provide an alternate explanation message.

2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>

	#12110-1.diff

	gdb/
	2004-09-02  Nigel Stephens  <nigel@mips.com>
	* symfile.c (clear_symtab_users): Clear pc_function_cache before
	resetting breakpoints, since resetting the breakpoint may use
	the cached values and crash.

2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>

	#12100-3.diff

	gdb/
	2004-10-06  Chris Dearman  <chris@mips.com>
	* cli/cli-dump.c (restore_section_callback): Use address mask
	when comparing addresses.

	2004-09-01  Nigel Stephens  <nigel@mips.com>
	2009-10-07  Daniel Jacobowitz  <dan@codesourcery.com>
	* exec.c (section_table_xfer_memory_partial): Mask addresses
	down to the target address size before comparing, to avoid
	problems comparing sign-extended MIPS addresses against bfd
	object files which don't sign-extend the section addresses.

	Fixes gdb.base/dump regression failure.

2010-02-09  Maciej W. Rozycki  <macro@codesourcery.com>

	#12271-4.diff

	gdb/
	2004-09-27  Chris Dearman  <chris@mips.com>
	* mips-tdep.c (mips32_instruction_has_delay_slot): New function.
	(mips16_instruction_has_delay_slot): Likewise.
	(mips_segment_boundary): Likewise.
	(mips_adjust_breakpoint_address): Likewise.
	(mips_gdbarch_init): Use mips_adjust_breakpoint_address.

2010-02-08  Maciej W. Rozycki  <macro@codesourcery.com>

	#12187.diff

	gdb/testsuite/
	2010-02-08  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.base/interrupt.exp: Require both local and remote data
	echo mandatorily.

	gdb/
	2004-11-05  Chris Dearman  <chris@mips.com>
	* remote-sim.c (gdb_os_read_stdin): Don't reinvoke readline
	after receiving SIGINT.  Fixes interrupt.exp regression
	failures.

	2004-09-28  Chris Dearman  <chris@mips.com>
	* remote-sim.c (gdbsim_open): Set default prompt for Insight

	2004-09-13  Nigel Stephens  <nigel@mips.com>
	* remote-sim.c (init_callbacks): Set the read and read_stdin
	callbacks.
	(input_hook_signal_handler): New interrupt handler for console
	input.
	(gdb_os_read_stdin): New i/o hook to read from the console.
	Uses readline interface so as to provide line editing, work in
	Insight, etc, etc.
	(gdb_os_read): Either call gdb_os_read_stdin if fd is zero, or
	call the default read function.
	(gdb_os_write_stdout): Call gdb_flush after writing to console
	output.

2010-02-06  Maciej W. Rozycki  <macro@codesourcery.com>

	#14683.diff

	gdb/
	2006-09-21  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-nexti]
	* infrun.c (handle_inferior_event): Add a note about frame ID
	comparison.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14604.diff

	gdb/
	2005-11-30  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-vpe]
	* target.c (add_target): Mark subcommands as class_run.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14441-4.diff

	gdb/
	2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>
	* dwarf2loc.c (read_pieced_value, write_pieced_value): Handle
	partial register accessess.

	* mips-tdep.c (mips_register_type): Replace current_gdbarch with
	gdbarch.

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-floatregs]
	* mips-tdep.c (build_builtin_type_mips_double_float_reg): New
	function which creates a new gdb builtin type which represents
	a 64-bit floating point register as a union of double, int64,
	v2_float, v2_int32.
	(build_builtin_type_mips_single_float_reg): New function which
	creates a new gdb builtin type which represents a 32-bit
	floating point register as a union of float and int32.
	(mips_register_type): Call the new floating point builtin type
	builders: for raw fp registers use the one which matches the
	h/w register size; for the cooked fp registers always create a
	64-bit type when register number is even.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14441-2.diff

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-floatregs]
	* mips-tdep.c (mips_pseudo_register_read): Handle the case where
	raw register is smaller than cooked register, e.g. two 32-bit
	floating point registers in a 64-bit cooked register.
	(mips_pseudo_register_write): Likewise.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14441-0.diff

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-floatregs]
	* mips-tdep.c (print_fpu_flags): New function to display flag
	bits in $fcsr register.
	(mips_print_float_info): New function to handle "info float" and
	display information about the FPU type and $fcsr register.
	(mips_gdbarch_init): Call set_gdbarch_print_float_info() to
	install mips_print_float_info() handler.

	gdb/testsuite/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-floatregs]
	* gdb.base/float.exp: Handle the new output from "info float" on
	MIPS targets.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14248.diff

	gdb/
	2005-08-01  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-info_registers]
	* mips-tdep.c (print_gp_register_row): Avoid trailing whitespace
	in output.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#13767.diff
	#13766.diff

	gdb/testsuite/
	2005-05-11  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* gdb.base/commands.exp (watchpoint_command_test): Update the
	expected formatting of the watchpoint deletion report.

	gdb/
	2005-05-11  Maciej W. Rozycki  <macro@mips.com>
	[mti-dbg-tc]
	* breakpoint.c (update_watchpoint, insert_bp_location): Make
	formatting of the watchpoint deletion reports consistent with
	each other.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#12848.diff

	gdb/
	2004-12-09  David Ung  <davidu@mips.com>
	* valops.c (value_allocate_space_in_inferior): Change return type
	of malloc to pointer type instead of void type when linking to
	malloc object without debugging symbols.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14475.diff

	gdb/
	2005-09-28  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-reggroups]
	* mips-tdep.c (mips_register_reggroup_p): Add cp0.random and
	cp0.count to the save and restore reggroups, otherwise we get a
	failure in testsuite/gdb.base/callfuncs.exp when it compares the
	output of "info all-registers" on MIPSsim or on a real CPU.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14445.diff

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-reggroups]
	* mips-tdep.c (mips_register_reggroup_p): For float_reggroup
	return true for $fcsr register as well as the floating point data
	registers, but ignore all float registers when mips_fpu_type is
	"none". For general_reggroup return true for hi, lo and DSP
	registers, as well as $0 to $31. For system_reggroup return true
	for any register which isn't general, vector or float. For
	save/restore_reggroup return true only for general and floating
	point registers, and the pc - but not for "system" coprocessor
	registers which may have side-effects.

2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>

	#14720.diff
	#14633.diff

	gdb/
	2010-02-05  Maciej W. Rozycki  <macro@codesourcery.com>
	* regcache.c (regcache_raw_read): Replace current_regcache with
	regcache.

	gdb/
	2007-01-26  Maciej W. Rozycki  <macro@mips.com>
	[mti-gdb-bug528]
	* regcache.c (do_cooked_read): Correctly check register cache
	for validity.
	(regcache_raw_write): Likewise.
	(regcache_dump): Likewise.
	(regcache_cooked_read): Likewise.  Remove a dead statement.
	(regcache_raw_read): Mark the register as invalid if the cache
	failed to retrieve it.
	(regcache_set_valid_p): Allow to be called for a read-only
	cache, ignoring requests other than to mark as unfetchable.
	* frame.c (do_frame_register_read): Propagate errors.

	gdb/
	2006-05-04  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-regcache_read]
	* regcache.c (do_cooked_read): Return failure if the cache
	hasn't got the register stored.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#14579.diff

	gdb/
	2005-11-01  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-mi_registers]
	* mi/mi-main.c (mi_cmd_data_list_changed_registers): Do not bail
	out if a register is inaccessible.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#14440-0.diff

	gdb/
	2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>
	* aix-thread.c (fill_gprs64, fill_gprs32): Handle negative
	results from regcache_valid_p.
	(fill_fprs): Likewise.
	(fill_sprs64, fill_sprs32): Likewise.
	(store_regs_user_thread, store_regs_kernel_thread): Likewise.
	* arm-linux-nat.c (store_fpregister, store_fpregs): Likewise.
	(store_register, store_regs): Likewise.
	(store_wmmx_regs): Likewise.
	* corelow.c (get_core_registers): Likewise.
	* i386gnu-nat.c (gnu_store_registers): Likewise.

	gdb/
	2009-09-22  Catherine Moore  <clm@codesourcery.com>
	Issue #5453
	* mips-tdep.c (mips_print_fp_register): Subtract
	gdbarch_num_regs from the reg_num before checking if even/odd.

	* release-notes-csl.xml
	(Floating-point register display bug fix): New.

	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-invalidreg]
	* sentinel-frame.c (sentinel_frame_prev_register): If
	regcache_valid_p() returns a negative value, then set *optimized
	to -1 to indicate that the h/w register is not present on this
	target.

	* regcache.c (regcache_xmalloc): Increase the space allocated
	for the register cache to include cooked registers.
	(regcache_valid_p): Allow regnum to extend up to
	nr_cooked_registers.
	(regcache_invalidate): Likewise.

	* mips-tdep.c (mips_pseudo_register_read): Copy
	deprecated_register_valid[] entry for raw register to cooked
	register.
	(mips_read_fp_register_single): Return success or failure,
	instead of throwing an error.
	(mips_read_fp_register_double): Similarly.
	(mips_print_fp_register): Similarly.
	(mips_print_register): If mips_print_fp_register() returns
	false, or frame_register_read() fails or regcache_valid_p()
	returns a negative result then output "regname: [Invalid]".
	(print_gp_register_row): When frame_register_read() fails or
	regcache_valid_p() returns a negative result, display register
	in table as "xxxxxxxx".
	(mips_print_registers_info): For "info all" don't include
	floating point registers when mips_fpu_type is "none".

	* mi/mi-main.c (get_register): Handle case when frame_register()
	returns a negative value in optim, and set the register value
	display field to an empty string in that case.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#12271-1.diff

	gdb/
	2007-02-27  Maciej W. Rozycki  <macro@mips.com>
	[mti-gdb-bug469]
	* mips-tdep.c (deprecated_mips_set_processor_regs_hack): Fix
	bitmasks used for determining the cache presence.

	2007-02-21  Maciej W. Rozycki  <macro@mips.com>
	[mti-gdb-bug469]
	* mips-tdep.c (mips32_config, mips32_tlb): New arrays.
	(mips32_bat, mips32_ejtag, mips32_watch): Likewise.
	(mips32_perfcnt, mips32_cache, mips32_trace): Likewise.
	(mips32_mvpconf, mips32_vpeconf, mips32_srsconf): Likewise.
	(mips32_vpeopt, mips32_sp, mips32_vi): Likewise.
	(mips32_cp0, mips32_r2, mips32_smartmips, mips32_mt): Remove
	entries moved to the new arrays.
	(mips64_cp0): Rename to...
	(mips64_tlb): ... this.
	(deprecated_mips_set_processor_regs_hack): Add missing bits of
	MIPS32/64 register discovery; handle all compliant processors.

	2004-10-06  Chris Dearman  <chris@mips.com>
	* mips-tdep.c (deprecated_mips_set_processor_regs_hack):
	Generate MIPS32 register list dynamically by reading the Config
	registers.

	2004-09-27  Chris Dearman  <chris@mips.com>
	* mips-tdep.c: Added basic mips4ksc & mips32 register names as
	supported in the old GDB.  This needs redoing to set the
	registers names in a more dynamic way.
	(mips_register_reggroup_p): Don't return register class for
	unnamed registers.  Return appropriate registers for
	system_reggroup.

	* config/mips/tm-mips.h: New file.
	* config/mips/tm-sde.h: Include "config/mips/tm-mips.h".

	* remote.c (remote_open_1): Use GDB_TARGET_START_REMOTE if
	defined.

	* remote-mips.c (common_open): Use GDB_TARGET_START_REMOTE if
	defined.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#14628.diff
	#13525.diff
	#13519.diff

	gdb/
	2006-04-26  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_in_return_stub): Reintroduce function.
	(mips_gdbarch_init): Arrange for checking for MIPS16 call/return
	stubs for GDB_OSABI_UNKNOWN and GDB_OSABI_SDE.

	gdb/
	2005-04-01  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_str_mips16_call_stub): New constant for a
	magic mips16 thunk name.
	(mips_str_mips16_ret_df): Likewise.
	(mips_str_mips16_ret_sf): Likewise.
	(mips_str_fn_stub): Likewise.
	(mips_in_frame_stub): Use the new constants.  Use strlen()
	instead of hardcoded literals.
	(mips_skip_mips16_trampoline_code): Likewise.

	gdb/
	2005-03-31  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_in_frame_stub): New function.
	(mips_unwind_pc): Return the return address rather than the PC if
	the PC of an intermediate frame is inside a call thunk.
	* mips-tdep.h (MIPS_S2_REGNUM): New macro.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#13461.diff

	gdb/
	2005-03-24  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_skip_mips16_trampoline_code): Sign-extend
	address chunks retrieved from decoded lui/addiu pairs.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#13459.diff

	gdb/
	2005-03-24  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* infrun.c (handle_inferior_event): Don't proceed through
	shared library trampolines if stepping at the machine
	instruction level.

2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>

	#13301.diff

	gdb/
	2010-02-04  Maciej W. Rozycki  <macro@codesourcery.com>
	* m68k-tdep.c (m68k_svr4_return_value_type): New function,
	taking its body from...
	(m68k_return_value): ... here.  Take a pointer to struct value
	instead of struct type and call m68k_return_value_type.
	* alpha-tdep.c (alpha_return_value): Take a pointer to struct
	value instead of struct type.
	* arm-tdep.c (arm_return_value): Likewise.
	* avr-tdep.c (avr_return_value): Likewise.
	* frv-tdep.c (frv_return_value): Likewise.
	* h8300-tdep.c (h8300_return_value): Likewise.
	(h8300h_return_value): Likewise.
	* ia64-tdep.c (ia64_return_value): Likewise.
	* iq2000-tdep.c (iq2000_return_value): Likewise.
	* lm32-tdep.c (lm32_return_value): Likewise.
	* m32c-tdep.c (m32c_return_value): Likewise.
	* m32r-tdep.c (m32r_return_value): Likewise.
	* m88k-tdep.c (m88k_return_value): Likewise.
	* mep-tdep.c (mep_return_value): Likewise.
	* moxie-tdep.c (moxie_return_value): Likewise.
	* mt-tdep.c (mt_return_value): Likewise.
	* ppc-sysv-tdep.c (ppc64_sysv_abi_return_value): Likewise.
	* rs6000-aix-tdep.c (rs6000_return_value): Likewise.
	* score-tdep.c (score_return_value): Likewise.
	* sh-tdep.c (sh_return_value_nofpu): Likewise.
	(sh_return_value_fpu): Likewise.
	* sh64-tdep.c (sh64_return_value): Likewise.
	* spu-tdep.c (spu_return_value): Likewise.
	* v850-tdep.c (v850_return_value): Likewise.
	* xstormy16-tdep.c (xstormy16_return_value): Likewise.
	* xtensa-tdep.c (xtensa_return_value): Likewise.
	* ppc-tdep.h (ppc_sysv_abi_return_value): Update prototype.
	(ppc_sysv_abi_broken_return_value): Likewise.
	(ppc64_sysv_abi_return_value): Likewise.

	2006-04-28  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_o32_push_dummy_call): Handle MIPS16 FP
	doubles with a 64-bit FPU and the 32-bit ABI.
	(mips_o32_return_value): Likewise.

	2006-04-21  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_o32_push_dummy_call): For MIPS16 FP doubles
	do not swap words put in GP registers.
	(mips_o32_return_value): Likewise.

	2005-09-15  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-gdb]
	* stack.c (return_command): Guard against the case of the
	associated function being NULL.

	2005-05-26  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-dbg]
	* mips-tdep.c (mips_o32_push_dummy_call): Actually check for the
	MIPS16 mode for floats passed as arguments.

	2005-02-22  Maciej W. Rozycki  <macro@mips.com>
	[mti-mips16e-gcc3-gdb]
	* mips-tdep.c (mips_n32n64_return_value): Take a pointer to
	struct value instead of struct type and use it to check if
	using the MIPS16 calling convention.  Return the designated
	general purpose registers for floating-point values returned in
	MIPS16 mode.
	(mips_o32_return_value): Likewise.
	* i386-tdep.c (i386_return_value_type): New function, taking its
	body from...
	(i386_return_value): ... here.  Take a pointer to struct value
	instead of struct type and call i386_return_value_type.
	* amd64-tdep.c (amd64_return_value): Take a pointer to struct
	value instead of struct type.
	* cris-tdep.c (cris_return_value): Likewise.
	* hppa-tdep.c (hppa32_return_value): Likewise.
	(hppa64_return_value): Likewise.
	* m68hc11-tdep.c (m68hc11_return_value): Likewise.
	* m68k-tdep.c (m68k_return_value): Likewise.
	* mn10300-tdep.c (mn10300_return_value): Likewise.
	* ppc-linux-tdep.c (ppc_linux_return_value): Likewise.
	* ppc-sysv-tdep.c (do_ppc_sysv_return_value): Likewise.
	(ppc_sysv_abi_return_value): Likewise.
	(ppc_sysv_abi_broken_return_value): Likewise.
	* ppcnbsd-tdep.c (ppcnbsd_return_value): Likewise.
	* s390-tdep.c (s390_return_value): Likewise.
	* sparc-tdep.c (sparc32_return_value): Likewise.
	* sparc64-tdep.c (sparc64_return_value): Likewise.
	* vax-tdep.c (vax_return_value): Likewise.
	* eval.c (evaluate_subexp_standard): Pass the associated
	function's address to using_struct_return().
	* gdbarch.sh (return_value): Take a pointer to struct value
	instead of struct type.
	* infcall.c (call_function_by_hand): Pass the associated
	function's address to using_struct_return() and
	gdbarch_return_value().
	* infcmd.c (print_return_value): Take a pointer to struct value
	instead of struct type.
	(finish_command_continuation): Pass the associated function's
	address to using_struct_return() and print_return_value().
	* stack.c (return_command): Pass the associated function's
	address to using_struct_return() and gdbarch_return_value().
	* value.c (using_struct_return): Take a pointer to struct value
	instead of struct type.  Pass the associated function's address
	to gdbarch_return_value().
	* value.h (using_struct_return): Likewise.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.

2010-02-03  Maciej W. Rozycki  <macro@codesourcery.com>

	#mdi-12283.diff

	gdb/
	2010-02-03  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-sde-tdep.c (mips_sde_frame_cache): Expect this_frame.
	(mips_sde_frame_this_id): Likewise.
	(mips_sde_frame_base_address): Likewise.

	2008-10-15  Maciej W. Rozycki  <macro@codesourcery.com>
	Update MIPS SDE support for unwinder changes.
	* mips-sde-tdep.c (mips_sde_frame_prev_register): Expect
	this_frame.
	(mips_sde_frame_sniffer): Likewise.  Update for interface
	changes.
	(mips_sde_frame_base_sniffer): Likewise.
	(mips_sde_frame_unwind): Use mips_sde_frame_sniffer.
	(mips_sde_init_abi): Use frame_unwind_append_unwinder.

	2004-11-24  Nigel Stephens  <nigel@mips.com>
	* mips-sde-tdep.c (mips_sde_frame_cache): Compute offset from
	stack pointer to exception context based on the selected ABI.

	2004-10-06  Chris Dearman  <chris@mips.com>
	* mips-sde-tdep.c (mips_sde_elf_osabi_sniff_abi_tag_sections):
	".sde*" sections do not have to have contents.

	2004-09-28  Chris Dearman  <chris@mips.com>
	* sde-mips-tdep.c: New file containg SDE specific code.
	* configure.tgt (mips*-sde*-elf*): Add sde-mips-tdep.o to
	gdb_target_obs.
	* defs.h (gdb_osabi): Add GDB_OSABI_SDESDE OSABI.
	* osabi.c (gdb_osabi_names): Add SDE.

2010-02-03  Maciej W. Rozycki  <macro@codesourcery.com>

	#14680.diff

	gdb/
	2006-09-20  Maciej W. Rozycki  <macro@mips.com>
	[mti-fix-next]
	* mips-mdebug-tdep.c (mips_mdebug_frame_sniffer): If the PC is
	at the start of a function, then never assume the registers have
	been saved.

2010-02-02  Maciej W. Rozycki  <macro@codesourcery.com>

	#mips-mdebug-enable.diff

	gdb/
	2009-10-07  Daniel Jacobowitz  <dan@codesourcery.com>
	* mips-mdebug-tdep.c (mips_mdebug_frame_cache): Pass
	architecture to in_prologue.
	(mips_mdebug_frame_sniffer): Likewise.
	(mips_mdebug_frame_base_sniffer): Likewise.

	2008-10-15  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-mdebug-tdep.c (non_heuristic_proc_desc): Remove SYMTAB
	parameter from lookup_symbol call.

	Update MIPS MDEBUG support for unwinder changes.
	* mips-mdebug-tdep.c (mips_mdebug_frame_cache): Expect
	this_frame.
	(mips_mdebug_frame_this_id): Likewise.
	(mips_mdebug_frame_prev_register): Likewise.
	(mips_mdebug_frame_base_address): Likewise.
	(mips_mdebug_frame_sniffer): Likewise.  Update for interface
	changes.
	(mips_mdebug_frame_unwind): Use mips_mdebug_frame_sniffer.
	(mips_mdebug_append_sniffers): Use frame_unwind_append_unwinder.

	2008-01-16  Maciej W. Rozycki  <macro@mips.com>
	* mips-tdep.c (mips_gdbarch_init): For MIPSSDE register MDEBUG
	frame unwinders.
	* configure.tgt (mips*-sde*-elf*): Enable building of
	mips-mdebug-tdep.o.

2010-02-02  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	2010-02-02  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.c (mips16_scan_prologue): Use current_gdbarch if no
	frame has been passed.
	(mips32_scan_prologue): Likewise.

2010-02-01  Maciej W. Rozycki  <macro@codesourcery.com>

	#gdb-mipssde.diff

	gdb/
	2008-01-16  Maciej W. Rozycki  <macro@mips.com>
	* configure.tgt (mips*-sde*-elf*): Add -DMIPSSDE to $MT_CFLAGS.

2010-02-01  Maciej W. Rozycki  <macro@codesourcery.com>

	#mips-mdebug-tdep.diff

	gdb/
	2007-04-16  Maciej W. Rozycki  <macro@mips.com>
	* mips-mdebug-tdep.c, mips-mdebug-tdep.h: Revive from the attic.

2010-02-01  Maciej W. Rozycki  <macro@codesourcery.com>

	#14440-3.diff

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-invalidreg]
	* mips-tdep.c (mips_register_type): For the the "embedded"
	coprocessor registers, make the cooked register size dependent
	on the ISA, not the ABI.  For general registers always use the
	ABI register size.

2010-01-25  Maciej W. Rozycki  <macro@codesourcery.com>

	# [general]	Unsigned "char" configuration for SDE compatibility.
	#gdb-mips_char_signed.diff

	gdb/
	2008-03-11  Julian Brown  <julian@codesourcery.com>
	* remote-mips.c (sleep): Add Sleep() wrapper function for mingw32.

	2004-09-01  Nigel Stephens  <nigel@mips.com>
	* mips-tdep.c (mips_gdbarch_init): If MIPS_CHAR_SIGNED is
	defined then call set_gdbarch_char_signed, passing it as the
	value.

	This is so that gdb and gcc agree on the type of an unadorned
	char variable.  Fixes gdb.base/charset regression failure.

	2004-09-01  Nigel Stephens  <nigel@mips.com>
	* config/mips/tm-sde.h: New target header which defines
	MIPS_CHAR_SIGNED as 0.
	* configure.tgt (mips*-sde*-elf*): Define MT_CFLAGS to
	include the new header.
	* Makefile.in (MT_CFLAGS): Define.
	(GLOBAL_CFLAGS): Add MT_CFLAGS.
	* configure.ac: Substitute MT_CFLAGS.
	* configure: Regenerate.

	2004-08-23  Nigel Stephens  <nigel@mips.com>
	* configure.tgt (mips*-sde-elf*): Add ruleset for MIPS SDE.

2010-01-25  Maciej W. Rozycki  <macro@codesourcery.com>

	# [MIPS16]	Fix internal MIPS16 function annotation.
	#gdb-make_symbol_special.diff

	gdb/
	2008-01-29  Maciej W. Rozycki  <macro@mips.com>
	2010-01-25  Maciej W. Rozycki  <macro@codesourcery.com>
	* arch-utils.c (default_make_symbol_special): New function.
	* arch-utils.h (default_make_symbol_special): New declaration.
	* mips-tdep.c (mips_make_symbol_special): New function.
	(mips_gdbarch_init): Install it.
	* gdbarch.sh (make_symbol_special): New architecture method.
	(objfile, symbol): New declarations.
	* gdbarch.c, gdbarch.h: Regenerate.
	* dwarf2read.c (read_func_scope): Call
	gdbarch_make_symbol_special().

	gdb/testsuite/
	2008-01-29  Maciej W. Rozycki  <macro@mips.com>
	* gdb.cp/cp-relocate.exp: Qualify caller() being looked up.

2010-01-25  Maciej W. Rozycki  <macro@codesourcery.com>

	# [FP64]	Handle MIPS32r2 -mfp64.
	#14440-1.diff

	gdb/
	2007-11-07  Thiemo Seufer  <ths@mips.com>
	2010-01-21  Maciej W. Rozycki  <macro@codesourcery.com>
	* mips-tdep.h (mips_fpu_type): Add MIPS_FPU_64 flag.
	* mips-tdep.c (mips_float_regsize, mips_print_float_info,
	show_mipsfpu_command, set_mipsfpu_command): Handle MIPS_FPU_64
	flag.
	(set_mipsfpu_64bit_command): New function.
	(mips_gdbarch_init, mips_dump_tdep): Handle MIPS_FPU_64 flag.
	(_initialize_mips_tdep): Add 64-bit FPU command.

2010-01-21  Maciej W. Rozycki  <macro@codesourcery.com>

	# [DSP]		DSP registers.
	#14607.diff

	gdb/
	2009-03-29  Joseph Myers  <joseph@codesourcery.com>
	Issue #3722
	* features/mips-linux.xml, features/mips64-linux.xml: Do not
	include mips-dsp.xml.
	* features/mips-linux.c, features/mips64-linux.c: Regenerate.
	* mips-tdep.c (mips_gdbarch_init): If DSP feature not found, mark
	DSP registers as absent rather than treating this as an error.

	gdb/
	2005-12-06  Maciej W. Rozycki  <macro@mips.com>
	            Chris Dearman  <chris@mips.com>
	[mti-dsp-dbg]
	* features/mips-dsp.xml: New file.
	* features/mips64-dsp.xml: Likewise.
	* features/mips-linux.xml: Include mips-dsp.xml.
	* features/mips64-linux.xml: Include mips64-dsp.xml.
	* features/mips-linux.c: Regenerate.
	* features/mips64-linux.c: Regenerate.
	* inf-ptrace.c (inf_ptrace_fetch_register): Don't bail out
	having attempted to read an inexistent register; mark it as
	inaccessible in the cache instead.
	(inf_ptrace_store_register): Don't bail out having attempted to
	write an inexistent register.
	* mips-linux-nat.c (super_fetch_registers): Mark static.
	(super_store_registers): Likewise.
	(mips_linux_register_addr): Handle DSP registers.
	(mips64_linux_register_addr): Likewise.
	(mips64_linux_regsets_fetch_registers): Likewise.
	(mips64_linux_regsets_store_registers): Likewise.
	* mips-linux-tdep.c (supply_gregset, mips64_supply_gregset):
	Remove padding as the register array does not use the layout
	defined for embedded targets anymore.
	* mips-linux-tdep.h (DSP_BASE, DSP_CONTROL): New macros.
	* mips-tdep.c (NUM_MIPS_PROCESSOR_REGS): Set from
	MIPS_LAST_EMBED_REGNUM.
	(mips_generic_reg_names): Remove trailing null strings.
	(mips_tx39_reg_names): Likewise.
	(mips_linux_reg_names): New array of register names for Linux
	targets.
	(mips_register_name): Check for a null pointer in
	mips_processor_reg_names and return an empty string.
	(mips_stab_reg_to_regnum): Handle DSP accumulators.
	(mips_dwarf_dwarf2_ecoff_reg_to_regnum): Likewise.
	(mips_gdbarch_init): Likewise.  Initialize internal register
	indices for Linux.  Use MIPS_LAST_EMBED_REGNUM as appropriate.
	* mips-tdep.h (struct mips_regnum): Add dspacc/dspctl offsets.
	(MIPS_EMBED_CP2_REGNUM): Offset to CP2 registers.
	(MIPS_EMBED_DSPACC_REGNUM): Offset to DSP accumulator registers.
	(MIPS_EMBED_DSPCTL_REGNUM): Offset to DSP control registers.
	(MIPS_LAST_EMBED_REGNUM): Update accordingly.
	(MIPS_EMBED_NUM_REGS): New value to make sure that an even
	number of registers is used.
	* regcache.c (regcache_invalidate): Allow for an arbitrary
	setting of the cache state and replace with a wrapper to call
	the original function renamed to...
	(regcache_set_valid_p): ... this.
	* regcache.h (regcache_set_valid_p): New prototype.

	* gdb.xml/tdesc-regs.exp: Add "mips-dsp.xml" to the list of MIPS
	core registers.

2010-01-20  Maciej W. Rozycki  <macro@codesourcery.com>

	# [general]	FP register class and size check.
	#14440-2.diff

	gdb/
	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-floatregs]
	* mips-tdep.c (mips2_fp_compat): Ifdef out pointless code --
	function currently returns 0 in all cases.

	2005-09-21  Nigel Stephens  <nigel@mips.com>
	[mti-gdb-invalidreg]
	* mips-tdep.c (mips_float_register_p): New function which
	returns true if regnum is a floating point register.
	(mips_float_regsize): Returns h/w floating point register size,
	based on the ISA.
	(mips2_fp_compat): Handle a NULL pointer possibly passed.
	(mips_register_type): Use mips_float_register_p().
	(mips_print_fp_register): Use mips_float_regsize() instead of
	register_size().
	(mips_print_register): Likewise.
	(print_gp_register_row): Likewise.

	2004-11-05  David Ung  <davidu@mips.com>
	* mips-tdep.c (mips_o32_return_value): Use mips_float_regsize()
	rather than hardcoding the expected width of FP registers.

	2004-11-04  David Ung  <davidu@mips.com>
	* mips-tdep.c (mips_register_type): Use mips_float_regsize()
	rather than mips_isa_regsize() for FP registers.
	(mips_o32_push_dummy_call): Use mips_float_regsize() rather than
	register_size() for FP registers.

2010-01-20  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/hbreak.exp: Handle native configurations correctly.
	Handle the lack of hardware breakpoints on systems that
	otherwise support them.

	2010-01-19  Maciej W. Rozycki  <macro@codesourcery.com>
	Issue #3373
	* gdb.base/hbreak.exp (test_next_with_recursion): Set the
	breakpoint before the program is killed.

	2009-10-14  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/hbreak.exp: Match the prompt in gdb_expect.
	Update expected message for called functions.

	2008-10-21  Maciej W. Rozycki  <macro@codesourcery.com>
	* gdb.base/hbreak.exp: Adjust for 'info break' format changes.

	2005-11-11  Maciej W. Rozycki  <macro@mips.com>
	* gdb.base/hbreak.exp: New test for "hbreak" and "thbreak".

2010-01-18  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	2007-02-22  Maciej W. Rozycki  <macro@mips.com>
	* gdb.base/dbx.exp (gdb_file_cmd): Handle the new semantics of
	the "file" command.
	* lib/gdb.exp (gdb_file_cmd): Likewise.

2010-01-12  Maciej W. Rozycki  <macro@codesourcery.com>
            Pedro Alves  <pedro@codesourcery.com>

	Issue #2703
	gdb/
	* frame.h (create_new_current_frame): New prototype.
	* frame.c (create_new_current_frame): New function.
	* stack.c (do_restore_frame_chain_cleanup): New function.
	(parse_frame_specification_1): Limit the number of supported
	arguments to two.  Use the PC, if specified, for the frame ID to
	match against.  Use create_new_current_frame() and return
	information as to whether a new frame has been created.
	(frame_info): Save the frame state at the beginning and use
	do_frame_info_cleanup() to restore the current frame chain if
	needed.
	(parse_frame_specification): Update the call to
	parse_frame_specification_1().
	(select_frame_command): Likewise.

	gdb/doc/
	* gdb.texinfo (Selection): Remove leftover references to SPARC
	and 29k frame address selection.

	* release-notes-csl.xml (Frame manipulation bug fix): New.

2010-01-08  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/gdb2495.exp: Skip if gdb,nosignals.

2010-01-05  Joseph Myers  <joseph@codesourcery.com>

	* configure.ac: Handle arm*-*-nucleuseabi.
	* configure: Regenerate.

	bfd/
	* config.bfd: Handle arm*-*-nucleuseabi*.

2010-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #1933 - Backtrace through M-profile exceptions

	* release-notes-csl.xml (Backtracing through ARM M-profile
	exceptions): New note.

	gdb/
	* arm-tdep.c (arm_addr_bits_remove): Do not adjust the low
	bit of EXC_RETURN.
	(arm_m_exception_cache, arm_m_exception_this_id)
	(arm_m_exception_prev_register, arm_m_exception_unwind_sniffer)
	(arm_m_exception_unwind): New.
	(arm_gdbarch_init): Register arm_m_exception_unwind.

2009-12-30  Kazu Hirata  <kazu@codesourcery.com>

	Issue #3981
	gdb/
	* arm-tdep.c (arm_write_pc): Set the Thumb bit of the XPSR
	register if the target is an ARM Cortex-M profile device.
	* arm-tdep.h (XPSR_T): New.

	* release-notes-csl.xml: Document the change above.

2009-12-28  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from mainline:

	2009-12-28  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* defs.h (print_address_symbolic, build_address_symbolic): Update
	prototypes.
	* printcmd.c (print_address_symbolic): Take a gdbarch argument.
	Pass it to build_address_symbolic.  All callers updated.
	(build_address_symbolic): Take a gdbarch argument.  Use
	gdbarch_addr_bits_remove for functions.  All callers updated.

	Revert:

	2009-04-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi-var-child.exp: Allow <nothing+1> for Thumb.

	2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/member-ptr.exp: Allow +1 after function names.

2009-12-18  Maciej W. Rozycki  <macro@codesourcery.com>

	libiberty/
	* pex-common.c (pex_read_err): Set stderr_pipe to -1 if a
	corresponding stream has been opened.
	(pex_free): Close pipe file descriptors corresponding to child's
	stdout and stderr before waiting.

2009-12-16  Vladimir Prus  <vladimir@codesourcery.com>

	Flush output for -gdb-exit.

	gdb/
	* mi-main.c (mi_cmd_gdb_exit): Flush output.

2009-11-28  Vladimir Prus  <vladimir@codesourcery.com>

	Backport:
	2009-11-28  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* target.c (target_terminal_inferior): Use target_can_async_p, not
	target_is_async_p.

2009-11-26  Pedro Alves  <pedro@codesourcery.com>

	Issue #7133 - Fix win32 gdbserver and ctrl-c.

	* release-notes-csl.xml: Document fix.

	Backport from upstream:

	gdb/gdbserver/
	* win32-low.c (get_child_debug_event): On EXIT_THREAD_DEBUG_EVENT
	events, don't leave current_inferior pointing at null.

2009-11-26  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:

	gdb/gdbserver/
	* win32-low.c (LOG): Delete.
	(OUTMSG): Output to stderr.
	(OUTMSG2): Conditionalize on `debug_threads' variable, instead of
	on compile time LOG macro.
	(win32_wait): Fix debug output.

2009-11-26  Pedro Alves  <pedro@codesourcery.com>

	Backport from upstream:

	gdb/gdbserver/
	* win32-low.c (win32_add_one_solib): If the dll name is
	"ntdll.dll", prepend the system directory to the dll path.

2009-11-24  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #6721 - break *EXPR thread NUM syntax error

	* release-notes-csl.xml (Setting thread-specific breakpoints in GDB):
	New note.

	Backport from upstream:

	2009-11-24  Daniel Jacobowitz  <dan@codesourcery.com>

	PR gdb/8704

	gdb/
	* breakpoint.c (find_condition_and_thread): Correct task error message.
	* c-exp.y (yylex): Stop before "thread N", "task N", or abbreviations
	of those.

	gdb/doc/
	* gdb.texinfo (Thread-Specific Breakpoints): Thread specifiers
	are allowed after the breakpoint condition.

	gdb/testsuite/
	* gdb.base/condbreak.exp: Test combinations of "break *EXP",
	"if", and "thread".  Correct matching in the previous test.

2009-11-20  Joseph Myers  <joseph@codesourcery.com>

	Issue #5310

	* gcore.c: Include solib.h.
	(gcore_create_callback): Call solib_keep_data_in_core when
	considering not saving memory in core file.
	* solib-svr4.c (svr4_keep_data_in_core): New.
	(_initialize_svr4_solib): Initialize
	svr4_so_ops.keep_data_in_core.
	* solib.c (solib_keep_data_in_core): New.
	* solib.h (solib_keep_data_in_core): Declare.
	* solist.h (struct target_so_ops): Add keep_data_in_core.

2009-11-14  Daniel Jacobowitz  <dan@codesourcery.com>

	Remove unnecessary divergence from upstream.

	gdb/
	* breakpoint.c (update_watchpoint): Remove NULL check.
	* value.h (set_value_component_location): Delete extra
	declaration.
	* main.c (captured_main): Delete duplicated code.
	* Makefile.in (MAKEHTMLFLAGS): Delete duplicated setting.

2009-11-13  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (dwarf_decode_lines): Delete obsolete local
	comment.
	* eval.c (evaluate_subexp_with_coercion): Delete dead code.
	* infrun.c (step_stack_frame_id): Delete commented out definition.

	gdb/testsuite/
	* gdb.base/remote.exp: Delete commented out code.

2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from upstream:

	2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 16K.

	Revert:

	2006-06-10  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #669
	gdb/
	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 8K.

2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from upstream:

	2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/break1.c (struct some_struct, values): Move earlier.
	(marker4): Reference values.

	Revert:

	2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	Prevent unused variables from being discarded.
	* gdb.base/break.c (break1_references): Declare.
	(main): Call break1_references.
	* gdb.base/break1.c (break1_references): New function.

2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from upstream:

	2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/macscp.exp: Avoid the first FAIL if macro information
	is missing.

	Revert:

	2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/macscp.exp: Skip for armcc.

2009-11-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (dwarf2_add_member_fn): Update whitespace to match
	upstream.

2009-11-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (dwarf2_build_psymtabs_hard): Remove unneeded
	obsavestring.

2009-11-05  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from trunk:

	2009-11-01  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* config/m68k-emc.exp, lib/emc-support.exp,
	gdb.trace/gdb_c_test.c: Delete.
	* gdb.trace/actions.exp, gdb.trace/backtrace.exp, gdb.trace/circ.exp,
	gdb.trace/collection.exp, gdb.trace/deltrace.exp,
	gdb.trace/infotrace.exp, gdb.trace/limits.exp, gdb.trace/packetlen.exp,
	gdb.trace/passc-dyn.exp, gdb.trace/passcount.exp, gdb.trace/report.exp,
	gdb.trace/save-trace.exp, gdb.trace/tfind.exp, gdb.trace/tracecmd.exp,
	gdb.trace/while-dyn.exp, gdb.trace/while-stepping.exp: Remove special
	casing for m68k-*-elf.

	Revert:

	2006-11-27  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.trace/save-trace.exp, gdb.trace/collection.exp,
	gdb.trace/while-stepping.exp, gdb.trace/while-dyn.exp,
	gdb.trace/actions.exp, gdb.trace/limits.exp,
	gdb.trace/passc-dyn.exp, gdb.trace/tfind.exp,
	gdb.trace/packetlen.exp, gdb.trace/infotrace.exp,
	gdb.trace/report.exp, gdb.trace/passcount.exp,
	gdb.trace/backtrace.exp, gdb.trace/circ.exp,
	gdb.trace/tracecmd.exp, gdb.trace/deltrace.exp: Disable m68k-elf
	specific expectations.  Remove unterminated strings used as
	comments.

2009-11-01  Vladimir Prus  <vladimir@codesourcery.com>

	* gdb.texinfo (GDB/MI Stack Manipulation): Make
	-stack-list-arguments have the same documentation for parameter
	as -stack-list-locals. Add comas.

2009-10-29  Sandra Loosemore  <sandra@codesourcery.com>

	Issue #6707

	* release-notes-csl.xml (GDB memory find bug fix): New note.

	Backport from mainline:

	2009-10-29  Sandra Loosemore  <sandra@codesourcery.com>

	PR gdb/10783

	gdb/
	* target.c (simple_search_memory): Correct read_addr initialization
	in loop for searching subsequent chunks.
	
	gdb/gdbserver/
	* server.c (handle_search_memory_1): Correct read_addr initialization
	in loop for searching subsequent chunks.

2009-10-29  Pedro Alves  <pedro@codesourcery.com>

	Issue #6640: Unexpected behavior while stepping through code.

	* release-notes-csl.xml (GDB and programs linked with the
	--gc-sections linker option): New note.

	gdb/
	backport:
	2009-10-28  Pedro Alves  <pedro@codesourcery.com>
        * dwarf2-frame.c (dwarf2_build_frame_info): Discard --gc-section
	leftover FDEs.

2009-10-29  Pedro Alves  <pedro@codesourcery.com>

        Issue #6640

        backport:

        gdb/
        2009-08-06  Paul Pluzhnikov  <ppluzhnikov@google.com>

        * dwarf2-frame.c (struct dwarf2_cie): Remove 'next'.
        (struct dwarf2_cie_table): New.
        (struct dwarf2_fde): Remove 'next'.
        (struct dwarf2_fde_table): New.
        (struct comp_unit): Remove 'cie'.
        (bsearch_cie_cmp, bsearch_fde_cmp): New function.
        (find_cie, dwarf2_frame_find_fde): Use bsearch.
        (add_cie, add_fde): Use array instead of linked list.
        (decode_frame_entry, decode_frame_entry_1): New parameters.
        (qsort_fde_cmp): New function.
        (dwarf2_build_frame_info): Adjust.

2009-10-28  Pedro Alves  <pedro@codesourcery.com>

	Issue #6133 - Ctrl+C while target is running causes GDB to report
	different messages

	* release-notes-csl.xml (GDB interrupt handling bug fix): New
	note.

	backport:
	2009-10-28  Pedro Alves  <pedro@codesourcery.com>
	gdb/
	* infrun.c (keep_going): Make sure normal_stop is called if a QUIT
	is handled before reaching resume.

2009-10-19  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #6883 - Internal error after connecting and loading

	* release-notes-csl.xml (Errors after loading the debugged
	program): New note.

	gdb/
	* inline-frame.c (find_inline_frame_state): Check for changed PC
	here...
	(inline_frame_sniffer): ... not here.

2009-10-15  Vladimir Prus  <vladimir@codesourcery.com>

	Document fix for #6782.

	* release-notes-csl.xml: The change.

2009-10-14  Vladimir Prus  <vladimir@codesourcery.com>

        Prevent program output from mix with "^running".

	gdb/
	* mi/mi-interp.c (mi_on_resume): Output token
	and "^running" together, so that nothing else gets
	in between.
	
2009-10-12  Andrew Stubbs  <ams@codesourcery.com>

	gdb/
	* sh-linux-tdep.c (sh_linux_supply_fpregset): Skip fp registers for
	architectures that don't have any.
	(sh_linux_collect_fpregset): Likewise.

2009-10-08  Daniel Gutson  <dgutson@codesourcery.com>

	Issue #6697

	libiberty/
	* argv.c (expandargv): Use xmalloc instead of malloc,
	as suggested upstream.

2009-10-07  Pedro Alves  <pedro@codesourcery.com>

	Issue #6271.

	* release-notes-csl.xml: Document fix.

	gdb/
	* corelow.c (core_has_fake_pid): New.
	(core_close): Clear it.
	(add_to_thread_list): Fake a pid if one is not found on a Solaris
	core.  Add the inferior here.  Always add the thread, don't use
	thread_change_ptid.
	(core_open): Don't add the main thread or the inferior here unless
	we find that the core had no .reg/NN sections.
	(get_core_register_section): Handle Solaris cores with fake pids.

2009-10-07  Andrew Stubbs  <ams@codesourcery.com>

	gdb/
	* sh-tdep.c (sh_gdbarch_init): Add show_regs settings for
	bfd_mach_sh3_nommu, bfd_mach_sh2a_nofpu_or_sh3_nommu,
	bfd_mach_sh2a_or_sh3e, bfd_mach_sh2a_or_sh4, bfd_mach_sh4_nommu_nofpu,
	and bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu.
	Move bfd_mach_sh2a_or_sh4 to use the same configuration as
	bfd_mach_sh4.

2009-10-05  Daniel Gutson  <dgutson@codedsourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>
	Pedro Alves  <pedro@codesourcery.com>

	Issue #6697

	libiberty/
	* argv.c (consume_whitespace): New function.
	(only_whitespace): New function.
	(buildargv): Always use ISSPACE by calling consume_whitespace.
	(expandargv): Skip empty files.  Do not stop at the first empty
	argument (calling only_whitespace).
	* testsuite/test-expandargv.c: (test_data): Test empty lines
	and empty arguments.
	(run_tests): Fix false positives due to shorter arguments.

2009-09-29  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #4151 - CYGPATH support for the GDB input file.

	libiberty/
	* lrealpath.c (lrealpath): Use cygpath on Windows.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* lib/gdbserver-support.exp (gdbserver_start): Do not always
	increment portnum.  Wait for failed gdbserver in the background.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/remote.exp: Disable the slowest load test.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3781 - Interrupt during semihosting on Windows

	gdb/
	* ui-file.c (stdio_file_read): Call gdb_select before read.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #6361 - Run sepdebug.exp on remote hosts.

	gdb/testsuite/
	* gdb.base/sepdebug.exp: Try to compile with -Wl,--build-id to
	enable build-id tests.  Download the debug file to the host.
	For local hosts, test the .debug subdirectory explicitly.
	Comment debug-file-directory test.  Run commands on host instead
	of build.
	* lib/gdb.exp (separate_debug_filename): Delete.
	(build_id_debug_filename_get): Run commands on host instead of build.
	(gdb_gnu_strip_debug): Create the debug file in the same directory
	as the executable.  Run commands on host instead of build.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (current_target_name): New procedure.
	(gdb_wrapper_target): New variable.
	(gdb_wrapper_init): Set gdb_wrapper_target.
	(default_gdb_init): Check gdb_wrapper_target before rebuilding the
	wrapper.

2009-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (Multi-threaded debugging fix): Correct text.

2009-09-25  Andrew Stubbs  <ams@codesourcery.com>

	Issue 6372

	* release-notes-csl.xml: Add note.

	gdb/
	* configure.tgt (sh*-*-linux*): Add corelow.o to gdb_target_obs.
	* sh-linux-tdep.c: Include gdb_assert.h, gdb_string.h, regcache.h,
	regset.h and sh-tdep.h.
	(struct sh_linux_pt_regs, struct sh_linux_user_fpu_struct): New types.
	(sh_linux_supply_gregset, sh_linux_collect_gregset): New functions.
	(sh_linux_supply_fpregset, sh_linux_collect_fpregset): New functions.
	(sh_linux_gregset, sh_linux_fpregset): New variables.
	(sh_linux_regset_from_core_section): New function.
	(sh_linux_init_abi): Call set_gdbarch_regset_from_core_section.

2009-09-24  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3649 - "target qemu" and bi-endian QEMU

	gdb/
	* python/python.c (gdbpy_is_big_endian): New function.
	(GdbMethods): Add "is_big_endian".

2009-09-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (gdbserver multi-threaded debugging fix): New
	note.

	Backport from mainline:

	gdb/
	2009-07-28  Daniel Jacobowitz  <dan@codesourcery.com>

	* linux-low.c (linux_kill_one_lwp): Adjust kernel workaround to skip
	the main thread again.

2009-09-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (Multi-threaded debugging fix): New note.

	Backport from mainline:

	gdb/
	2009-07-28  Daniel Jacobowitz  <dan@codesourcery.com>

	* infrun.c (handle_inferior_event): Clear trap_expected after
	stepping past a single-step breakpoint.

2009-09-21  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* inferior.h (missing_displaced_stepping): Declare.
	* infrun.c (need_displaced_stepping): New function, from
	use_displaced_stepping.
	(use_displaced_stepping): Use need_displaced_stepping.
	(missing_displaced_stepping): New function.
	* remote.c (remote_start_remote): Require displaced stepping support
	for non-stop.

	gdb/testsuite/
	* lib/mi-support.exp (mi_gdb_target_cmd): Loosen non-stop error check.
	* gdb.mi/mi-nonstop-exit.exp, gdb.mi/mi-nonstop.exp,
	gdb.mi/mi-nsintrall.exp, gdb.mi/mi-nsmoribund.exp,
	gdb.mi/mi-nsthrexec.exp: Remove perror and fail after mi_run_to_main.

2009-09-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (GDB crash fix): New note.

	Backport from mainline:

	gdb/
	2009-08-21  Paul Pluzhnikov  <ppluzhnikov@google.com>

	* objfiles.h (gdb_bfd_ref): New prototype.
	* objfiles.c (gdb_bfd_ref): New function.
	(allocate_objfile): Call it.
	(gdb_bfd_unref): Adjust assertion.
	* solib.c (solib_map_sections): Add reference.
	(symbol_add_stub): Don't add reference here.
	* symfile.c (reread_symbols): Add reference.

	gdb/
	2009-08-09  Jan Kratochvil  <jan.kratochvil@redhat.com>

	* objfiles.c (gdb_bfd_unref): Use the bfd_usrdata accessor.
	* solib.c (symbol_add_stub): Likewise.
	* symfile.c (symfile_bfd_open): Assert BFD_USRDATA is NULL.

	gdb/
	2009-08-04  Paul Pluzhnikov  <ppluzhnikov@google.com>

	* objfiles.h (OBJF_KEEPBFD): Delete.
	(gdb_bfd_unref): New prototype.
	* objfiles.c (gdb_bfd_unref): New function.
	(free_objfile): Call gdb_bfd_unref.
	* solib.c (free_so): Likewise.
	(symbol_add_stub): Set refcount.

2009-09-18  Nathan Sidwell  <nathan@codesourcery.com>
	    Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #5911
	* release-notes-csl.xml: Copy release note from stable.

2009-09-09  Maxim Kuvyrkov  <maxim@codesourcery.com>

	gdb/gdbserver/
	* linux-m68k-low.c: Include <asm/ptrace.h>
	(ps_get_thread_area): Implement.

2009-09-08  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.base/long_long.exp: Permit leading zeros on floating-point
	exponents.
	* gdb.base/pointers.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.

2009-09-03  Joseph Myers  <joseph@codesourcery.com>

	gdb/testsuite/
	* gdb.base/ending-run.exp: Restrict regular expression matching
	line number to require closing brace following.

2009-09-03  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.python/python-prettyprint.exp (run_lang_tests): Copy
	python-prettyprint.py to the remote host.
	* gdb.python/python-mi.exp: Copy python-mi.py to the remote host.

2009-09-02  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_compile): Initialize shlib_load to 0.

2009-09-02  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #6205

	gdb/
	* dwarf2loc.c (struct piece_closure): New.
	(allocate_piece_closure): New function.
	(read_pieced_value): New function.
	(write_pieced_value): New function.
	(copy_pieced_value_closure): New function.
	(free_pieced_value_closure): New function.
	(pieced_value_funcs): Define.
	(dwarf2_evaluate_loc_desc): Return a computed value for a variable
	described with pieces.

2009-09-01  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #6414

	gdb/
	* value.c (unpack_bits_as_long): Use bytes_read instead of
	sizeof (val).

2009-09-01  Kazu Hirata  <kazu@codesourcery.com>

	gdb/testsuite/
	* gdb.base/break-always.exp: Do not expect full paths to file
	names.
	* gdb.base/commands.exp: Likewise.

2009-08-31  Nathan Froyd  <froydnj@codesourcery.com>

	Backport from HEAD:

	gdb/testsuite/
	2009-07-06  Jan Kratochvil  <jan.kratochvil@redhat.com>
	* lib/gdbserver-support.exp (gdbserver_start): Loop spawning
	gdbserver increasing $portnum if "Can't bind address" has been seen.

2009-08-28  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from HEAD:

	gdb/
	2009-08-28  Daniel Jacobowitz  <dan@codesourcery.com>
	PR gdb/10565
	* value.c (value_primitive_field): Do not save value_offset for
	bitfields.
	(unpack_bits_as_long): Do not read an entire ULONGEST.

	gdb/testsuite/
	2009-08-28  Daniel Jacobowitz  <dan@codesourcery.com>
	PR gdb/10565
	* gdb.base/bitfields.c (struct container, container): New.
	(main): Initialize it and call break5.
	* gdb.base/bitfields.exp (bitfield_at_offset): New test.

2009-08-27  Daniel Jacobowitz  <dan@codesourcery.com>
	    Nathan Froyd  <froydnj@codesourcery.com>

	Issue #4929

	gdb/testsuite/
	* lib/gdb.exp (gdb_compile): Also set rpath for shlib=, on a
	remote host.

2009-08-27  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #3275

	gdb/testsuite/
	* gdb.base/pending.exp: Use gdb_run_cmd to start the program
	instead of a bare "run"

2009-08-27 Tom Tromey  <tromey@redhat.com>
	   Kazu Hirata  <kazu@codesourcery.com>

	gdb/
	* gdb_wchar.h (INTERMEDIATE_ENCODING): Set to "UCS-4BE" or
	"UCS-4LE" if __sun__ is defined.

2009-08-27  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #4928

	gdb/testsuite/
	* gdb.dwarf2/dw2-basic.exp: Copy file1.txt to the remote host.
	* gdb.dwarf2/dw2-compressed.exp: Likewise.
	* gdb.dwarf2/dw2-intercu.exp: Likewise.
	* gdb.dwarf2/dw2-intermix.exp: Likewise.
	* gdb.dwarf2/dw2-producer.exp: Likewise.
	* gdb.dwarf2/mac-fileno.exp: Likewise.

2009-08-27  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #4928

	gdb/testsuite/
	* gdb.base/step-line.exp: Copy step-line.inp to the remote host.

2009-08-26  Julian Brown  <julian@codesourcery.com>

	gdb/gdbserver/
	* linux-low.c (linux_read_offsets): Add ptid_get_pid to extract pid
	from ptid_t returned from get_thread_process.

2009-08-26  Joseph Myers  <joseph@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi-basics.exp, gdb.mi/mi2-basics.exp: Resync with
	upstream version of last patch.

2009-08-25  Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #5562
	gdb/
	* arm-linux-tdep.c (ARM_OABI_SYSCALL_RESTART_SYSCALL): New macro.
	(ARM_LDR_PC_SP_12): Likewise.
	(arm_linux_restart_syscall_init): New function.
	(arm_linux_restart_syscall_tramp_frame): New variable.
	(arm_linux_init_abi): Install the
	arm_linux_restart_syscall_tramp_frame unwinder.

2009-08-18  Joseph Myers  <joseph@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi-basics.exp (test_cwd_specification): Do not test
	environment-pwd for remote host.
	* gdb.mi/mi2-basics.exp (test_cwd_specification): Likewise.

2009-08-17  Pedro Alves  <pedro@codesourcery.com>

	Issue #6247.

	Backport:
	2009-04-06  Paul Pluzhnikov  <ppluzhnikov@google.com>
	* gdb.base/default.exp: Fix "show convenience".

2009-08-14  Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #5333
	gdb/
	* remote.c (remote_watchpoint_addr_within_range): New function.
	(init_remote_ops): Use it.
	* release-notes-csl.xml
	(Remote debugging hardware watchpoint bug fix): New.

2009-08-13  Vladimir Prus  <vladimir@codesourcery.com>
	
	Add addresses to library-loaded notification.

	Eclipse has quite a lot of hard-wired assumptions that
	a shared library has start and end addresses, inside core
	debug framework.  We can either return zeros, or we can
	assume that in 99% of cases, code of a solib is a
	continious memory block, and report addresses.

	* mi/mi-interp.c (mi_solib_loaded): Report addresses.

2009-08-12  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* Makefile.in (FLAGS_TO_PASS): Escape $ in LDFLAGS setting.

2009-08-11  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.arch/altivec-abi.exp (altivec_abi_tests): Turn on printing of
	all frame arguments.
	* gdb.arch/altivec-regs.exp: Likewise.

2009-07-31  Kazu Hirata  <kazu@codesourcery.com>

	Issue #5979
	Backport:
	2009-07-31  Kazu Hirata  <kazu@codesourcery.com>
	gdb/
	* procfs.c (proc_set_current_signal): Populate mysinfo before
	copying it to arg.
	(proc_clear_current_signal): Likewise.
	(proc_set_watchpoint): Populate pwatch before copying it to arg.

2009-07-31  Daniel Jacobowitz  <dan@codesourcery.com>

	* target-descriptions.c (tdesc_gdb_type): Correct merge error
	in memset call.

2009-07-30  Daniel Gutson  <dgutson@codesourcery.com>

	Issue #4568

	gdb/
	* dwarf2read.c (dwarf2_add_member_fn): Check added.

	* release-notes-csl.xml: Document into existing note.

2009-07-27  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #5979

	* release-notes-csl.xml (GDB scripting support): Restrict to when
	python is present.

2009-07-27  Daniel Gutson  <dgutson@codesourcery.com>

	Issue #5773

	gdb/
	* dwarf2read.c (dwarf2_build_psymtabs_hard): Added check
	for non-null string attribute.

	release-notes-csl.xml: Document.

2009-07-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Support our local Python library layout.

	* release-notes-csl.xml (GDB scripting support): New note.

	gdb/
	* python/python.c (_initialize_python): Set Py_FrozenFlag
	and Py_NoSiteFlag.  Call Py_SetPath and 'import site' after
	initializing.
	* main.c (get_python_path): New function.
	* configure.ac: Add --with-python-path.
	* configure, config.in: Regenerated.

2009-07-23  Nathan Froyd  <froydnj@codesourcery.com>

	sim/ppc/
	* configure.ac: If build != host, create a separate build-config.h
	file desecribing the build machine.
	* configure: Regenerate.
	* lf.c: Include build-config.h instead of config.h
	* igen.c: Likewise.
	* misc.c: Likewise.
	* misc.h: Likewise.
	* filter.c: Likewise.
	* table.c: Likewise.

2009-07-22  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #5507 (read-sensitive bitfields)

	Backport from upstream:

	2009-07-21  Daniel Jacobowitz  <dan@codesourcery.com>
		    Vladimir Prus <vladimir@codesourcery.com>

	gdb/
	* valops.c (value_fetch_lazy): Handle bitfields explicitly.
	(value_assign): Remove unnecessary FIXME.  Honor the container
	type of bitfields if possible.
	* value.c (struct value): Add parent field.
	(value_parent): New function.
	(value_free): Free the parent also.
	(value_copy): Copy the parent also.
	(value_primitive_field): Do not read the contents of a lazy
	value to create a child bitfield value.  Set bitpos and offset
	according to the container type if possible.
	(unpack_bits_as_long): Rename from unpack_field_as_long.  Take
	field_type, bitpos, and bitsize instead of type and fieldno.
	(unpack_field_as_long): Use unpack_bits_as_long.
	* value.h (value_parent, unpack_bits_as_long): New prototypes.

	2009-07-21  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* value.c (struct value): Add reference_count field.
	(allocate_value_lazy): Initialize reference_count.
	(value_incref): New function.
	(value_free): Check the reference count.
	* value.h (value_incref): New prototype.

2009-07-17  Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #5110
	gdb/
	* mips-tdep.c (mips_insn16_frame_this_id): Mark the outermost
	frame.
	(mips_insn32_frame_this_id): Likewise.
	* release-notes-csl.xml (Stack unwinding termination bug fix):
	New.

2009-07-04  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/gdbserver/
	* linux-arm-low.c (arm_arch_setup): Update to use lwpid_of() and
	get_thread_lwp().

2009-06-26  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Update note.

2009-06-26  Daniel Jacobowitz  <dan@codesourcery.com>

	Temporarily revert import directive support.

	The block search in this patch interacts badly with our local
	support for missing DW_AT_MIPS_linkage_name, causing several
	test failures.  When Sami's whole branch is merged we can
	reapply this before next merge from FSF.

	gdb/
	2009-06-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* dwarf2read.c (process_die): Handle import statements
	(DW_TAG_imported_declaration, case DW_TAG_imported_module)
	(read_import_statement): New.
	(read_func_scope): Update using_directives to point to current context
	(read_lexical_block_scope): Ditto.
	* cp-support.h: Added prototype for cp_add_using.
	* cp-namespace.c: Removed local context_stack.
	(cp_initialize_namespace): Deleted.
	(cp_finalize_namespace): Deleted.
	(cp_add_using_directive): Use using_directives instead of using_list.
	(cp_add_using): No longer static.
	* buildsym.h: Created global using_direct variable.
	Created using_direct variable in context_stack.
	* buildsym.c (finish_block): Set using directives for the block under
	construction.
	(start_symtab): Removed call to cp_initialize_namespace().
	(end_symtab): Removed call to cp_finalize_namespace().
	(push_context): Save and reset using_directives.
	* block.c (block_using): Return using directives for given
	block instead of static block.

	gdb/testsuite/
	2009-06-23  Sami Wagiaalla  <swagiaal@redhat.com>

	* gdb.cp/namespace-using.exp: New test.
	* gdb.cp/namespace-using.cc: New test.

2009-06-26  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Update note.

2009-06-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): New note.

2009-06-24  Pedro Alves  <pedro@codesourcery.com>

	Issue #5710

	* release-notes-csl.xml (GDB internal warning fix): New note to
	mention fix.

	gdb/
	* dbxread.c (read_dbx_symtab): Clear has_line_numbers when ending
	a psymtab.

2009-06-05  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #4331, #5675

	* release-notes-csl.xml (Startup code debugging fixes): New note for
	this and the preceding patch.

	gdb/
	* frame.c (get_frame_id): Default to outer_frame_id if the this_id
	method does not supply an ID.  Assert that the result is not
	null_frame_id.
	(outer_frame_id): New.
	(frame_id_p): Accept outer_frame_id.
	(frame_id_eq): Allow outer_frame_id to be equal to itself.
	(frame_find_by_id): Revert previous local workarounds.
	(get_prev_frame_1): Adjust end-of-stack check to test outer_frame_id.
	* frame.h (null_frame_id, frame_id_p): Update comments.
	(outer_frame_id): Declare.
	* infrun.c (handle_inferior_event): Do not treat all steps from the
	outermost frame as subroutine calls.

	* libunwind-frame.c (libunwind_frame_this_id): Do not clear THIS_ID.
	* hppa-tdep.c (hppa_stub_frame_this_id): Likewise.
	* ia64-tdep.c (ia64_frame_this_id): Likewise.
	(ia64_libunwind_frame_this_id, ia64_libunwind_sigtramp_frame_this_id):
	Use outer_frame_id instead of null_frame_id.
	* amd64obsd-tdep.c (amd64obsd_trapframe_cache): Use outer_frame_id.
	* i386obsd-tdep.c (i386obsd_trapframe_cache): Likewise.
	* inline-frame.c (inline_frame_this_id): Refuse outer_frame_id.
	* thread.c (restore_selected_frame): Update comment and remove
	frame_id_p check.

	gdb/doc/
	* gdbint.texinfo (Unwinding the Frame ID): Reference outer_frame_id.

2009-06-05  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #5675

	Backport from HEAD:

	gdb/
	2008-12-05  Pedro Alves  <pedro@codesourcery.com>

	* infcmd.c (step_1, step_once): Look up the stepping range based
	on the current PC, not on stop_pc.

2009-06-03  Joseph Myers  <joseph@codesourcery.com>

	Issue #5557

	Backport from FSF:

	2008-11-04  Daniel Jacobowitz  <dan@codesourcery.com>
	* eval.c (evaluate_subexp_standard): Assert that there is at
	least one array dimension.

2009-06-03  Daniel Gutson  <dgutson@codesourcery.com>

	Issue #5313 - GDB cannot read thread info from core file

	bfd/
	* bfd.m4 (BFD_HAVE_SYS_PROCFS_TYPE): Define _STRUCTURE_PROC before including procfs.h.
	(BFD_HAVE_SYS_PROCFS_TYPE_MEMBER): Likewise.
	* configure.in: Added autoconf probe for the pr_fpreg member.
	* configure: Regenerated.
	* config.in: Regenerated.
	* elf.c: Define _STRUCTURE_PROC before including procfs.h.

	gdb/
	* procfs.c: (procfs_do_thread_registers) Use elfcore_write_lwpstatus.

	* release-notes-csl.xml: Document.

2009-05-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #5368 - assertion failures on "finish"

	* release-notes-csl.xml (GDB finish command internal error): New note.

	gdb/
	* infcmd.c (finish_backward, finish_forward): Use get_stack_frame_id.
	* infrun.c (insert_step_resume_breakpoint_at_frame): Likewise.

2009-05-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Reduce failures due to flaky NFS coherency.

	gdb/testsuite/

	* gdb.mi/mi-async.exp, gdb.mi/mi-basics.exp,
	gdb.mi/mi-break.exp, gdb.mi/mi-cli.exp,
	gdb.mi/mi-disassemble.exp, gdb.mi/mi-eval.exp,
	gdb.mi/mi-file-transfer.exp, gdb.mi/mi-file.exp,
	gdb.mi/mi-regs.exp, gdb.mi/mi-return.exp,
	gdb.mi/mi-simplerun.exp, gdb.mi/mi-stepi.exp,
	gdb.mi/mi-var-block.exp, gdb.mi/mi-var-cmd.exp,
	gdb.mi/mi-var-display.exp, gdb.mi/mi-var-invalidate.exp,
	gdb.mi/mi-watch.exp, gdb.mi/mi2-basics.exp,
	gdb.mi/mi2-break.exp, gdb.mi/mi2-cli.exp,
	gdb.mi/mi2-disassemble.exp, gdb.mi/mi2-eval.exp,
	gdb.mi/mi2-file.exp, gdb.mi/mi2-regs.exp,
	gdb.mi/mi2-return.exp, gdb.mi/mi2-simplerun.exp,
	gdb.mi/mi2-stepi.exp, gdb.mi/mi2-var-block.exp,
	gdb.mi/mi2-var-child.exp, gdb.mi/mi2-var-cmd.exp,
	gdb.mi/mi2-var-display.exp, gdb.mi/mi2-watch.exp,
	gdb.server/ext-run.exp, gdb.server/file-transfer.exp,
	gdb.server/server-mon.exp, gdb.server/server-run.exp,
	gdb.trace/actions.exp, gdb.trace/backtrace.exp,
	gdb.trace/deltrace.exp, gdb.trace/infotrace.exp,
	gdb.trace/packetlen.exp, gdb.trace/passc-dyn.exp,
	gdb.trace/passcount.exp, gdb.trace/report.exp,
	gdb.trace/save-trace.exp, gdb.trace/tfind.exp,
	gdb.trace/tracecmd.exp, gdb.trace/while-dyn.exp,
	gdb.trace/while-stepping.exp: Use a unique name for the compiled
	executable.

2009-05-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from upstream:
	gdb/testsuite/
	2009-03-22  Jan Kratochvil  <jan.kratochvil@redhat.com>

	Fix a racy FAIL.
	* gdb.base/auxv.exp (fetch_auxv): Fix trailing newlines consumption.
	* gdb.base/callfuncs.exp (fetch_all_registers): Likewise.

2009-05-20  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	Port 2009-01-14  Kai Tietz  <kai.tietz@onevision.com>
	* ser-mingw.c (console_select_thread): Add return to make
	compiler happy.
	(pipe_select_thread): Likewise.
	(file_select_thread): Likewise.

2009-05-20  Maciej W. Rozycki  <macro@codesourcery.com>

	Issue #3329
	gdb/
	* elfread.c (elf_symtab_read): Only mark a minimal symbol as
	special if it actually exists.  Merge the checks for this
	conditions.

	* release-notes-csl.xml (GDB backwards compatibility fix): New.

2009-05-15  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/gdbserver/
	* configure.ac (i[34567]86-*): Check if we're targetting x86-64
	with an i686 compiler.
	* configure.srv (i[34567]86-*-linux*): Pull in x86-64 handling if
	needed.
	* configure: Rebuilt.

2009-05-14  Vladimir Prus  <vladimir@codesourcery.com>

	Unbreak read-sensitive values. The existing XML
	parsing code indicates read-sensitivity by setting
	a type instance flag, while MI level checks flags
	on the main type. This patch makes read-sensitivity
	a property of type instance.

	* release-notes-csl.xml: Document the fix.

	gdb/
	* gdbtypes.h (enum type_flag_value): Shift initial value
	more. Define each next value in terms of the previous one.
	Drop TYPE_FLAG_READ_SENSITIVE value.
	(enum type_instance_flag_value): New value
	TYPE_INSTANCE_FLAG_READ_SENSITIVE.
	(TYPE_READ_SENSITIVE): Check instance flags.
	(struct main_type): Remove flag_read_sensitive field.
	* xml-tdesc.c (tdesc_start_reg): Use TYPE_INSTANCE_FLAG_READ_SENSITIVE.

2009-05-04  Daniel Gutson  <dgutson@codesourcery.com>

	Issue #5305

	* release-notes-csl.xml: Document fix.

	Backport:
	2009-02-16  Pedro Alves  <pedro@codesourcery.com>

	* corelow.c (core_close): Don't hardcode the core's pid.
	(core_open): Find core threads before calling
	post_create_inferior.
	(add_to_thread_list, get_core_register_section): Take into account
	systems where the regset section names encode the pid of the
	inferior.

	* gdbarch.sh (core_reg_section_encodes_pid): New gdbarch setting.
	* gdbarch.h, gdbarch.c: Regenerate.

	* amd64-sol2-tdep.c (amd64_sol2_init_abi): Set it.
	* i386-sol2-tdep.c (i386_sol2_init_abi): Set it.
	* sparc-sol2-tdep.c (sparc32_sol2_init_abi): Set it.
	* sparc64-sol2-tdep.c (sparc64_sol2_init_abi): Set it.

2009-05-01  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3872 (Register browsing for little-endian)

	gdb/
	* gdbtypes.c (create_copied_types_hash): Handle objfile == NULL.
	(copy_type_recursive): Likewise.
	* target-descriptions.c (struct tdesc_reg): Replace gdb_type
	with little_type and big_type.
	(struct tdesc_space): Replace type with little_type and big_type.
	(struct tdesc_feature): Replace types with little_types and
	big_types.
	(tdesc_create_big_endian_types): New function.
	(tdesc_named_type_internal): Renamed from tdesc_named_type.  Add
	a big_endian flag and call tdesc_create_big_endian_types if
	needed.
	(tdesc_named_type): Use tdesc_named_type_internal.
	(tdesc_register_type): Check endianness and use little_type and
	big_type.
	(tdesc_create_reg): Do not set gdb_type here.
	(tdesc_free_feature): Free little_types and big_types.
	(tdesc_finish_feature): New function.
	(tdesc_record_type): Push to little_types only.
	(tdesc_create_space): Set little_type only.
	(make_space_value): Take additional arguments.  Use little_type and
	big_type.
	(tdesc_arch_changed_observer): Update call to make_space_value.
	(maint_print_c_tdesc_cmd): Walk little_types only.
	* target-descriptions.h (tdesc_finish_feature): Declare.
	* xml-tdesc.c (struct tdesc_parsing_data): Add current_type_size.
	(tdesc_end_feature): New function.
	(tdesc_start_union): Clear current_type_size.
	(tdesc_start_struct): Likewise.  Check the size attribute instead of
	hard-coding size.
	(tdesc_start_flags): Remove blank line.  Clear current_type_size.
	(tdesc_start_field): Check for explicitly sized types.  Clarify
	comments.  Treat bit-fields as little endian.  Remove FIXMEs.
	(struct_union_attributes): Add "size" attribute.
	(target_children): Use tdesc_end_feature.

2009-04-27  Julian Brown  <julian@codesourcery.com>

	Issue #5167

	libiberty/
	* pex-win32.c (pex_win32_pipe): Add _O_NOINHERIT.
	(pex_win32_exec_child): Ensure each process has only one handle open
	on pipe endpoints. Close standard input after creating child for
	symmetry with standard output/standard error.

2009-04-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi-var-child.exp: Allow <nothing+1> for Thumb.

2009-04-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.opt/inline-cmds.exp: Make func1 tests more reliable.

2009-04-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* eval.c (evaluate_subexp_for_address): Always pass a frame to
	locate_var_value if needed.
	(evaluate_subexp_with_coercion): Likewise.

2009-04-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_dwarf2_prev_register): Use
	frame_set_unwound_pc_location.
	* frame.c (struct frame_info): Add prev_pc_location.
	(frame_set_unwound_pc_location): New.
	(get_prev_frame_1): Use prev_pc_location and
	frame_set_unwound_pc_location.
	* frame.h (frame_set_unwound_pc_location): Declare.

2009-04-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* top.c (execute_command): Select a frame before checking the current
	language.  Only output a message if verbose.

2009-03-30  Joseph Myers  <joseph@codesourcery.com>

	Issue #5084

	Backport from FSF:

	opcodes/
	* arm-dis.c (print_insn): Also check section matches in backwards
	search for mapping symbol.

2009-03-26  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (Errors when inserting breakpoints): Update
	target.

2009-03-23  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/gdbserver/
	* configure.srv: Update arm-uclinux support.

2009-03-22  Pedro Alves  <pedro@codesourcery.com>

	* release-notes-csl.xml: Fix </literal> typo.

2009-03-22  Pedro Alves  <pedro@codesourcery.com>

	Issue #4926

	* release-notes-csl.xml: Document fix.

	gdb/
	* dwarfread.c (add_partial_symbol): Set actual_name from
	linkage_name if available.

2009-03-21  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* solib.c (_initialize_solib): Correct typo in sysroot-on-target
	command.

2009-03-13   Vladimir Prus   <vladimir@codesourcery.com>

	Backport of the following mainline patches:

	2009-02-14  Vladimir Prus  <vladimir@codesourcery.com>
        Include frame information for *stopped due to CLI commands.

        * ada-tasks.c (ada_normal_stop_observer): Adjust prototype.
        * infcmd.c (finish_command_continuation): Pass '1' for
        'print_frame' parameter to the observer.
        * infrun.c (normal_stop): Don't print mi-specific information
        here. Pass 'stop_print_frame' to the 'print_frame' parameter
        of the observer.
        * mi/mi-interp.c (mi_on_normal_stop): Adjust prototype.
        If we need to print frame, and current uiout is not the MI one,
        print frame again.

	2009-02-17  Vladimir Prus  <vladimir@codesourcery.com>
	Unbreak observer tests.

    	gdb/
    	* observer.c (observer_test_first_notification_function)
    	(observer_test_second_notification_function)
    	(observer_test_third_notification_function): Adjust prototype.

    	gdb/doc/
    	* observer.texi (test_notification): New observer.

    	gdb/testsuite/
    	* gdb.gdb/observer.exp: Use test_notification observer, not
    	normal_stop, everywhere.
    	(test_normal_stop_notifications): Rename to...
    	(test_notifications): ...this.
    	(test_observer_normal_stop): Rename to...
    	(test_observer): ...this.


	2009-03-12  Vladimir Prus  <vladimir@codesourcery.com>
    	Include token in ^running notification for CLI commands.

    	gdb/
    	* mi/mi-main.c (mi_execute_command): Set current_token here.
    	(mi_cmd_execute): Do not set current_token here.

    	gdb/testsuite/
    	* gdb.mi/mi-cli.exp: Verify that CLI commands that run inferior
    	include the token in ^running and frame info in *stopped.

	2009-03-13  Vladimir Prus  <vladimir@codesourcery.com>
        Robustify mi-cli.exp.

	[gdb/testsuite]
	* gdb.mi/mi-cli.exp: Adjust for output difference in
	sync and async modes.

	2009-03-13  Vladimir Prus  <vladimir@codesourcery.com>
	Eliminate some sleep usage.

    	gdb/testsuite/
    	* gdb.mi/basics.c (do_nothing): New.
    	(main): Use do_nothing instead of printf, so that
    	not to introduce race condition between output of
    	inferiour and output of gdb. Do not use sleep as it
    	is not generally available on embedded targets.

2009-03-13  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/gdbserver/
	Backport 2009-03-13  Nathan Sidwell  <nathan@codesourcery.com>
	* Makefile.in, hostio-errno.c, errno.c, xtensa-xtregs.c: Change to
	GPLv3, update license URL.

2009-03-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: New note for VFP register support.

	gdb/testsuite/
	* gdb.base/float.exp: Handle VFP registers.

	gdb/
	* target-descriptions.c (tdesc_register_type): Make public.
	* target-descriptions.h (tdesc_register_type): Declare.
	* arm-tdep.c (arm_neon_quad_read, arm_neon_quad_write): New functions.
	(arm_push_dummy_call): Use arm_neon_quad_write.
	(arm_neon_double_type, arm_neon_quad_type): New functions.
	(arm_register_type): Handle NEON registers.  Call
	tdesc_register_type if necessary.
	(arm_return_value): Use arm_neon_quad_write and arm_neon_quad_read.
	(arm_register_name): Handle NEON quad registers.
	(arm_pseudo_read): Rename from arm_pseudo_vfp_read.  Use
	arm_neon_quad_read.
	(arm_pseudo_write): Rename from arm_pseudo_vfp_write.  Use
	arm_neon_quad_write.
	(arm_gdbarch_init): Detect VFPv3 and NEON.  Assign numbers to
	double-precision registers.  Register NEON pseudos.
	* arm-tdep.h (enum gdb_regnum): Add ARM_D0_REGNUM and
	ARM_D31_REGNUM.
	(struct gdbarch_tdep): Add have_neon_pseudos, have_neon,
	neon_double_type, and neon_quad_type.
	* regformats/rs6000/powerpc-e500mc.dat: Regenerate.
	* regformats/arm-with-neon.dat, regformats/arm-with-vfpv2.dat,
	regformats/arm-with-vfpv3.dat: Generate.

	gdb/gdbserver/
	* linux-low.c (linux_write_memory): Update debugging output.
	* Makefile.in (clean): Add new descriptions.
	(arm-with-vfpv2.o, arm-with-vfpv2.c, arm-with-vfpv3.o)
	(arm-with-vfpv3.c, arm-with-neon.o, arm-with-neon.c): New rules.
	* configure.srv: Add new files for arm*-*-linux*.
	* linux-arm-low.c: Add new declarations.
	(PTRACE_GETVFPREGS, PTRACE_SETVFPREGS): Define if undefined.
	(arm_hwcap, HWCAP_VFP, HWCAP_IWMMXT, HWCAP_NEON, HWCAP_VFPv3)
	(HWCAP_VFPv3D16): New.
	(arm_fill_wmmxregset, arm_store_wmmxregset): Check HWCAP_IWMMXT
	instead of __IWMMXT__.
	(arm_fill_vfpregset, arm_store_vfpregset, arm_get_hwcap)
	(arm_arch_setup): New.
	(target_regsets): Remove #ifdef.  Add VFP regset.
	(the_low_target): Use arm_arch_setup.
	* features/Makefile: Make expedite settings only architecture
	specific.
	(WHICH): Update.
	* features/arm-with-vfp.xml, features/arm-vfp.xml: Delete.
	* features/arm-with-neon.xml, features/arm-with-vfpv2.c,
	features/arm-with-vfpv3.c, features/arm-vfpv2.xml,
	features/arm-vfpv3.xml, features/arm-with-vfpv2.xml,
	features/arm-with-vfpv3.xml, features/arm-with-neon.c: New files.

2009-03-11  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from mainline:

	gdb/
	2009-03-11  Daniel Jacobowitz  <dan@codesourcery.com>
	* breakpoint.c (bpstat_check_breakpoint_conditions): Use
	value_mark and value_free_to_mark.
	* objfiles.c (free_objfile): Call objfile_free_data before
	freeing the BFD.

2009-03-11  Joseph Myers  <joseph@codesourcery.com>

	gdb/testsuite/
	* lib/mi-support.exp: Change ${MI_gdb_prompt} to ${mi_gdb_prompt}.

2009-03-09  Vladimir Prus  <vladimir@codesourcery.com>

	Issue #4680.

	* release-notes-csl.xml: Describe fix.

	gdb/
	* mi/mi-main.c (mi_print_timing_maybe): New.
	(captured_mi_execute_command): Simplify. Output timings to
	CLI commands, too.
	(mi_execute_async_cli_command): Do not print timings.
	* mi/mi-main.h (mi_print_timing_maybe): Declare.
	* mi/mi-interp.c (mi_on_normal_stop): Call
	mi_print_timing_maybe.

2009-03-09  Kazu Hirata  <kazu@codesourcery.com>

	Issue #4578
	gdb/
	* arm-linux-nat.c (fetch_register, store_register): Use
	ARM_CPSR_GREGNUM instead of ARM_CPSR_REGNUM.
	* arm-linux-tdep.c (arm_linux_supply_gregset,
	arm_linux_collect_gregset): Likewise.
	* arm-linux-tdep.h (ARM_CPSR_GREGNUM): New.
	* arm-tdep.h (ARM_CPSR_REGNUM): Remove.
	* release-notes-csl.xml: Mention the bug fix above.

2009-03-03  Pedro Alves  <pedro@codesourcery.com>

	* release-notes-csl.xml: Document fix.

	Backport from FSF:
	gdb/
	2009-03-03  Pedro Alves  <pedro@codesourcery.com>

	* top.c (quit_target): Check for target_has_execution before
	killing or detaching from inferiors.

2009-03-02  Joseph Myers  <joseph@codesourcery.com>

	Issue #4730

	gdb/
	* arm-tdep.c (enum arm_vfp_cprc_base_type,
	arm_vfp_cprc_unit_length, arm_vfp_cprc_reg_char,
	arm_vfp_cprc_sub_candidate, arm_vfp_call_candidate,
	arm_vfp_abi_for_function): New.
	(arm_push_dummy_call): Handle VFP ABI.
	(arm_extract_return_value, arm_store_return_value): Handle
	ARM_FLOAT_VFP case.
	(arm_return_value): Handle VFP ABI.
	(arm_gdbarch_init): Default fp_model based on Tag_ABI_VFP_args for
	EABI binaries.

2009-02-22  Mark Mitchell  <mark@codesourcery.com>

	Issue #4694
	* release-notes-csl.xml: Document fix.
	Backport:
	libiberty/
	2009-02-21  Mark Mitchell  <mark@codesourcery.com>
	* make-temp-file.c (<windows.h>): Include on Windows.
	(choose_tmpdir): On Windows, use GetTempPath.

2009-02-19  Joseph Myers  <joseph@codesourcery.com>

	Backport:

	gdb/
	2008-12-08  Joel Brobecker  <brobecker@adacore.com>

	* python/python-value.c (values_in_python): Add specific initialization
	to NULL to work-around a MacOS linker bug.

2009-02-03  Kazu Hirata  <kazu@codesourcery.com>

	config/
	* mh-mingw: Add a comment.

	libiberty/
	* cygpath.c (msvcrt_dll): Change the return type to HMODULE.
	(msvcrt_fopen): Use HMODULE for the return value from msvcrt_dll.

2009-02-01  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* mi/mi-interp.c (mi_solib_loaded, mi_solib_unloaded):
	New.
	(mi_interpreter_init): Register the above.
	* solib.c (clear_solib): Notify solib unload.

	gdb/testsuite/
	* gdb.mi/mi-nonstop.exp (notifs): Adjust for library
	notifications.
	* gdb.mi/mi-nsintrall.exp (notifs): Likewise.
	* gdb.mi/mi-nsmoribund.exp (notifs): Likewise.
	* lib/mi-support.exp (library_loaded_re): New.
	(mi_run_cmd, mi_send_resuming_command_raw): Adjust.

2009-01-24  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/testsuite/
	* lib/mi-support.exp (get_mi_thread_list)
	(check_mi_and_console_list): Adjust for the current thread
	information in -thread-list-ids output.

2009-01-23  Vladimir Prus  <vladimir@codesourcery.com>

	Make -thread-list-ids report current thread, so that
	a frontend that does not need the details for each
	thread can use it, as opposed to more expensive -thread-info.

	gdb/
	* thread.c (do_captured_list_thread_ids): Report the
	current thread.

2009-01-20  Kazu Hirata  <kazu@codesourcery.com>

	Issue #4205
	gdb/
	* gdb/procfs.c (info_mappings_callback): Cast map->pr_size to
	unsigned long.

2009-01-20  Kazu Hirata  <kazu@codesourcery.com>

	Issue #4205
	Backport from mainline:
	bfd/
	2008-11-13  Joel Brobecker  <brobecker@adacore.com>
	* configure.in: Deactivate large-file support on native 32bit
	sparc-solaris unless the user explicitly requested it.
	* configure: Regenerate.

	bfd/
	2008-11-25  Joel Brobecker  <brobecker@adacore.com>
	* configure.in: Deactivate large-file support on native x86-solaris
	as well unless the user explicitly requested it.
	* configure: Regenerate.

2009-01-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from mainline:

	gdb/
	2009-01-20  Daniel Jacobowitz  <dan@codesourcery.com>

	PR gdb/9346
	* infcmd.c (signal_command): Do not specify a resume PC.

	gdb/testsuite/
	2009-01-20  Daniel Jacobowitz  <dan@codesourcery.com>

	PR gdb/9346
	* gdb.base/interrupt.c (sigint_handler): New.
	(main): Install a SIGINT handler if SIGNALS is defined.  Exit
	on error.
	* gdb.base/interrupt.exp: Define SIGNALS unless gdb,nosignals.
	Test "signal SIGINT".

2009-01-17  Joseph Myers  <joseph@codesourcery.com>

	* remote.c (remote_escape_output, remote_unescape_input): Move
	back up in file.

2009-01-14  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* Makefile.in (PKGVERSION, REPORT_BUGS_TO): Remove.
	(GDB_CFLAGS): Revert to upstream version.
	* regcache.c: Eliminate whitespace at end of line.
	* remote.c: Move remote_escape_output and remote_unescape_input to
	upstream location in file.
	* symfile.h: Remove duplicate include of symtab.h.

2009-01-07  Sandra Loosemore  <sandra@codesourcery.com>

	Issue #3867

	* release-notes-csl.xml (Remote debugging connection auto-retry):
	New note.

2009-01-06  Sandra Loosemore  <sandra@codesourcery.com>

	Issue #3867

	Backport from mainline:

	gdb/
	* ser-tcp.c: Adjust includes.
	(tcp_set_cmdlist, tcp_show_cmdlist): Declare.
	(tcp_auto_retry, tcp_retry_limit): Declare.
	(TIMEOUT): Remove, in favor of tcp_retry_limit.
	(POLL_INTERVAL): Increase to 5, in favor of backoff logic.
	(wait_for_connect): New function.
	(net_open): Use it.  Add auto-retry logic.
	(set_tcp_cmd, show_tcp_cmd): New functions.
	(_initialize_ser_tcp): Initialize new "set/show tcp auto-retr
	and "set/show tcp connect-timeout" commands.
	* NEWS: Document new commands.

	gdb/doc/
	* gdb.texinfo (Remote Configuration): Document new
	"set/show tcp auto-retry" and "set/show tcp connect-timeout"
	commands.

2008-12-24  Stan Shebs  <stan@codesourcery.com>

	Remote login support.
	gdb/
	* remote.c (remote_username, remote_password): New globals.
	(struct remote_state): New field must_auth.
	(PACKET_qAuth): New enum.
	(remote_start_remote): Send qAuth if required.
	(remote_query_auth): New.
	(remote_must_auth_feature): New.
	(remote_protocol_features): Add MustAuth.
	(_initialize_remote): Add qAuth packet, set commands.

	gdb/doc/
	* gdb.texinfo (Remote Configuration): Document set remote username
	and password.
	(General Query Packets): Document qAuth packet and MustAuth feature.

2008-11-28  Nathan Froyd  <froydnj@codesourcery.com>

	* release-notes-csl.xml: Fix duplicated UUID.

2008-11-24  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document target extended-remote fix.

2008-11-24  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3409
	Backport from GDB HEAD:

	gdb/
	2008-11-24  Daniel Jacobowitz  <dan@codesourcery.com>

	PR gdb/2474
	* remote.c (remote_read_description_p): New function.
	(remote_start_remote): Try to fetch the target description
	before adding shared libraries.  Try again later if the
	target is running but stopped.
	(remote_open_1): Mark extended targets as exited by default.
	(remote_read_description): Check target_has_execution.

2008-11-19  Nathan Froyd  <froydnj@codesourcery.com>

	* release-notes-csl.xml (isel instruction support): New note.

	sim/ppc/
	* ppc-instructions (isel): New instruction.  Renumber sections
	to be consistent with the Power ISA manual.

2008-11-13  Maxim Kuvyrkov  <maxim@codesourcery.com>

	gdb/
	* remote.c (remote_open_1): Fix typo.

2008-11-13  Kazu Hirata  <kazu@codesourcery.com>

	Issue 4183
	gdb/
	* remote-fileio.c (remote_fileio_request): Send Ctrl-C if it is
	pending.
	* remote-fileio.h: Update the prototype for remote_fileio_request.
	* remote.c (remote_state): Add ctrlc_pending_p.
	(remote_stop): Set ctrlc_pending_p to 1.
	(remote_wait_as): Pass ctrlc_pending_p to remote_fileio_request.

	* release-notes-csl.xml: Add a release note for the fix above.

2008-11-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document warning fix.

	gdb/
	* elfread.c (elf_symfile_segments): Do not warn about
	uninitialized sections outside of load segments.

2008-10-22  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* lib/mi-support.exp (mi_send_resuming_command_raw): Treat the
	lack of the "thread-id" qualifier in the response to a command
	resuming execution as a success too.

2008-10-22  Pedro Alves  <pedro@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Version updated.

2008-10-20  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/find.c (int8_t, int16_t, int32_t, int64_t): Undefine
	macros.

2008-10-20  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* breakpoint.c (update_watchpoint): Only fiddle with frames for
	local watchpoints.

2008-10-14  Nathan Froyd  <froydnj@codesourcery.com>

	* release-notes-csl.xml (Errors after loading the debugged program):
	Close <phrase> tag.

2008-10-13  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xsl (Errors after loading the debugged program):
	Conditionalize for eclipse_plugin.
	(Debugging of signal handlers): Likewise.

2008-10-10  Pedro Alves  <pedro@codesourcery.com>

	Issue #4032

	* release-notes-csl.xml: Document the fix.

	gdb/
	* remote.c (remote_start_remote): Always tell the stub if we're in
	extended-remote.

2008-10-06  Joseph Myers  <joseph@codesourcery.com>

	Backport:

	gdb/
	2008-09-24  Andreas Schwab  <schwab@suse.de>
	* frame.c (get_frame_register_bytes): Take pseudo registers into
	account.  Avoid excessive function calls.

	2008-09-22  Andrew Stubbs  <ams@codesourcery.com>
	* frame.c (get_frame_register_bytes): Comment improvments.

2008-10-06  Vladimir Prus  <vladimir@codesourcery.com>

	Issue #3962
	* release-notes-csl.xml: Document the change.

	gdb/
	* mi/mi-interp.c (mi_on_resume): Flush raw_stdout.

2008-10-06  Andrew Stubbs  <ams@codesourcery.com>

	Issue #3871

	gdb/
	* infrun.c (use_displaced_stepping): Disable displaced stepping when
	not in non-stop mode.

2008-10-03  Sandra Loosemore  <sandra@codesourcery.com>

	Issue #3975

	* release-notes-csl.xml (Native debugging in IDE): New note.

2008-10-03  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3413
	* release-notes-csl.xml: Document DW_AT_ranges fix.

	gdb/
	* dwarf2read.c (dwarf2_get_pc_bounds): Take PST argument.  Pass it
	to dwarf2_ranges_read.  Update all callers.
	(dwarf2_build_psymtabs_hard): Initialize best_lowpc and best_highpc.
	Set the base address before reading ranges.

2008-10-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* target.c (unpush_target): Check for the dummy target.
	* remote.c (remote_open_1): Do not pop the target if it is already
	gone.

2008-10-02  Pedro Alves  <pedro@codesourcery.com>

	Issue #3975

	gdb/
	* infrun.c (handle_inferior_event): Set stop_print_frame on
	TARGET_WAITKIND_LOADED events, if stopping on solib-events.

2008-09-25  Pedro Alves  <pedro@codesourcery.com>

	Issue #2664

	* ser-mingw.c (pipe_windows_open): Don't throw errors from here,
	instead print to gdb_stderr, set errno and return -1.
	* ser-tcp.c (net_open): Likewise.
	* ser-pipe.c (pipe_open) [!HAVE_SOCKETPAIR]: Set errno to ENOSYS.

	* release-notes-csl.xml: Document fix.

2008-09-25  Pedro Alves  <pedro@codesourcery.com>

	Issue #2664

	gdb/
	* remote.c (remote_open_1): Move acknowledging any pending ack,
	querying supported features, activating noack mode, finding the
	target description, enabling extended remote, and checking remote
	symbols from here ...
	(remote_start_remote): ... to here.

2008-09-22  Daniel Jacobowitz  <dan@codesourcery.com>

	* target-descriptions.c (space_value_write): Correct error message.

2008-09-19  Daniel Jacobowitz  <dan@codesourcery.com>

	Revert:
	2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (struct dwarf2_per_cu_data): Add chain.
	(dwarf2_build_psymtabs_hard): Move baseaddr out of the loop.
	Check for duplicate CUs for the same file.  Do not start a
	new psymtab for the duplicates.
	(maybe_queue_comp_unit): Move higher in the file.
	(process_queue): Skip duplicate CUs.
	(process_full_comp_unit): Process duplicate CUs.  Set the
	low PC here.
	(read_file_scope): Do not set the low PC here.  Only create
	a new symtab for the first CU for each file.
	(dwarf2_get_pc_bounds): Do not change *LOWPC when there was no
	match.

2008-09-19  Andrew Stubbs  <ams@codesourcery.com>

	Issue #1419

	gdb/
	* frame.c (get_frame_register_bytes): Detect bad debug info.

2008-09-17  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3819

	gdb/
	* solib-svr4.c (svr4_solib_create_inferior_hook): Skip if exec_bfd
	is not set.

2008-09-16  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* solib-svr4.c (enable_break): Do not use an unrelocated dynamic
	linker if the shared library list is present.

2008-09-16  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #3505
	* release-notes-csl.xml: Document load fix.

	gdb/
	* regcache.c (regcache_write_pc): Call reinit_frame_cache.

	gdb/testsuite/
	* gdb.base/annota1.exp: Update for regcache_write_pc change.

2008-09-16  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* gdbthread.h (finish_thread_state): Declare.
	* thread.c (finish_thread_state): New.
	* infrun.c (finish_thread_state_cleanup): New.
	(wait_for_inferior, fetch_inferior_event): If an error
	is thrown while handling an event, finish the thread state.

2008-09-16  Daniel Jacobowitz  <dan@codesourcery.com>
	    Nathan Froyd  <froydnj@codesourcery.com>

	sim/ppc/
	* hw_init.c: Include elf/common.h and elf/internal.h.
	(update_for_binary_phdr): New function.
	(hw_binary_init_data_callback): Map over program headers if they
	exist.

2008-09-11  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (Memory monitor improvements): Copy-edit.

2008-09-11  Joseph Myers  <joseph@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (get_compiler_info): Use -E -o in remote-host case.

2008-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document cast fix.

	Backport from mainline:

	gdb/
	2008-09-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* valops.c (value_cast_structs): Return NULL for failure.
	(value_cast): Handle NULL from value_cast_structs.
	(value_fetch_lazy): Call check_typedef.  Remove unused variable.

	* gdb.base/structs3.c, gdb.base/structs3.exp: New files.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document improved RealView support.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/member-ptr.exp: Allow +1 after function names.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/trunk/
	* gdb.base/opaque.exp: Remove duplicate tests and xyz from test name.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/formatted-ref.exp (test_p_x_ref_addr): Allow the reference
	to be in memory.
	* gdb.base/display.c (force_mem): New.
	(do_loops): Use it.  Add breakpoint comments.
	(do_vars): Add a breakpoint comment.
	* gdb.base/display.exp: Use gdb_get_line_number.  Remove hardcoded
	line numbers.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/member-ptr.exp: Recognize __vptr and (void).
	* gdb.cp/method2.exp (test_breaks): Recognize (void).  Detect
	an unknown menu instead of timing out.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/ctti.exp: Correct return values for unsigned char functions.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/templates.exp (test_ptype_of_templates): Recognize
	non-void return types from constructors, for ARM.  Allow
	static members before or after data members.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	Prevent unused variables from being discarded.
	* gdb.base/break.c (break1_references): Declare.
	(main): Call break1_references.
	* gdb.base/break1.c (break1_references): New function.
	* gdb.base/find.c (main): Reference search buffers.
	* gdb.base/included.c (main): Reference integer.
	* gdb.base/ptype.c (charfoo): Declare.
	(intfoo): Call charfoo.
	* gdb.base/scope0.c (useitp): New function.
	(usestatics): Use useitp.
	(useit): Add a type for val.
	* gdb.base/scope1.c (useit1): Take a pointer argument.
	(usestatics1): Update calls to useit1.
	* gdb.cp/call-c.cc: Declare foo.
	(main): Call foo.
	* gdb.cp/m-static.cc (main): Reference test4.elsewhere.
	* gdb.cp/namespace.cc (ensureOtherRefs): Declare.
	(main): Call C::ensureRefs and ensureOtherRefs.
	* gdb.cp/namespace1.cc (C::ensureOtherRefs): Also reference int
	variables.
	(ensureOtherRefs): New function.
	* gdb.cp/overload.cc (main): Call all overloadNamespace variants.
	* gdb.cp/templates.cc (main): Call t5i.value.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* c-typeprint.c (c_type_print_base): Skip artificial fields.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_skip_stub): Recognize RealView veneer functions.

2008-09-05  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (thumb_analyze_prologue): Also handle Thumb-2 ldrd.
	(arm_skip_prologue): Treat binaries without a producer as GNU.

2008-09-04  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:

	gdb/gdbserver/
	2008-09-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* configure.srv: Merge MIPS and MIPS64.

2008-09-04  Pedro Alves  <pedro@codesourcery.com>

	gdb/gdbserver/
	* regcache.c (new_register_cache): Return NULL if the register
	cache size isn't known yet.
	(free_register_cache): Avoid dereferencing a NULL regcache.

2008-09-03  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* infrun.c (resume): Don't call clear_inline_frame_state here.
	* target.c: Include "inline-frame.h".
	(target_resume): Call clear_inline_frame_state here.

2008-09-02  Pedro Alves  <pedro@codesourcery.com>

	backport:

	gdb/
	2008-09-02  Pedro Alves  <pedro@codesourcery.com>

	* breakpoint.c (insert_breakpoints, update_global_location_list):
	Check breakpoints_always_inserted_mode instead of
	always_inserted_mode directly.

2008-09-01  Mark Mitchell  <mark@codesourcery.com>

	sim/arm/
	* wrapper.c (sim_create_inferior): Quote command-line arguments.

2008-08-31  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_convert_register_p): Compare with
	the actual type of fp registers, not one of the possible
	values.

2008-08-27  Julian Brown  <julian@codesourcery.com>

	gdb/sim/common/
	* Make-common.in (run$(EXEEXT)): Add LDFLAGS.

2008-08-27  Maxim Kuvyrkov  <maxim@codesourcery.com>

	gdb/
	* dwarf2read.c (read_comp_unit): Avoid compile-time warning.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (reading_partial_symbols): New.
	(struct comp_unit_head): Remove cu_head_ptr.
	(struct partial_die_info): Add has_template_arguments.
	(dwarf2_build_psymtabs_hard): Set reading_partial_symbols.  Do not
	set cu_head_ptr.
	(allocate_comp_unit): New function, broken out of load_comp_unit.
	(load_comp_unit): Use it.
	(partial_die_full_name): Load full DIEs to get template names.
	(dwarf2_psymtab_to_symtab): Clear reading_partial_symbols.
	(queue_comp_unit): Do not add to the read_in_chain here.
	(maybe_queue_comp_unit): Declare early.  Handle loading full DIEs
	during partial symbol reading.
	(load_full_comp_unit): Use allocate_comp_unit.
	(do_ui_file_peek_last): New function.
	(dwarf2_full_name): Declare early.  Add support for template
	parameters.
	(read_comp_unit): Read abbrevs if necessary.
	(load_partial_dies): Set has_template_arguments.
	(find_partial_die): Handle loaded CUs without partial DIEs.
	(dwarf2_const_value_data): Remove prototype.  Rewrite to not
	require a symbol.
	(dwarf2_const_value_bytes): New function, from dwarf2_const_value.
	(dwarf2_const_value): Use it.
	(follow_die_ref): Check the DIE offset instead of the relative
	address.  Handle loading full DIEs during partial symbol
	processing.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (struct dwarf2_per_cu_data): Add chain.
	(dwarf2_build_psymtabs_hard): Move baseaddr out of the loop.
	Check for duplicate CUs for the same file.  Do not start a
	new psymtab for the duplicates.
	(maybe_queue_comp_unit): Move higher in the file.
	(process_queue): Skip duplicate CUs.
	(process_full_comp_unit): Process duplicate CUs.  Set the
	low PC here.
	(read_file_scope): Do not set the low PC here.  Only create
	a new symtab for the first CU for each file.
	(dwarf2_get_pc_bounds): Do not change *LOWPC when there was no
	match.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* c-lang.h (c_type_print_args): Declare.
	* c-typeprint.c (c_type_print_args): Add show_artificial argument.
	(c_type_print_varspec_suffix): Update call to c_type_print_args.
	(cp_type_print_method_args): Handle qualifiers on this pointer.
	* cp-support.c (cp_class_name_from_physname): Update comment.
	* dwarf2read.c (struct partial_die_info): Update comment on name.
	Add linkage_name.
	(partial_die_parent_scope): Correct offset.
	(partial_die_full_name): Follow specifications.  Check linkage name
	at the top level.
	(add_partial_symbol): Only check for namespaces if there was a
	linkage name.
	(pdi_needs_namespace): Handle DW_TAG_subprogram, DW_TAG_variable,
	and DW_TAG_member.
	(guess_structure_name): Use linkage_name.
	(dwarf2_full_name): Just use pdi_needs_namespace.  Add arguments to
	C++ functions.
	(read_func_scope): Use dwarf2_name.
	(dwarf2_add_field, dwarf2_add_member_fn): Use dwarf2_full_name when
	there is no linkage name.
	(determine_class_name): Handle dwarf2_linkage_name returning NULL.
	(read_partial_die): Fill in linkage_name separately from name.
	(fixup_partial_die): Fix up linkage_name too.
	(new_symbol): Use dwarf2_name, dwarf2_linkage_name, and
	dwarf2_full_name.
	(determine_prefix): Do not recurse for DW_AT_subprogram.
	(dwarf2_linkage_name): Do not return DW_AT_name.
	(dump_die_and_children): New function.
	(dump_die_list): Delete.
	* gnu-v3-abi.c (gnuv3_find_method_in): Make static.
	(gnuv3_print_method_ptr): Handle demangler failure better.
	* symtab.h (SYMBOL_CPLUS_DEMANGLED_NAME): Delete.
	* valops.c (find_overload_match): Use SYMBOL_NATURAL_NAME, but
	skip symbols without an argument list.
	* ui-file.c (do_ui_file_obsavestring, ui_file_obsavestring): New.
	* ui-file.h (ui_file_obsavestring): Declare.

	gdb/testsuite/
	* gdb.cp/cplusfuncs.cc (dm_type_short, dm_type_long)
	(dm_type_unsigned_short, dm_type_unsigned_long, dm_type_typedef): New
	functions.
	* gdb.cp/cplusfuncs.exp (probe_demangler): Detect additional
	variations.
	(test_lookup_operator_functions, test_paddr_operator_functions)
	(test_paddr_overloaded_functions, test_paddr_hairy_functions): Use the
	new settings.
	* gdb.cp/overload.exp: Allow variations on integer type names.
	* gdb.cp/ovldbreak.exp: Likewise.  Break up long lines.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (struct dwarf2_cu): Remove ranges_offset and
	has_ranges_offset.
	(struct partial_die_info): Remove language, has_stmt_list, dirname,
	and line_offset.
	(dwarf2_build_include_psymtabs): Take a die_info.  Handle a missing
	line table.
	(dwarf2_find_base_address): New function.
	(dwarf2_build_psymtabs_hard): Rewrite to use a full DIE for the
	compilation unit.  Use dwarf2_get_pc_bounds and
	dwarf2_find_base_address.
	(load_comp_unit): Rewrite to use a full DIE for the compilation unit.
	(process_full_comp_unit): Use dwarf2_find_base_address.
	(read_partial_die): Remove support for attributes only used
	in the compilation unit DIE.
	* symfile.c (allocate_psymtab): Make FILENAME const.
	(start_psymtab_common): Likewise.
	* symfile.h (allocate_psymtab, start_psymtab_common): Update
	prototypes.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/macscp.exp: Skip for armcc.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* eval.c (evaluate_subexp_standard): Add handling of
	TYPE_CODE_MEMBERPTR when calling functions.  Correct the result of
	ptype for calling a TYPE_CODE_METHODPTR.
	* valops.c (find_overload_match): Check for data members
	and data variables.

	gdb/testsuite/
	* gdb.cp/member-ptr.cc (class Diamond): Add func_ptr.
	(func): New function.
	(main): Initialize diamond.func_ptr and add diamond_pfunc_ptr.
	* gdb.cp/member-ptr.exp: Add new tests for ptype and for
	pointers to members with pointer-to-function type.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (read_tag_ptr_to_member_type): Expect a TYPE_CODE_FUNC,
	not a TYPE_CODE_METHOD.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (dwarf2_add_field): Set FIELD_ARTIFICIAL on artificial
	fields.
	(dwarf2_add_member_fn): Complain about virtual member functions
	without DW_AT_vtable_elem_location.
	* gdbtypes.c (get_vptr_fieldno): Update comment.
	* gdbtypes.h (struct cplus_struct_type): Add is_dynamic.
	(TYPE_CPLUS_DYNAMIC): New macro.
	* gnu-v3-abi.c (gnuv3_dynamic_class): New.
	(gnuv3_get_vtable): Rewrite to use gnuv3_dynamic_class.  Move higher.
	(gnuv3_rtti_type, gnuv3_get_virtual_fn, gnuv3_baseclass_offset): Use
	gnuv3_get_vtable.
	* varobj.c (cplus_class_num_children, cplus_describe_child): Skip
	artificial fields.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (skip_prologue_function): New function.
	(submask, bit, bits, sbits, BranchDest): Move higher in the file.
	(thumb_analyze_prologue): Document return value.  Recognize more
	Thumb instructions, skippable calls, and some Thumb-2 instructions.
	(arm_skip_prologue): Remove call dummy check.  Check the prologue
	for non-GNU compilers.
	(arm_instruction_changes_pc): New function.
	(arm_analyze_prologue): New function, broken out from
	arm_scan_prologue.  Recognize more ARM instructions and skippable
	calls.  Update comments.  Handle NULL cache.  Return the address
	of the first unrecognized instruction.
	(arm_scan_prologue): Use arm_analyze_prologue.
	(ARM_PC_32): Delete.
	(shifted_reg_val): Simplify ARM_PC_32 check.
	* symtab.c (skip_prologue_using_sal): Check for consecutive line
	markers before empty functions.

2008-08-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* dwarf2read.c (dwarf_decode_lines): Skip lines without is_stmt.

2008-08-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* frame.c (frame_unwind_caller_id): Check for NULL frames.  Correct
	comment.

2008-08-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/remote.exp (proc gdb_load_timed): Do not load with
	fixed packet sizes.

2008-08-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/freebpcmd.exp: Delete unused variable.  Specify
	srcfile when setting a breakpoint.

2008-08-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/virtfunc.exp (do_tests): If runto_main fails, give up.

2008-08-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* lib/mi-support.exp (proc mi_run_cmd): Do not require an anchor.
	(mi_send_resuming_command_raw): Always return status.
	(mi_get_stop_line): Do not match more than one line by accident.
	(mi_run_inline_test): If -exec-next fails, give up.

2008-08-25  Pedro Alves  <pedro@codesourcery.com>

	Backport:

	gdb/
	2008-08-22  Pedro Alves  <pedro@codesourcery.com>

	* infrun.c (proceed): Move back setting previous_inferior_ptid
	from here ...
	(wait_for_inferior): ... to here.
	(fetch_inferior_event): ... and here.

2008-08-25  Pedro Alves  <pedro@codesourcery.com>

	Backport:

	gdb/
	2008-08-25  Pedro Alves  <pedro@codesourcery.com>

	* cp-name-parser.y: Include config.h before system headers.

2008-08-24  Nathan Froyd  <froydnj@codesourcery.com>

	sim/ppc/
	* ppc/emul_netbsd.c (struct netbsd_stat): Define.
	(write_stat): Adjust to convert the incoming stat to a
	netbsd_stat; return the netbsd_stat to the program instead.
	(do_ioctl): Handle TIOCGETA.  Add supporting definitions.
	(netbsd_descriptors): Extend to include most system calls in
	recent versions of NetBSD.  Change stat, fstat, and lstat to
	be done by newer calls.

2008-08-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Version updated.

2008-08-20  Maciej W. Rozycki  <macro@codesourcery.com>

	gdb/
	* m88k-tdep.c (m88k_unwind_dummy_id): Replace a call to
	frame_pc_unwind() with frame_unwind_caller_pc().
	(m88k_frame_cache): Likewise.
	* mips-linux-tdep.c (mips_linux_syscall_next_pc): Likewise.

2008-08-13  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #3556

	gdb/
	* Makefile.in (ppc-linux-nat.o): Add dependencies.

	Backport:

	gdb/
	2008-08-12  Ulrich Weigand  <uweigand@de.ibm.com>

	* ppc-linux-nat.c (ppc_linux_get_hwcap): Really get AT_HWCAP.

	2008-08-08  Luis Machado  <luisgpm@br.ibm.com>

	* ppc-linux-nat.c: Include "auxv.h" and "elf/common.h".
	Define PPC_FEATURE_BOOKE.
	(ppc_linux_get_hwcap): New function.
	(ppc_linux_region_ok_for_hw_watchpoint): Handle PowerPC 440
	4-bytes alignment restrictions.
	(ppc_linux_insert_watchpoint): Handle PowerPC 440-specific
	positioning of the read/write flags.
	(ppc_linux_watchpoint_addr_within_range): Handle PowerPC 440
	4-bytes alignment.

2008-08-13  Sandra Loosemore  <sandra@codesourcery.com>

	Backport from mainline:

	gdb/doc/
	2008-08-12  Sandra Loosemore  <sandra@codesourcery.com>

	* gdb.texinfo (Remote Configuration): Document set remote noack-packet.
	(Remote Protocol): Add Packet Acknowledgment to menu.
	(Overview): Mention +/- can be disabled, and point to new section
	where this is discussed in detail.
	(General Query Packets): Document QStartNoAckMode packet, and
	corresponding qSupported reply.
	(Packet Acknowledgment): New section.

	gdb/
	2008-08-12  Pedro Alves  <pedro@codesourcery.com>

	Add no-ack mode to the remote protocol --- optionally stop ACKing
	packets and responses when we have a reliable communication
	medium.

	Based on Apple's GDB, by Jason Molenda <jmolenda@apple.com>

	* remote.c (struct remote_state): Add noack_mode field.
	(PACKET_QStartNoAckMode): New.
	(remote_start_remote): Don't any outstanding packet here.
	(remote_open_1): Clear noack_mode.  Ack any outstanding packet
	here.  Activate noack mode if requested.
	(remote_protocol_features): Add QStartNoAckMode.
	(remote_open_1):
	(putpkt_binary): Don't send ack in noack mode.
	(read_frame): Don't recompute the checksum in noack mode.
	(getpkt_sane): Skip sending ack if in noack mode.
	(_initialize_remote): Add set/show remote noack mode.
	* NEWS:  Note the new features.

	gdb/gdbserver/
	2008-08-12  Pedro Alves  <pedro@codesourcery.com>

	* remote-utils.c (noack_mode, transport_is_reliable): New globals.
	(remote_open): Set or clear transport_is_reliable.
	(putpkt_binary): Don't expect acks in noack mode.
	(getpkt): Don't send ack/nac in noack mode.
	* server.c (handle_general_set): Handle QStartNoAckMode.
	(handle_query): If connected by tcp pass QStartNoAckMode+ in
	qSupported.
	(main): Reset noack_mode on every connection.
	* server.h (noack_mode): Declare.

	* release-notes-csl.xml:  Document gdbserver improvements.

2008-08-11  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* configure.tgt (sparc-*-linux*): Use 64-bit configuration if
	--enable-64-bit-bfd.

2008-08-07  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Version updated.

2008-07-25  Joseph Myers  <joseph@codesourcery.com>

	Backport:

	gdb/
	2008-07-25  Joseph Myers  <joseph@codesourcery.com>
	* mips-tdep.c (mips_n32n64_push_dummy_call): Handle passing
	128-bit long doubles in even-odd pairs of FPRs.  Do not
	right-align float arguments for big-endian.
	(mips_n32n64_return_value): Apply return value convention for
	structs containing one or two floating-point values to soft-float
	as well as hard-float.  Handle 128-bit long doubles in such
	structs.
	(mips_o32_push_dummy_call): Only skip one integer register for a
	float argument passed in an FPR.

2008-07-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* NEWS: Document inlined function support.
	* Makefile.in (SFILES): Add inline-frame.c.
	(inline_frame_h): New.
	(COMMON_OBS): Add inline-frame.o.
	(blockframe.o, dwarf2loc.o, dwarf2read.o, frame.o, frame-unwind.o)
	(infcmd.o, infrun.o, stack.o): Update dependencies.
	(inline-frame.o): New rule.
	* block.c (contained_in): Rewrite to use lexical nesting.
	(block_linkage_function): Skip inlined function blocks.
	(block_inlined_p): New.
	* block.h (struct block): Update comment.
	(block_inlined_p): New prototype.
	* blockframe.c (get_frame_block): Handle inlined functions.
	(get_frame_function): Do not use block_linkage_function.
	(block_innermost_frame): Use get_frame_block and contained_in.
	* breakpoint.c (watchpoint_check): Remove extra reinit_frame_cache.
	Skip over inlined functions.  Simplify epilogue check.
	(bpstat_check_breakpoint_conditions): Use get_stack_frame_id.
	Update comments.
	(set_momentary_breakpoint): Only accept non-inlined frames.
	(watch_command_1): Use frame_unwind_caller_pc and
	frame_unwind_caller_id instead of get_prev_frame.
	(until_break_command): Likewise.  Use get_stack_frame_id.
	* buildsym.c (end_symtab): Set SYMBOL_SYMTAB for block functions.
	* dwarf2loc.c (dwarf_expr_frame_base): Use block_linkage_function.
	* dwarf2read.c (process_die): Handle DW_TAG_inlined_subroutine.
	(read_func_scope, new_symbol): Likewise.  Handle arguments specially
	for inlined functions without call site information.
	(die_specification): Treat DW_AT_abstract_origin as a specification.
	* frame-unwind.c (frame_unwind_init): Add inline_frame_unwind.
	* frame.c (fprint_frame_id): Print inline depth.
	(fprint_frame_type): Handle INLINE_FRAME and SENTINEL_FRAME.
	(skip_inlined_frames, get_stack_frame_id): New.
	(frame_unwind_caller_id): Use skip_inlined_frames.
	(frame_id_inlined_p): New.
	(frame_id_eq): Make the logic match the comments.  Add inline_depth
	check.
	(frame_id_inner): Handle inlined functions.
	(frame_unwind_pc): New function, copied from frame_unwind_caller_pc.
	(frame_unwind_caller_pc): Use skip_inlined_frames and frame_unwind_pc.
	(get_prev_frame_1): Check for inline frames.  Split out frame
	allocation to get_prev_frame_raw.
	(get_prev_frame_raw): New function.
	(get_prev_frame): Handle inline frames.
	(get_frame_pc): Use frame_unwind_pc.
	(get_frame_address_in_block): Skip inlined frames on both sides.
	(pc_notcurrent): Delete.
	(find_frame_sal): Rewrite to handle inline call sites.  Use
	get_frame_address_in_block.
	(deprecated_update_frame_pc_hack): Make static.
	* frame.h: Update comments.
	(struct frame_id): Add inline_depth.
	(enum frame_type): Add INLINE_FRAME.
	(deprecated_update_frame_pc_hack): Delete prototype.
	(frame_id_inlined_p, get_stack_frame_id): New prototypes.
	* infcall.c (call_function_by_hand): Do not pop the frame.
	* infcmd.c (step_frame_id): Delete.
	(set_step_frame): New function.
	(step_1): Use step_once in both cases.
	(step_once): Use set_step_frame.  Handle inlined functions and
	non-async targets.  Remove step_stop_if_no_debug check not
	present in sync case.
	(until_next_command): Use set_step_frame.
	(finish_command): Support inlined functions.
	* inferior.h (set_step_info): New prototype.
	(step_frame_id): Delete declartion.
	* infrun.c (RESUME_ALL): Use minus_one_ptid.
	(step_frame_id, step_stack_frame_id): New static variables.
	(struct thread_stepping_state): Add a comment.
	(resume): Use clear_inline_frame_state.
	(clear_proceed_status): Clear step_stack_frame_id.
	(init_wait_for_inferior): Call clear_inline_frame_state.
	(init_execution_control_state): Make static.
	(set_step_info): New function.
	(init_thread_stepping_state): Do not set the symtab or line.
	(stepped_in_from): New function.
	(handle_inferior_event): Handle inlined functions.  Delete some dead
	code.  Use set_step_info.
	(normal_stop): Do not call deprecated_update_frame_pc_hack.
	(struct inferior_status): Add step_stack_frame_id.
	(save_inferior_status, restore_inferior_status): Save and restore
	step_stack_frame_id.
	* inline-frame.c, inline-frame.h: New files.
	* minsyms.c (prim_record_minimal_symbol_and_info): Use XCALLOC.
	* s390-tdep.c (s390_prologue_frame_unwind_cache): Handle INLINE_FRAME.
	* stack.c (frame_show_address): New.
	(print_frame_info): Use it.
	(print_frame): Likewise.  Use get_frame_function.  Handle inlined
	blocks.
	(frame_info): Mark inlined functions.
	(backtrace_command_1): Use get_current_user_frame.
	(print_frame_local_vars, print_frame_label_vars): Update comments.
	(return_command): Refuse inlined functions.
	* symtab.c (lookup_symbol_aux_local): Stop at inlined function
	boundaries.
	(find_function_start_sal): Avoid inlined functions.
	(completion_list_add_fields): New function.
	(default_make_symbol_completion_list): Use it.  Use block_static_block
	and block_global_block.  Check for inlined functions.
	(skip_prologue_using_sal): Avoid line number comparison across
	inlining.
	* symtab.h (struct symbol): Add is_inlined.
	(SYMBOL_INLINED): New.
	* valops.c (value_of_variable): Check block_inlined_p.

	gdb/testsuite/
	* gdb.base/break.exp: Add an XFAIL for gcc/36748.
	* gdb.cp/annota2.exp: Accept frames-invalid in more places.
	* gdb.opt/Makefile.in (EXECUTABLES): Update.
	* gdb.opt/clobbered-registers-O2.exp: Update to GPL v3.
	* gdb.opt/inline-bt.c, gdb.opt/inline-bt.exp,
	gdb.opt/inline-cmds.c, gdb.opt/inline-cmds.exp,
	gdb.opt/inline-locals.c, gdb.opt/inline-locals.exp,
	gdb.opt/inline-markers.c: New files.
	* lib/gdb.exp (skip_inline_frame_tests): New function.
	(skip_inline_var_tests): New function.

	gdb/doc/
	* gdb.texinfo (Debugging Optimized Code): New chapter.
	(Compiling for Debugging): Reference it.  Move some
	text to the new section.

2008-07-25  Daniel Jacobowitz  <dan@codesourcery.com>

	* frame.c (frame_unwind_id): Renamed to ...
	(frame_unwind_caller_id): ... this.  All callers updated.
	(frame_pc_unwind): Renamed to ...
	(frame_unwind_caller_pc): ... this.  All callers updated.
	* frame.h: Document frame_unwind_caller_WHAT functions.
	(frame_unwind_id): Renamed to ...
	(frame_unwind_caller_id): ... this.
	(frame_pc_unwind): Renamed to ...
	(frame_unwind_caller_pc): ... this.
	* hppa-tdep.c (hppa_find_unwind_entry_in_block): Correct comment.
	* stack.c (parse_frame_specification_1): Do not rely on
	frame_unwind_id.

2008-07-25  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): Version updated.

2008-07-24  Daniel Gutson <daniel@codesourcery.com>

        Issue #2030
        * release-notes-csl.xml: Describe the fix.

        gdb/
        * procfs.c (procfs_do_thread_registers): Added a call to fetch
        register values before saving them in the core file
        through the gcore command.
        (procfs_corefile_thread_callback): removed the backup of
        inferior_ptid before calling procfs_do_thread_registers since
        the function already saves and restores it before returning.

        gdb/testsuite/
        * gdb.threads/gcore-thread.exp: Added a test case in order to check
        if the core dump contains the registers values, and symbol
        lookup is working properly.

2008-07-24  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in, ada-lang.c, block.c, block.h, blockframe.c,
	breakpoint.c, buildsym.c, dwarf2loc.c, dwarf2read.c, findvar.c,
	frame-unwind.c, frame-unwind.h, frame.c, frame.h, infcall.c,
	infcmd.c, inferior.h, infrun.c, inline-frame.c, mi/mi-cmd-stack.c,
	minsyms.c, s390-tdep.c, stack.c, symtab.c, symtab.h, thread.c,
	tracepoint.c, valops.c: Temporarily revert inline function support.

	gdb/doc/
	* gdb.texinfo: Temporarily revert inline function support.

	gdb/testsuite/
	* gdb.opt/Makefile.in, gdb.opt/inline-bt.c, gdb.opt/inline-bt.exp,
	gdb.opt/inline-cmds.c, gdb.opt/inline-cmds.exp,
	gdb.opt/inline-locals.c, gdb.opt/inline-locals.exp,
	lib/gdb.exp: Temporarily revert inline function support.

2008-07-24  Joseph Myers  <joseph@codesourcery.com>

	NOT ASSIGNED TO FSF
	COPYRIGHT CAVIUM
	bfd/
	* config.bfd: Handle mips64octeon*-*-elf*.

2008-07-11  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* solib.c (gdb_sysroot_on_target): New.
	(solib_open): Strip gdb_sysroot_on_target, if found at the
	front of the path.
	(_initialize_solib): Register 'set sysroot-on-target'.

2008-07-10  Joseph Myers  <joseph@codesourcery.com>

	config/
	* mh-mingw (LDFLAGS): Append to rather than replacing previous
	value.

2008-07-09  Stan Shebs  <stan@codesourcery.com>

	BE8 support for GDB.
	include/
        * dis-asm.h (struct disassemble_info): Add endian_code field.
	opcodes/
        * dis-init.c (init_disassemble_info): Init endian_code field.
	* arm-dis.c (print_insn): Disassemble code according to
        setting of endian_code.
	(print_insn_big_arm): Detect when BE8 extension flag has been set.
	gdb/
	* disasm.c (gdb_disassemble_info): Set endian_code.
	* gdbarch.sh (gdbarch_info): New field byte_order_for_code.
	* gdbarch.h, gdbarch.c: Regenerate.
	* arch-utils.c (initialize_current_architecture): Set the
	default byte_order_for_code.
	(gdbarch_info_init): Ditto.
	(gdbarch_info_fill): Ditto.
	* arm-tdep.c (thumb_analyze_prologue): Swap halfword if
	code endianness is different from general endianness.
	(arm_skip_prologue): Similarly.
	(arm_scan_prologue): Ditto.
	(thumb_get_next_pc): Ditto.
	(arm_get_next_pc): Ditto.
	(arm_gdbarch_init): Set byte_order_for_code from BE8 flag,
	choose correct endianness for breakpoints.

2008-06-30  Joseph Myers  <joseph@codesourcery.com>

	config/
	* mh-mingw (BOOT_CFLAGS, CFLAGS): Do not use -D__USE_MINGW_ACCESS.

2008-06-27  Joseph Myers  <joseph@codesourcery.com>

	Backport:

	gdb/
	2008-06-27  Joseph Myers  <joseph@codesourcery.com>
	* dfp.c (decimal_convert): Call match_endianness before and after
	conversion.

2008-06-27  Joseph Myers  <joseph@codesourcery.com>

	Backport:

	gdb/
	2008-06-27  Joseph Myers  <joseph@codesourcery.com>
	* i386-tdep.c (i386_16_byte_align_p): New.
	(i386_push_dummy_call): Determine stack space required for
	arguments going forwards allowing for 16-byte alignment, then push
	arguments going forwards.

2008-06-25  Sandra Loosemore  <sandra@codesourcery.com>

	gdb/
	* Makefile.in (MAKEHTML): Use $(MAKEINFO).

	gdb/doc/
	* Makefile.in (MAKEHTML): Use $(MAKEINFO).

2008-06-14  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* utils.c (gdb_realpath): Use lrealpath.

2008-06-12  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call): Handle passing
	decimal floating-point values in GPRs for soft-float.
	(do_ppc_sysv_return_value): Handle returning decimal
	floating-point values in GPRs for soft-float.

2008-06-11  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mi/mi-cmd-var.c (mi_cmd_var_registers): Check for error creating
	varobj.

2008-06-11  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from FSF:
	gdb/
	2008-06-11  Daniel Jacobowitz  <dan@codesourcery.com>
	* value.c (value_primitive_field): Fetch lazy register values.

2008-06-11  Vladimir Prus  <vladimir@codesourcery.com>

	Issue #2213.
	* release-notes-csl.xml: Describe the fix.

	gdb/
	* target.c (target_read_until_error): New.
	* target.h (target_read_until_error): Declare.
	* mi/mi-main.c (mi_cmd_data_read_memory): Use
	target_read_until_error.

2008-06-09  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from FSF:
	gdb/
	2008-06-09  Daniel Jacobowitz  <dan@codesourcery.com>
	* configure.ac (build_warnings): Add -Wno-format for mingw.
	* configure: Regenerated.

2008-06-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/doc/gdb.texinfo, gdb/fork-child.c, gdb/gdbserver/Makefile.in,
	gdb/symtab.h, opcodes/ppc-opc.c, sim/common/Make-common.in,
	sim/common/Makefile.in, sim/ppc/Makefile.in: Correct merge errors.

2008-06-07  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

	* release-notes-csl.xml (GDB update): New note.

2008-06-06  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (GDB and Ctrl C on Windows):
	Conditionalize release note for host.
	(Program counter and breakpoint bug fix): Likewise.
	(Robustness on Microsoft Windows): Likewise.
	(Improved handling of Windows paths in GDB): Likewise.

2008-06-01  Nathan Froyd  <froydnj@codesourcery.com>

	NOT ASSIGNED TO THE FSF
	COPYRIGHT FREESCALE

	Missed this bit in the prior commit.

	gdb/
	* rs6000-tdep.c (_initialize_rs6000_tdep): Initialize e500mc bits.

2008-05-22  Kazu Hirata  <kazu@codesourcery.com>

	Backport from symbian-fsf:
	2008-05-03  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* Makefile.in (objfiles.o): Update.
	* exec.c (exec_set_section_address): Support p->addr != 0.
	* objfiles.c (objfile_relocate): Update exec_ops section
	addresses.
	* symfile.c (place_section): Move exec_set_section_address call...
	(default_symfile_offsets): ...to here.

	* release-notes-csl.xml: Add a release note for the fix above.

2008-05-20  Nathan Froyd  <froydnj@codesourcery.com>

	NOT ASSIGNED TO THE FSF
	COPYRIGHT FREESCALE

	E500mc support, courtesy of Freescale.

	gdb/
	* features/rs6000/e500mc.xml: New file.
	* features/Makefile (WHICH): Add rs6000/powerpc-e500mc
	(rs6000/powerpc-e500mc-expedite): New variable.
	* regformats/rs6000/powerpc-e500mc.dat: Generate.
	* features/rs6000/e500mc.c: Generate.
	* rs6000-tdep.c: Include it.
	(variants): Add entry for e500mc.

	Port from mainline binutils:

	2008-03-31  Edmar Wienskoski  <edmar@freescale.com>
	bfd/
        * archures.c: Add bfd_mach_ppc_e500mc.
        * bfd-in2.h: Regenerate.

	include/opcode/
        * ppc.h: (PPC_OPCODE_E500MC): New.

	opcodes/
        * ppc-dis.c (powerpc_dialect): Handle "e500mc". Extend "e500" to
        accept Power E500MC instructions.
        (print_ppc_disassembler_options): Document -Me500mc.
        * ppc-opc.c: (DUIS, DUI, T): New.
        (XRT, XRTRA): Likewise.
        (E500MC): Likewise.
        (powerpc_opcodes): Add new Power E500MC instructions.

2008-05-15  Vladimir Prus  <vladimir@codesourcery.com>

	* xml-tdesc.c (tdesc_start_flags): New.
	(tdesc_start_field): Make sure that a filed inside flags element
	does not specifiy a type.  Use append_flags_type_flag
	for fields inside flags element.
	(flags_attributes): New.
	(feature_children): Add 'flags'.

2008-05-14  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/
	* value.c (unpack_field_as_long): Use field_type's length for
	unpacked fields.

2008-05-13  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/testsuite/
	* gdb.base/watch_thread_num.exp: Don't run tests that require
	watchpoints if the target doesn't support them.

2008-05-09  Carlos O'Donell  <carlos@codesourcery.com>

	Backport from mainline:
	gdb/
	2008-03-28  Carlos O'Donell  <carlos@codesourcery.com>
	* ser-mingw.c (ser_windows_open): Open requested name.

2008-04-27  Kazu Hirata  <kazu@codesourcery.com>

	* release-notes-csl.xml: Fix a typo.

2008-04-24  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (Printing global variables in GDB): Fix
	cut-off sentence.

2008-04-17  Pedro Alves  <pedro@codesourcery.com>

	Issue #2875.
	* release-notes-csl.xml: Describe bug fix.

	gdb/
	* dwarf2read.c (var_decode_location): Set SYMBOL_CLASS before
	calling fixup_symbol_section.

2008-04-10  Vladimir Prus  <vladimir@codesourcery.com>

	Issue #2775.
	gdb/
	* target.h (struct target_ops): New field to_auxv_parse.
	* auxv.c (default_auxv_parse): New, renamed from previous
	target_auxv_parse.
	(target_auxv_parse): Try to call target method.  Fallback to
	default_auxv_parse if not found.
	* procfs.c (procfs_auxv_parse): New.
	(init_procfs_ops): On Solaris, in 64-bit mode, install
	procfs_auxv_parse.

2008-03-28  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #2696
	* release-notes-csl.xml: Document 64-bit MIPS signal
	handler fix.

	Backport:
	2008-03-28  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* mips-linux-tdep.c: Update N32/N64 signal frame comments.
	(N64_SIGCONTEXT_LO, N64_SIGCONTEXT_PC, N64_SIGCONTEXT_FPCSR): Update.
	(N64_SIGCONTEXT_FIR, N64_SIGCONTEXT_CAUSE, N64_SIGCONTEXT_BADVADDR):
	Delete.
	(mips_linux_n32n64_sigframe_init): Do not record cause or badvaddr.

2008-03-24  Kazu Hirata  <kazu@codesourcery.com>

	libiberty/
	* cygpath.c (cygpath): Special-case the empty path.

2008-03-18  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mingw-hdep.c (hstdin, hstdout, hstderr, saved_handles)
	(save_std_handles): New.
	(gdb_isatty): Use save_std_handles.  Avoid current_interp_named_p.
	(_initialize_mingw_hdep): Use save_std_handles.
	* win32-termcap.c (tgetnum): Return defaults for li and co.  Failure
	for li stops gdb from paginating.
	* minsyms.c (prim_record_minimal_symbol_and_info): Clear the
	newly allocated minsyms.

	gdb/testsuite/
	* interrupt.exp: Skip for mingw32.

2008-03-18  Daniel Jacobowitz  <dan@codesourcery.com>

	libiberty/
	* cygpath.c (chdir): New function.

2008-03-17  Daniel Jacobowitz  <dan@codesourcery.com>

	Backported from mainline:
	gdb/
	2008-02-28  Daniel Jacobowitz  <dan@codesourcery.com>
	* frame.c (reinit_frame_cache): Only annotate if frames were
	previously valid.

	gdb/testsuite/
	2008-02-28  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/annota1.exp, gdb.cp/annota2.exp: Update for fewer
	frames-invalid annotations.

2008-03-12  Nathan Froyd  <froydnj@codesourcery.com>

	Issue #2634
	* release-notes-csl.xml (GDB info registers crash fix): New note.

	Backport from mainline:

	gdb/
	2008-02-26  Greg Law  <glaw@undo-software.com>

	* regcache.c (registers_changed): Call reinit_frame_cache.

2008-03-10  Daniel Jacobowitz  <dan@codesourcery.com>

	readline/
	* rldefs.h: Undefined TERMIOS_MISSING for mingw32.
	* rltty.c: Use mingw-termios.c.
	* rltty.h: Use mingw-termios.h.

2008-03-10  Daniel Jacobowitz  <dan@codesourcery.com>

	bfd/
	* elf32-mips.c (elf_mips_copy_howto, elf_mips_jump_slot_howto): New.
	(mips_elf32_rtype_to_howto): Handle R_MIPS_COPY and R_MIPS_JUMP_SLOT.
	(elf_backend_plt_sym_val): Define.  Undefine for VxWorks.
	* elfxx-mips.c (MIPS_NONPIC_LARGE_PLT_THRESHOLD)
	(mips_non_pic_exec_plt0_entry, mips_non_pic_exec_plt_entry)
	(mips_non_pic_large_exec_plt_entry, _bfd_mips_elf_plt_sym_val): New.
	* elfxx-mips.h (_bfd_mips_elf_plt_sym_val): Declare.

	gdb/
	* mips-linux-tdep.c (mips_linux_in_dynsym_resolve_code): Update
	comments.
	(mips_linux_skip_resolver): Also use glibc_skip_solib_resolver.
	(mips_linux_init_abi): Do not override skip_trampoline_code.
	* configure.tgt (mips*-*-linux*): Add glibc-tdep.o.
	* mips-tdep.c (mips_stub_frame_sniffer): Use the stub frame sniffer
	for .MIPS.pic_stubs.
	(mips_skip_mips16_trampoline_code): Rename from
	mips_skip_trampoline_code.
	(mips_skip_pic_trampoline_code, mips_skip_trampoline_code): New.
	* infrun.c (handle_inferior_event): Do not check
	IN_SOLIB_DYNSYM_RESOLVE_CODE.  Do not pass zero to
	in_solib_dynsym_resolve_code.
	* Makefile.in (mips-linux-tdep.o): Update.

2008-03-08  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml (GDB search path bug fix):  Fix typos.

2008-03-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mips-tdep.c (mips32_scan_prologue): Stop scanning at branches.

2008-03-07  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	gdb/testsuite/
	2008-01-11  Jim Blandy  <jimb@codesourcery.com>
	* gdb.threads/sigthread.c: Use barriers to ensure that
	child_thread and child_thread_two are always initialized before we
	start to use them.

2008-03-07  Sandra Loosemore  <sandra@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): Fix $args typo in timeout error message.

2008-03-07  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_saved_set_unbuffered_mode_obj): New global.
	(gdb_compile): If target is *-*-cygwin* or *-*-mingw*, and we're
	compiling an executable, link in an object that forces unbuffered
	output.
	* lib/set_unbuffered_mode.c: New file.

2008-03-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* configure, config.in: Regenerated.
	* configure.ac: Add --with-system-gdbinit.
	* main.c (system_gdbinit): New.
	(captured_main): Relocate system_gdbinit.  Load it before
	$HOME/.gdbinit.

	gdb/doc/
	* gdb.texinfo (Startup): Document --with-system-gdbinit.

2008-03-06  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Mention user-defined prefix commands.

	gdb/
	* cli/cli-cmds.c (show_user): Update calls to show_user_1.  Call
	show_user_1 for prefix commands.
	* cli/cli-decode.c (help_cmd_list): Recurse for "help user-defined".
	* cli/cli-script.c (validate_comname): Rewrite to handle prefix
	commands.  Return the containing command list.
	(define_command, document_command): Update to handle prefix commands.
	(show_user_1): Add prefix and name arguments.  Handle prefix
	commands.
	* cli/cli-script.h (show_user_1): Update prototype.

	gdb/doc/
	* gdb.texinfo (Define, Hooks): Document prefix command support.

	gdb/testsuite/
	* gdb.base/define.exp: Test defining and hooking prefix commands.

2008-03-05  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_compile_test): Detect "command not found" and
	set test unsupported.

2008-03-05  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (fullname_syntax_UNC, fullname_syntax_DOS_CASE)
	(fullname_syntax_DOS): Allow forward slash as last slash.
	(fullname_syntax): Escape the backslashes.

2008-03-04  Daniel Jacobowitz  <dan@codesourcery.com>

	readline/
	* rltty.c (rl_prep_terminal) [__MINGW32__]: Only echo if
	rl_instream isn't attached to a Windows console.

2008-03-03  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote-fileio.c (remote_fileio_ctrl_c_signal_handler): Update
	call to gdb_call_async_signal_handler.
	* event-loop.h (mark_async_signal_handler): Add comments.
	(call_async_signal_handler): Update comments.
	(gdb_call_async_signal_handler): Add immediate_p argument.
	* remote.c (remote_interrupt, remote_interrupt_twice): Update
	calls to gdb_call_async_signal_handler.
	* mingw-hdep.c (gdb_select): Wait for the readline signal handler
	to finish.  Handle sigint_handler == NULL.  Correct EINTR return
	value.
	(gdb_call_async_signal_handler): Add immediate_p argument.
	* event-top.c (handle_sigint): Remove local workaround for Control-C
	error.  Pass immediate_quit to gdb_call_async_signal_handler.
	* posix-hdep.c (gdb_call_async_signal_handler): Add immediate_p
	argument.

	* main.c (captured_main): Also set stdin to binary mode.

2008-03-03  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	2008-01-25  Pierre Muller  <muller@ics.u-strasbg.fr>
	* i386-tdep.c (i386_skip_noop): New function.
	(i386_analyze_prologue): Call i386_skip_noop function.

2008-03-03  Pedro Alves  <pedro@codesourcery.com>

	* release-notes-csl.xml: Mention i686-mingw32 target support.

2008-02-29  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #774
	* release-notes-csl.xml: Describe Control-C fix.

	* Makefile.in (mingw-hdep.o, posix-hdep.o, remote-fileio.o): Update.
	* event-loop.c (call_async_signal_handler): New.
	* event-loop.h (call_async_signal_handler)
	(gdb_call_async_signal_handler): Declare.
	* event-top.c (handle_sigint): Use gdb_call_async_signal_handler.
	* mingw-hdep.c (sigint_event, sigint_handler): New.
	(gdb_select): Use them.
	(gdb_call_async_signal_handler): New function.
	(_initialize_mingw_hdep): Intialize sigint_event..
	* posix-hdep.c (gdb_call_async_signal_handler): New function.
	* remote-fileio.c (sigint_fileio_token, async_remote_fileio_interrupt):
	New.
	(remote_fileio_ctrl_c_signal_handler): Use
	gdb_call_async_signal_handler.
	(initialize_remote_fileio): Initialize sigint_fileio_token.
	* remote.c (initialize_sigint_signal_handler, handle_remote_sigint): Do
	not initialize tokens here.
	(handle_remote_sigint_twice): Likewise.  Reinstall
	handle_remote_sigint.
	(async_remote_interrupt_twice): Just call interrupt_query.
	(cleanup_sigint_signal_handler): Do not delete tokens.
	(remote_interrupt, remote_interrupt_twice): Use
	gdb_call_async_signal_handler.
	(interrupt_query): Reinstall the default signal handler.
	(_initialize_remote): Initialize tokens here.

2008-02-28  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.base/ending-run.exp: Add step-out-of-main pattern of i?86-*-mingw*.

2008-02-28  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite/
	* gdb.arch/i386-gnu-cfi.exp: Define SYMBOL_PREFIX on *-*-mingw*.
	* gdb.arch/i386-prologue.exp: Likewise.
	* gdb.arch/i386-unwind.exp: Likewise.

2008-02-28  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* mingw-hdep.c (hstdin, hstdout, hstderr): New static vars.
	(_initialize_mingw_hdep, gdb_isatty): New.
	* posix-hdep.c (gdb_isatty): New.
	* ser-mingw.c (ser_console_get_tty_state): Replace isatty by gdb_isatty.
	* ui-file.c (stdio_file_isatty): Replace isatty by gdb_isatty.
	* defs.h (ISATTY): Always define.
	(gdb_isatty): Declare.
	* Makefile.in (mingw-hdep.o): Depend on $(interps_h).

	gdb/doc/
	* gdbint.textinfo (ISATTY): Delete description.

2008-02-27  Vladimir Prus  <vladimir@codesourcery.com>

	Issue #2465
	* release-notes-csl.xm: Describe change.

	gdb/
	* solib.c (reload_shared_libraries): Give
	inferior a chance to reset solib breakpoint.
	Reinit frame cache.

2008-02-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* solib-svr4.c (enable_break): Convert r_brk to a code address.

2008-02-15  Mark Mitchell  <mark@codesourcery.com>

	* release-notes-csl.xml: Tweak release note for Issue #2545.

	Issue #2545

	* release-notes-csl.xml: Describe change.

	Backport from FSF:
	gdb/
	2007-12-04  Maciej W. Rozycki  <macro@mips.com>
	* features/mips-cpu.xml: Specify "regnum" for "r0" explicitly.
	* features/mips64-cpu.xml: Likewise.
	* features/mips-fpu.xml: Specify "regnum" for "f0" explicitly.
	* features/mips64-fpu.xml: Likewise.

2008-02-15  Kazu Hirata  <kazu@codesourcery.com>

	gdb/
	* remote.c (extended_remote_attach_1): Change the type of pid to
	int.

2008-02-12  Nathan Froyd  <froydnj@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Starting your Program): Use @@.
	(Other Command-Line Arguments for gdbserver): Likewise.

2008-02-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document "set exec-wrapper" and gdbserver
	--wrapper.

	* Makefile.in (fork-child.o): Update.
	* NEWS: Document "set exec-wrapper" and the gdbserver --wrapper
	argument.  Gather all gdbserver features together.
	* fork-child.c (exec_wrapper): New variable.
	(fork_inferior): Use it.
	(startup_inferior): Skip an extra trap if using "set exec-wrapper".
	(unset_exec_wrapper_command, _initialize_fork_child): New.

	* gdb.texinfo (Starting): Document "set exec-wrapper".
	(Server): Document gdbserver --wrapper.

	* server.c (wrapper_argv): New.
	(start_inferior): Handle wrapper_argv.  If set, expect an extra
	trap.
	(gdbserver_usage): Document --wrapper.
	(main): Parse --wrapper.

2008-02-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* mipsnbsd-tdep.c (mipsnbsd_ilp32_fetch_link_map_offsets): Set
	r_brk_offset.
	(mipsnbsd_lp64_fetch_link_map_offsets): Likewise.
	* solib-svr4.c (solib_svr4_r_brk): New.
	(open_symbol_file_object, svr4_current_sos): Always check the
	debug base.
	(svr4_fetch_objfile_link_map): Do not set debug_base.
	(enable_break): Use r_brk if it is set.
	(svr4_ilp32_fetch_link_map_offsets): Set r_brk_offset.
	(svr4_lp64_fetch_link_map_offsets): Likewise.
	* solib-svr4.h (struct link_map_offsets): Add r_brk_offset.

2008-02-11  Pedro Alves  <pedro@codesourcery.com>

	* main.c (captured_main) [__MINGW32__]: If stdout and stderr
	are pipes, set them to binary mode.

2008-02-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	2008-02-08  Doug Evans  <dje@google.com>
	* source.c (find_and_open_source): Always rewrite absolute filenames.

2008-02-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document gdbserver --multi.

2008-02-05  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from mainline:
	2008-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/gdbserver/
	* linux-low.c (linux_attach_lwp): Do not _exit after errors.
	(linux_kill, linux_detach): Clean up the process list.
	* remote-utils.c (remote_open): Improve port number parsing.
	(putpkt_binary, input_interrupt): Only send interrupts if the target
	is running.
	* server.c (extended_protocol): Make static.
	(attached): Define earlier.
	(exit_requested, response_needed, program_argv): New variables.
	(target_running): New.
	(start_inferior): Clear attached here.
	(attach_inferior): Set attached here.
	(require_running): Define.
	(handle_query): Use require_running and target_running.  Implement
	"monitor exit".
	(handle_v_attach, handle_v_run): New.
	(handle_v_requests): Use require_running.  Handle vAttach and vRun.
	(gdbserver_usage): Update.
	(main): Redo argument parsing.  Handle --debug and --multi.  Handle
	--attach along with other options or after the port.  Save
	program_argv.  Support no initial program.  Resynchronize
	communication with GDB after an error.  Handle "monitor exit".
	Use require_running and target_running.  Always allow the extended
	protocol.  Do not error out for Hc0 or Hc-1.  Do not automatically
	restart in extended mode.
	* README: Refer to the GDB manual.  Update --attach usage.

	2008-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* remote.c (struct remote_state): Add cached_wait_status.
	(remote_exec_file): New variable.
	(PACKET_vAttach, PACKET_vRun): New constants.
	(extended_remote_restart): Do not query for status.
	(struct start_remote_args): New.
	(remote_start_remote): Take it as a second argument.  Check
	whether the target is running.  Issue an error for non-running
	non-extended targets.  Cache the wait status.  Set inferior_ptid
	here.
	(remote_open_1): Prompt to disconnect non-running targets.  Make
	sure the target is marked running.  Do not set inferior_ptid here.
	Update call to remote_start_remote.  Do not call remote_check_symbols
	if the target is not running.
	(remote_detach_1): Rename from remote_detach.  Take an EXTENDED
	argument.  Handle a non-running target.
	(remote_detach): Use it.
	(extended_remote_detach): New.
	(remote_disconnect): Fix typo.  Use remoute_mourn_1.
	(extended_remote_attach_1, extended_remote_attach)
	(extended_async_remote_attach): New.
	(remote_vcont_resume): Remove unused variable.
	(remote_wait, remote_async_wait): Use any cached wait status.
	(putpkt_binary, getpkt): Clear any cached wait status.
	(extended_remoute_mourn_1): New.
	(extended_remote_mourn): Use it.
	(extended_async_remote_mourn, extended_remote_run): New.
	(extended_remote_create_inferior_1): New.
	(extended_remote_create_inferior): Use it.
	(extended_remote_async_create_inferior): Likewise.
	(remote_xfer_partial): Skip for non-executing targets.
	(init_extended_remote_ops): Set to_detach and to_attach.
	(init_extended_async_remote_ops): Likewise.  Use
	extended_async_remote_mourn.
	(_initialize_remote): Register vAttach, vRun, and
	set remote exec-file.
	* NEWS: Mention vAttach, vRun, and gdbserver extended-remote support.

	2008-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/testsuite/
	* gdb.server/ext-attach.c, gdb.server/ext-attach.exp,
	gdb.server/ext-run.exp: New files.
	* lib/gdbserver-support.exp (gdbserver_download): New.
	(gdbserver_start): New.  Update gdbserver expected
	output.
	(gdbserver_spawn): Use them.
	(gdbserver_start_extended): New.

	2008-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/doc/
	* gdb.texinfo (Using the `gdbserver' Program): Add security
	warning.  Rearrange into subsections and subsubsections.  Document
	--multi and --debug.  Correct --with-sysroot typo.  Update --attach
	usage.  Make load reference clearer.  Document monitor exit.
	(Remote Configuration): Document set remote exec-file, attach-packet,
	and run-packet.
	(Packets): Document vAttach and vRun.

	2008-01-23  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* remote.c (remote_wait): Handle SIGINT between packets.
	(remote_async_wait): Likewise.

2008-02-04  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* remote.c (remote_get_threadlist): If the response
	is empty, don't try to parse it.

2008-02-02  Sandra Loosemore  <sandra@codesourcery.com>

	* release-notes-csl.xml: Fix mistaken uses of &csl_prod; to use
	&csl_sgxx; instead.

2007-02-01  Pedro Alves  <pedro@codesourcery.code>

        2007-02-01  Pedro Alves  <pedro_alves@portugalmail.pt>

	* gdbarch.sh (gdbarch_skip_main_constructor_call): New.
	* gdbarch.h, gdbarch.c: Regenerate.

	* i386-tdep.h (i386_skip_main_constructor_call): Declare.
	* i386-tdep.c (i386_skip_main_constructor_call): New.
	* i386-cygwin-tdep.c (i386_cygwin_init_abi): Register
	i386_skip_main_constructor_call as gdbarch_skip_main_constructor_call
	gdbarch callback.
	* symtab.c (find_function_start_sal): When pc points at the "main"
	function, call gdbarch_skip_main_constructor_call.

2008-01-25  Joseph Myers  <joseph@codesourcery.com>

	include/
	* libiberty.h (cygpath): Declare.

	libiberty/
	* cygpath.c (cygpath): Remove static.  Return int.
	* pex-win32.c (pex_win32_open_read, pex_win32_open_write): Use
	open not _open.

2008-01-24  Pedro Alves  <pedro@codesourcery.com>

	Merge from FSF.
	* release-notes-csl.xml (GDB update): Mention update.

2008-01-24  Pedro Alves  <pedro@codesourcery.com>

	gdb/testsuite
	* gdb.mi/mi-var-child.c (do_children_tests): Add 'dummy' integer
	and 'dummy_ptr' integer pointer.  Initialize struct_declarations
	with dummy_ptr's address.
	* gdb.mi/var-cmd.c (do_children_tests): Likewise.
	* gdb.mi/mi-var-child.exp: int_ptr_ptr is now always "editable" on
	all targets.
	* gdb.mi/mi2-var-child.exp: Likewise.

2008-01-24  Pedro Alves  <pedro@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_addr_bits_remove): In non 26-bit mode, don't
	strip bit 1 even if pc doesn't point to thumb code.

2008-01-23  Pedro Alves  <pedro@codesourcery.com>

	Match symbol/msymbol/bfd_section by address.

	gdb/
	* symtab.c (fixup_section): Add addr parameter.  If possible,
	lookup the minimal symbol by address.  If that fails, fallback to
	the old by-name method.
	(fixup_symbol_section): Ensure we always have an objfile to look
	into.  Extract and pass to fixup_section the symbol's address that
	will match the minimal symbol's address.
	(fixup_psymbol_section): Likewise.

	gdb/testsuite/
	* gdb.base/fixsection.exp: New file.
	* gdb.base/fixsection0.c: New file.
	* gdb.base/fixsection1.c: New file.

2008-01-22  Vladimir Prus  <vladimir@codesourcery.com>

	* release-notes-csl.xml: Describe solaris pending breakpoints
	fix for 64-bit Solaris.

2008-01-22  Vladimir Prus  <vladimir@codesourcery.com>

	* solib-svr4.c (svr4_same): Recognize two
	alternative names of Solaris 64-bit dynamic
	linker as same.

2008-01-09  Joseph Myers  <joseph@codesourcery.com>

	* configure.ac (host_makefile_frag): Use config/mh-mingw on
	*-mingw32*.
	* configure: Regenerate.

	config/
	* config/mh-mingw: New.

2008-01-07  Vladimir Prus  <vladimir@codesourcery.com>

	* release-notes-csl.xml: Describe solaris pending breakpoints
	fix.

2008-01-04  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* main.c (captured_main): Set stdout and stderr unbuffered on
	Windows.

2007-12-24  Vladimir Prus  <vladimir@codesourcery.com>

	Ignore change in name of dynamic linker during
	execution.  This also unbreaks pending breakpoints.
	* solist.h (struct target_so_ops): New field
	same.
	* solib-svr4.c (svr4_same): New.
	(_initialize_svr4_solib): Register svr4_same.
	* solib.c (update_solib_list): Use ops->same,
	if available.

2007-12-12  Paul Brook  <paul@codesourcery.com>

	Backport from FSF.
	2007-09-15  Alan Modra  <amodra@bigpond.net.au>
	* configure.ac: Correct makeinfo version check.
	* configure: Regenerate.

2007-11-06  Daniel Jacobowitz  <dan@codesourcery.com>
            Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* procfs.c (proc_set_current_signal): If redelivering a signal,
	reuse the current siginfo if possible.

2007-11-05  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	gdb/gdbserver/
	2007-11-05  Daniel Jacobowitz  <dan@codesourcery.com>
	* linux-low.c: Include <sched.h>.

2007-11-01  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/gdbserver/
	* linux-low.c (linux_tracefork_grandchild): New.
	(linux_tracefork_child): Use clone.
	(linux_test_for_tracefork): Use clone; allocate and free a stack.

2007-10-29  Kazu Hirata  <kazu@codesourcery.com>

	gdb/
	* symfile.c (generic_load): Call gdbarch_addr_bits_remove on the
	entry address.

2007-10-24  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Describe improved gdbserver thread support.

	Backport:
	2007-10-24  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/gdbserver/
	* linux-low.c (handle_extended_wait): Handle unexpected signals.

	2007-10-23  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/gdbserver/
	* inferiors.c (change_inferior_id): Delete.
	(add_pid_to_list, pull_pid_from_list): New.
	* linux-low.c (PTRACE_SETOPTIONS, PTRACE_GETEVENTMSG)
	(PTRACE_O_TRACESYSGOOD, PTRACE_O_TRACEFORK, PTRACE_O_TRACEVFORK)
	(PTRACE_O_TRACECLONE, PTRACE_O_TRACEEXEC, PTRACE_O_TRACEVFORKDONE)
	(PTRACE_O_TRACEEXIT, PTRACE_EVENT_FORK, PTRACE_EVENT_VFORK)
	(PTRACE_EVENT_CLONE, PTRACE_EVENT_EXEC, PTRACE_EVENT_VFORK_DONE)
	(PTRACE_EVENT_EXIT, __WALL): Provide default definitions.
	(stopped_pids, thread_db_active, must_set_ptrace_flags): New variables.
	(using_threads): Always set to 1.
	(handle_extended_wait): New.
	(add_process): Do not set TID.
	(linux_create_inferior): Set must_set_ptrace_flags.
	(linux_attach_lwp): Remove TID argument.  Do not check using_threads.
	Use PTRACE_SETOPTIONS.  Call new_thread_notify.  Update all callers.
	(linux_thread_alive): Rename TID argument to LWPID.
	(linux_wait_for_process): Handle unknown processes.  Do not use TID.
	(linux_wait_for_event): Do not use TID or check using_threads.  Update
	call to dead_thread_notify.  Call handle_extended_wait.
	(linux_create_inferior): Use PTRACE_SETOPTIONS.
	(send_sigstop): Delete sigstop_sent.
	(wait_for_sigstop): Avoid TID.
	(linux_supports_tracefork_flag, linux_tracefork_child, my_waitpid)
	(linux_test_for_tracefork): New.
	(linux_lookup_signals): Use thread_db_active and
	linux_supports_tracefork_flag.
	(initialize_low): Use thread_db_active and linux_test_for_tracefork.
	* linux-low.h (get_process_thread): Avoid TID.
	(struct process_ifo): Move thread_known and tid to the end.  Remove
	sigstop_sent.
	(linux_attach_lwp, thread_db_init): Update prototypes.
	* server.h (change_inferior_id): Delete prototype.
	(add_pid_to_list, pull_pid_from_list): New prototypes.
	* thread-db.c (thread_db_use_events): New.
	(find_first_thread): Rename to...
	(find_one_thread): ...this.  Update callers and messages.  Do not
	call fatal.  Check thread_db_use_events.  Do not call
	change_inferior_id or new_thread_notify.
	(maybe_attach_thread): Update.  Do not call new_thread_notify.
	(thread_db_init): Set thread_db_use_events.  Check use_events.
	* utils.c (fatal, warning): Correct message prefix.

	2007-10-23  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/testsuite/
	* gdb.threads/multi-create.c, gdb.threads/multi-create.exp: New.

2007-10-18  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_push_dummy_call): Set the low bit of LR for
	a Thumb entry point.
	(thumb_get_next_pc): Handle Thumb-2 and ARM v6 instructions.  Refuse
	to single step into IT blocks.
	* solib-svr4.c (exec_entry_point): Use gdbarch_addr_bits_remove.
	* objfiles.c (init_entry_point_info): Likewise.

2007-10-17  Nathan Sidwell  <nathan@codesourcery.com>

	opcodes/
	* m68k-opc.c (m68k_opcodes): Correct move sr and ccr masks for
	coldfire.

2007-10-16  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* target-memory.c (claim_memory): Propagate baton for split memory
	requests.

2007-10-12  Jim Blandy  <jimb@codesourcery.com>

	Issue #2089
	gdb/
	* serial.h (struct serial_ops): Document read_prim to return zero
	at EOF.
	* ser-base.c (do_ser_base_readchar): Return SERIAL_EOF when
	read_prim returns zero, not SERIAL_TIMEOUT.

2007-10-04  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #2129
	* release-notes-csl.xml: Mention qOffsets fix.

	gdb/
	* remote.c (get_offsets): Only call free_symfile_segment_data if
	data was allocated.

2007-10-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_read_fp_register_double): Correct check for
	odd FP registers.
	(mips_print_fp_register): Correct check for even FP registers.
	(mips_virtual_frame_pointer): New function.
	(mips_gdbarch_init): Call set_gdbarch_virtual_frame_pointer.

2007-10-02  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* infrun.c (handle_inferior_event): Do not check that the current
	frame is inlined.

	gdb/testsuite/
	* gdb.opt/inline-cmds.exp: Detect failed next.

2007-10-01  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.cp/classes.exp (do_tests): Always step to the line after the
	call.
	* gdb.mi/mi-simplerun.exp (test_controlled_execution): Allow finish
	to return to the call.
	* gdb.mi/mi2-simplerun.exp (test_controlled_execution): Likewise.
	* gdb.mi/mi-return.exp (test_return_simple): Likewise.
	* gdb.mi/mi2-return.exp (test_return_simple): Likewise.
	* gdb.mi/mi-until.exp (test_until): Likewise.
	* gdb.mi/mi2-until.exp (test_until): Likewise.

2007-10-01  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/var-cmd.c (do_locals_tests): Define lcharacter as a
	two-char array.
	* gdb.mi/mi-var-cmd.exp, gdb.mi/mi2-var-cmd.exp: Use lcharacter[0].

2007-09-28  Paul Brook  <paul@codesourcery.com>

	sim/arm/
	* armvirt.c (PutWord): Disable "real" swi vector detection.

2007-09-27  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c (install_new_value): Don't
	call value_get_print_value when a value is
	lazy.  Update the print_value member in a
	single place.

2007-09-27  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c (create_child): Don't call
	install_new_value twice.

2007-09-26  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	* remote.c (getpkt_sane): Fix error message.  No animals were
	harmed in the making of this debugger.

2007-09-26  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (create_breakpoint): Set
	condition on each location, not on the first
	location of breakpoint.

2007-09-21  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	* symfile.h (struct symfile_segment_data): Doc fixes.
	* symfile.c (symfile_map_offsets_to_segments): Doc fixes.
	Assert that we were passed some loaded segment addresses,
	and that sections' segment numbers are valid.
	Simplify offset calculation.
	* remote.c (get_offsets): Clarify selection of relocate-by-segment
	strategy, and set num_segments correctly.  Delete redundant
	assignments to do_sections.

2007-09-20  Joseph Myers  <joseph@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Index): Rename to GDB Index.
	* gdbint.texinfo (Index): Rename to GDB Internals Index.

2007-09-19  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* acinclude.m4: Include ../config/acx.m4.
	* configure.ac: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure: Regenerate.

	gdb/doc/
	* configure.ac: Include ../../config/acx.m4.  Use ACX_PKGVERSION
	and ACX_BUGURL.
	* configure: Regenerate.
	* Makefile.in (PKGVERSION, BUGURL_TEXI): Define.
	(GDBvn.texi): Define VERSION_PACKAGE and BUGURL.
	* gdb.texinfo: Use VERSION_PACKAGE and BUGURL.  Remove
	mailing-list-specific text about bug reporting.

	gdb/gdbserver/
	* acinclude.m4: Include ../../config/acx.m4.
	* configure.ac: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure: Regenerate.

	sim/common/
	* aclocal.m4: Include ../../config/acx.m4.
	* common.m4: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure: Regenerate.

	sim/arm/
	* configure: Regenerate.

	sim/cris/
	* configure: Regenerate.

	sim/d10v/
	* configure: Regenerate.

	sim/erc32/
	* configure: Regenerate.

	sim/frv/
	* configure: Regenerate.

	sim/h8300/
	* configure: Regenerate.

	sim/iq2000/
	* configure: Regenerate.

	sim/m32c/
	* configure: Regenerate.

	sim/m32r/
	* configure: Regenerate.

	sim/m68hc11/
	* configure: Regenerate.

	sim/mcore/
	* configure: Regenerate.

	sim/mips/
	* configure: Regenerate.

	sim/mn10300/
	* configure: Regenerate.

	sim/sh/
	* configure: Regenerate.

	sim/sh64/
	* configure: Regenerate.

	sim/v850/
	* configure: Regenerate.

2007-09-19  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/gdbserver/
	* linux-low.c (O_LARGEFILE): Define.
	(linux_read_memory): Use /proc/PID/mem.
	* configure.ac: Use AC_GNU_SOURCE.  Check for pread64.
	* configure, config.in: Regenerated.

	gdb/
	* mips-tdep.c (mips_stub_frame_cache): Correct the saved return
	address register.  Correct the call to frame_id_build.
	(mips_stub_frame_sniffer): Use the stub unwinder when the PC
	is invalid.

2007-09-16  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/ending-run.exp: Correctly escape ( & ) in regexps.

2007-09-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	Backport:
	2007-08-22  Daniel Jacobowitz  <dan@codesourcery.com>
	* solib-svr4.c (scan_dyntag): Only read target memory when necessary.
	Fix formatting.
	(elf_locate_base): Look for DT_MIPS_RLD_MAP first.  Expand comments.
	(elf_lookup_lib_symbol): Fix formatting.

2007-09-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	Backport:
	2007-09-12  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/solib-weak.exp (do_test): Adjust the file names for each
	test.

2007-09-08  Vladimir Prus  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/annota1.exp: Adjust for 'info break'
	format changes.
	* gdb.base/annota3.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/condbreak.exp: Likewise.
	* gdb.base/pending.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/unload.exp: Likewise.
	* gdb.base/ovldbreak.exp: Likewise.

2007-09-07  Vladimir Prus  <vladimir@codesourcery.com>

	* release-notes-csl.xml (Improved breakpoints...): New
	release note.

2007-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi2-watch.exp: Set can-use-hw-watchpoints to 0 if required.
	* gdb.mi/mi-watch.exp: Likewise.

2007-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/float.exp: Allow a missing FPU on PowerPC.

2007-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.arch/altivec-abi.exp: Correct pattern for character handling
	changes.

2007-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* ppc-sysv-tdep.c (do_ppc_sysv_return_value): Handle other integer
	types.

2007-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/gdbserver/
	* linux-ppc-low.c (ppc_fill_evrregset, ppc_store_evrregset): Correct
	register numbers.

2007-09-06  Vladimir Prus  <dan@codesourcery.com>

	gdb/
	* breakpoint.c (remove_sal): New.
	(expand_line_sal_maybe): New.
	(create_breakpoints): Call expand_line_sal_maybe.
	(clear_command): Add comment.
	(breakpoint_re_set_one): Call expand_line_sal_maybe.
	* linespec.c (decode_indirect): Set explicit_pc to 1.
	(decode_all_digits): Set explicit_line to 1.
	(append_expanded_sal): New.
	(expand_line_sal): New.
	* linespec.h (expand_line_sal): Declare.
	* symtab.c (init_sal): Initialize explicit_pc
	and explicit_line.
	* symtab.h (struct symtab_and_line): New fields
	explicit_pc and explicit_line.

	gdb/testsuite/
	* gdb.cp/mb-ctor.cc: New.
	* gdb.cp/mb-ctor.exp: New.
	* gdb.cp/mb-templates.cc: New.
	* gdb.cp/mb-templates.exp: New.

2007-09-06  Vladimir Prus  <dan@codesourcery.com>

	gdb/
	* breakpoint.c (ALL_BP_LOCATIONS): Iterate over global_next.
	(ALL_BP_LOCATIONS_SAFE): Likewise.
	(breakpoint_enabled): Don't check for pending.
	(condition_command): Free and update all locations of
	a breakpoint.
	(insert_bp_location): Adjust.
	(software_breakpoint_inserted_here_p): Don't care
	if breakpoint is enabled, as soon as it's inserted.
	(print_it_typical): Print bpstat's location, not
	bpstat's breakpoint's location.
	(bpstat_stop_status): Iterate over all locations, not
	all breakpoints.
	(print_breakpoint_location): New.
	(print_one_breakpoint): Renamed to
	(print_one_breakpoint_location): ...this. Take
	parameters to describe which location is being
	printed. Modify code to properly print header
	for several locations and individual locations.
	(print_one_breakpoint): Print all locations.
	(breakpoint_has_pc): New.
	(describe_other_breakpoints): Use the above.
	(check_duplicates): Renamed to...
	(check_duplicates_for): .. this.
	(check_duplicates): Use check_duplicates_for.
	(allocate_bp_location): Adjust.
	(set_raw_breakpoint_without_location): New,
	extracted from set_raw_breakpoint.
	(set_breakpoint_location_function): New.
	(set_raw_breakpoint): Use
	set_raw_breakpoint_without_location.
	(make_breakpoint_permanent): Mark all locations
	as inserted.
	(disable_breakpoints_in_shlibs): Iterate over
	locations.
	(disable_breakpoints_in_unloaded_shlib): Likewise.
	(re_enable_breakpoints_in_shlibs): Likewise.
	(mention): Say "pending" when breakpoint has
	zero locations.  If breakpoint has more than one
	location, say so.
	(add_location_to_breakpoint): New.
	(create_breakpoint): Accept symtabs_and_lines, not
	symtab_and_line. Pass extra sals to
	add_location_to_breakpoint.
	(create_breakpoints): Pass symtabs_and_lines to
	create_breakpoints.
	(break_command_1): Make pending breakpoints
	have zero locations.
	(do_captured_breakpoint): Remove wrong allocation.
	(clear_command): Iterate over all locations.
	(unlink_locations_from_global_list): Renamed
	from unlink_location_from_global_list. Remove
	all locations.
	(delete_breakpoint): Remove all locations.
	Iterate over all locations when deciding which
	other location to re-enable.
	(all_locations_are_pending): New.
	(update_breakpoint_locations): Renamed from
	update_breakpoint_location. Try to match old
	and new locations using names of containing
	functions.
	(breakpoint_re_set_one): Adjust.
	(find_location_by_number): New.
	(disable_command): Allow disabling individual location.
	(enable_command): Allow enabling individual location.
	* breakpoint.h (enum location_enable_state): New.
	(struct bp_location): New member global_next.
	New enabled member.  New function_name member.
	Rename pending to condition_not_parsed.

	gdb/testsuite/
	* gdb.base/condbreak.exp: Adjust.

2007-09-06  Vladimir Prus  <dan@codesourcery.com>

	gdb/
	* breakpoint.h (enum enable_state): Remove the
	bp_shlib_disabled enumerator.
	(struct bp_location): New field shlib_disabled.
	* breakpoint.c: Adjust all uses.

2007-09-05  Vladimir Prus  <dan@codesourcery.com>

	gdb/
	* breakpoint.c (do_restore_lang_radix_cleanup): Remove.
	(resolve_pending_breakpoint): Remove.
	(re_enable_breakpoints_in_shlibs): Remove.
	(unlink_locations_from_global_list): New.
	(update_breakpoint_locations): New.
	(breakpoint_re_set_one): Don't bail out on pending breakpoints.
	Use parse_condition and update_breakpoint_location to
	reset breakpoint.  Ignore 'symbol not found' error from
	decode_line_1.
	(breakpoint_re_set): Don't emit newline before the
	reason why breakpoint is not reset.
	(do_enable_breakpoint): Don't specially process pending
	breakpoints.
	(free_bp_location): New.
	(break_command_1): For pending breakpoints, initialize
	all fields of a sal with zeroes.
	* breakpoint.h (re_enable_breakpoints_in_shlibs): Remove.
	* infcmd.c (post_create_inferior): Don't call
	re_enable_breakpoints_in_shlibs.
	* infrun.c (handle_inferior_event): Likewise.
	* solib-irix.c (irix_solib_create_inferior_hook): Likewise.
	* solib-osf.c (osf_solib_create_inferior_hook): Likewise.
	* win32-nat.c (get_win32_debug_event): Likewise.

	gdb/testsuite/
	* gdb.base/pending.exp: No longer expect "Pending breakpoint resolved"
	messages.
	* gdb.base/chng-syms.exp: Likewise.
	* gdb.base/unload.exp: Likewise.

2007-09-04  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	2007-09-04  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/gdbserver/
	* linux-low.c (linux_wait_for_event): Do not pass signals while
	single-stepping.

2007-09-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (GDB printf %p): New release note.

	Backport:
	2007-09-04  Daniel Jacobowitz  <dan@codesourcery.com>
	* printcmd.c (printf_command): Handle ptr_arg.  Correct typo
	in internal error message.

	2007-09-04  Daniel Jacobowitz  <dan@codesourcery.com>
	* gdb.base/display.exp: Add tests for printf %p.

2007-09-03  Jim Blandy  <jimb@codesourcery.com>

	Merge from FSF.
	* release-notes-csl.xml (GDB update): Mention update.

2007-09-02  Jim Blandy  <jimb@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (MIPS Features, PowerPC Features): Add @node
	directives, for makeinfo.

2007-08-31  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* event-top.c (handle_sigint): Ignore
	immediate_quite on windows.

2007-08-30  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* inline-frame.c (block_starting_point_at): New.
	(set_skipped_inline_frames): Use it.
	* symtab.c (skip_prologue_using_sal): Ignore line numbers from
	inlined functions.
	* Makefile.in (inline-frame.o): Update.

	gdb/testsuite/
	* gdb.opt/inline-cmds.exp: Use list in case the first line of the function
	is the target.  Check the value of x instead of y.  Handle more
	code motion possibilities.

2007-08-29  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #1793
	gdb/testsuite/
	* gdb.opt/inline-cmds.exp: Allow address load before func1.

2007-08-27  Mark Shinwell  <shinwell@codesourcery.com>

	Backport from CSL binutils trunk:

	bfd/
	* archures.c (bfd_mach_mips_loongson_2e): New.
	(bfd_mach_mips_loongson_2f): New.
	* bfd-in2.h (bfd_mach_mips_loongson_2e): New.
	(bfd_mach_mips_loongson_2f): New.
	* cpu-mips.c: Add I_loongson_2e and I_loongson_2f to
	anonymous enum.
	(arch_info_struct): Add Loongson-2E and Loongson-2F entries.
	* elfxx-mips.c (_bfd_elf_mips_mach): Handle Loongson-2E
	and Loongson-2F flags.
	(mips_set_isa_flags): Likewise.
	(mips_mach_extensions): Add Loongson-2E and Loongson-2F
	entries.

	include/elf/
	* mips.h (E_MIPS_MACH_LS2E): New.
	(E_MIPS_MACH_LS2F): New.

	include/opcode/
	* mips.h (INSN_LOONGSON_2E): New.
	(INSN_LOONGSON_2F): New.
	(CPU_LOONGSON_2E): New.
	(CPU_LOONGSON_2F): New.
	(OPCODE_IS_MEMBER): Update for Loongson-2E and -2F flags.

	opcodes/
	* mips-dis.c (mips_arch_choices): Add Loongson-2E and -2F
	entries.
	* mips-opc.c (IL2E): New.
	(IL2F): New.
	(mips_builtin_opcodes): Add Loongson-2E and -2F instructions.
	Allow movz and movn for Loongson-2E and -2F.  Add movnz entry.
	Move coprocessor encodings to the end of the table.  Allow
	certain MIPS V .ps instructions on the Loongson-2E and -2F.

2007-08-27  Mark Shinwell  <shinwell@codesourcery.com>

	Backport from CSL binutils trunk:

	include/opcode/
	* mips.h (INSN_ISA*): Redefine certain values as an
	enumeration.  Update comments.
	(mips_isa_table): New.
	(ISA_MIPS*): Redefine to match enumeration.
	(OPCODE_IS_MEMBER): Modify to correctly test new INSN_ISA*
	values.

	opcodes/
	* mips-opc.c (I3_32, I3_33, I4_32, I4_33, I5_33): New.
	(mips_builtin_opcodes): Use these new I* values.

2007-08-22  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (create_breakpoint): Remove the
	use of stale 'sals' variable.

2007-08-22  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (create_breakpoint): Split from
	create_breakpoints, implementing most of its logic.
	Take just a single sal, single address string and
	single condition.  Do not take parsed condition at
	all.
	(create_breakpoints): Just call create_breakpoint
	for each sal.
	(find_condition_and_thread): New.
	(break_command_1): Use find_condition_and_thread.
	Do not keep parsed conditions.
	(do_captured_breakpoint): Don't convert
	condition string to struct expression.

2007-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* mips-tdep.c (mips_gdbarch_init): Use Tag_GNU_MIPS_ABI_FP to
	determine the file's FPU type.

	include/elf/
	Backport:
	2007-06-29  Joseph Myers  <joseph@codesourcery.com>
	* mips.h (Tag_GNU_MIPS_ABI_FP): Define.

2007-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/callfuncs.exp (do_function_calls): Use t_double_int
	and t_int_double.
	* gdb.base/callfuncs.c (t_double_int, t_int_double): New.

	gdb/
	* mips-tdep.c (mips_n32n64_fp_arg_chunk_p): New.
	(mips_n32n64_push_dummy_call): Always increment float_argreg along
	with argreg.  Use mips_n32n64_fp_arg_chunk_p.

2007-08-20  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.h (struct breakpoint): Move the cond
	file to...
	(struct bp_location): Here.
	* breakpoint.c: Adjust.
	* tui/tui-winsource.c: Adjust.

2007-08-17  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.h (breakpoint_at): Change type
	to bp_location*.
	* breakpoint.c (bpstat_alloc): Take bp_location,
	not breakpoint.
	(bpstat_find_breakpoint): Look at bpstat's location's
	owner, not at bpstat->breakpoint_at.
	(bpstat_find_step_resume_breakpoint): Likewise.
	(bpstat_num): Likewise.
	(print_it_typical): Likewise.
	(print_bp_stop_message): Likewise.
	(watchpoint_check): Likewise.
	(bpstat_what): Likewise.
	(bpstat_get_triggered_catchpoints): Likewise.
	(breakpoint_auto_delete): Likewise.
	(delete_breakpoint): Likewise.
	(bpstat_stop_status): Pass location, not breakpoint,
	to bpstat_alloc.  Look at bpstat's location's
	owner, not at bpstat->breakpoint_at.

2007-08-17  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (bpstat_free): New.
	(bpstat_clear): Use bpstat_free.
	(delete_breakpoint): Document why we cannot
	remove bpstats from stop_bpstat.
	* breakpoint.h (bpstat_free): Declare.

2007-08-16  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Also mention linker warnings.

2007-08-16  Joseph Myers  <joseph@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	include/
	* floatformat.h (struct floatformat): Add split_half field.
	(floatformat_ibm_long_double): New.

	libiberty/
	* floatformat.c (mant_bits_set): New.
	(floatformat_to_double): Use it.  Note no special handling of
	split formats.
	(floatformat_from_double): Note no special handing of split
	formats.
	(floatformat_ibm_long_double_is_valid,
	floatformat_ibm_long_double): New.
	(floatformat_ieee_single_big, floatformat_ieee_single_little,
	floatformat_ieee_double_big, floatformat_ieee_double_little,
	floatformat_ieee_double_littlebyte_bigword, floatformat_vax_f,
	floatformat_vax_d, floatformat_vax_g, floatformat_i387_ext,
	floatformat_m68881_ext, floatformat_i960_ext,
	floatformat_m88110_ext, floatformat_m88110_harris_ext,
	floatformat_arm_ext_big, floatformat_arm_ext_littlebyte_bigword,
	floatformat_ia64_spill_big, floatformat_ia64_spill_little,
	floatformat_ia64_quad_big, floatformat_ia64_quad_little): Update
	for addition of split_half field.

	gdb/
	* gdbtypes.c (floatformats_ibm_long_double): New.
	* gdbtypes.h (floatformats_ibm_long_double): Declare.
	* ia64-tdep.c (floatformat_ia64_ext): Update for addition of
	split_half field.
	* mips-tdep.c (n32n64_floatformat_always_valid,
	floatformat_n32n64_long_double_big, floatformats_n32n64_long):
	Remove.
	(mips_gdbarch_init): Use floatformats_ibm_long_double instead of
	floatformats_n32n64_long.
	* ppc-linux-tdep.c (ppc_linux_init_abi): Use 128-bit IBM long
	double.
	* doublest.c (convert_floatformat_to_doublest,
	convert_doublest_to_floatformat): Handle split floating-point
	formats.
	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call): Handle IBM long
	double arguments.
	(ppc64_sysv_abi_push_dummy_call): Likewise.  Right-align struct values
	smaller than one doubleword; left-align those larger.  Pass structs
	containing a single floating-point value in registers.
	(do_ppc_sysv_return_value): Handle IBM long double return.

2007-08-16  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Add a release note for Power binary tag
	support.

	include/elf/
	* ppc.h (Tag_GNU_Power_ABI_Vector): New.

	gdb/
	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call): Check the
	selected vector ABI.
	(do_ppc_sysv_return_value): Likewise.
	* ppc-tdep.h (enum powerpc_vector_abi): New.
	(struct gdbarch_tdep): Add vector_abi.
	* rs6000-tdep.c (powerpc_vector_strings, powerpc_vector_abi_global)
	(powerpc_vector_abi_string, powerpc_set_vector_abi): New.
	(rs6000_gdbarch_init): Select a vector ABI.
	(_initialize_rs6000_tdep): Add "set powerpc vector-abi".

	gdb/doc/
	* gdb.texinfo (PowerPC): Document "set powerpc vector-abi".

2007-08-14  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (disable_breakpoints_in_shlibs): Remove
	the 'silent' parameter and code to implement that.
	* breakpoint.h (disable_breakpoints_in_shlibs): Adjust
	prototype.
	* win32-nat.c: Adjust.
	* solib.c: Adjust.

2007-08-14  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c (update_breakpoints_after_exec): Don't
	set address to zero.

2007-08-13  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* config/default.exp: New file.

2007-07-27  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.threads/staticthreads.exp: Match .*sem_post.
	* gdb.base/chng-syms.exp: Match .*exit.

2007-07-27  Kazu Hirata  <kazu@codesourcery.com>

	gdb/
	* Makefile.in (m68k-tdep.o): Add $(user_regs_h).
	* m68k-tdep.c: Include user-regs.h.

2007-07-27  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/readline.exp (operate_and_get_next): Match the final
	prompt.

2007-07-25  Mark Mitchell  <mark@codesourcery.com>

	gdb/
	* mingw-hdep.c (gdb_select): Stop helper threads before returning.
	* ser-mingw.c (enum select_thread_state): New type.
	(struct ser_console_state): Add have_started and thread_state.
	(select_thread_wait): New function.
	(thread_fn_type): New type.
	(create_select_thread): New function.
	(destroy_select_thread): Likewise.
	(start_select_thread): Likewise.
	(stop_select_thread): Likewise.
	(console_select_thread): Use new functions.
	(pipe_select_thread): Likewise.
	(file_select_thread): Likewise.
	(ser_console_wait_handle): Likewise.
	(ser_console_done_wait_handle): Likewise.
	(ser_console_close): Likewise.
	(free_pipe_state): Likewise.
	(pipe_wait_handle): Likewise.
	(pipe_done_wait_handle): Likewise.
	(struct net_windows_state): Derive from ser_console_state.
	(net_windows_select_thread): Use new functions.
	(net_windows_wait_handle): Likewise.
	(net_windows_done_wait_handle): Likewise.
	(net_windows_close): Likewise.

2007-07-26  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call): Check
	tdep->soft_float.
	(do_ppc_sysv_return_value): Likewise.  Clean up casts.
	(ppc64_sysv_abi_push_dummy_call): Add a floating point assertion.
	* ppc-tdep.h (struct gdbarch_tdep): Add soft_float flag.
	* rs6000-tdep.c (setpowerpccmdlist, showpowerpccmdlist)
	(powerpc_soft_float_global): New.
	(rs6000_gdbarch_init): Check ELF attributes for soft float.  Verify
	soft float when checking candidate architectures.
	(set_powerpc_command, show_powerpc_command): New.
	(powerpc_set_soft_float): New.
	(_initialize_rs6000_tdep): Add "set powerpc soft-float".

	gdb/doc/
	* gdb.texinfo (PowerPC): Document "set powerpc soft-float".  Correct a
	typo.

2007-07-26  Joseph Myers  <joseph@codesourcery.com>

	Backport from FSF:

	bfd/
	* elf-attrs.c: New.
	* Makefile.am (BFD32_BACKENDS): Add elf-attrs.lo.
	(BFD32_BACKENDS_CFILES): Add elf-attrs.c.
	(elf-attrs.lo): Generate dependencies.
	* Makefile.in: Regenerate.
	* configure.in (elf): Add elf-attrs.lo.
	* configure: Regenerate.
	* elf-bfd.h (struct elf_backend_data): Add entries for object
	attributes.
	(NUM_KNOWN_OBJ_ATTRIBUTES, obj_attribute, obj_attribute_list,
	OBJ_ATTR_PROC, OBJ_ATTR_GNU, OBJ_ATTR_FIRST, OBJ_ATTR_LAST,
	Tag_NULL, Tag_File, Tag_Section, Tag_Symbol, Tag_compatibility):
	New.
	(struct elf_obj_tdata): Add entries for object attributes.
	(elf_known_obj_attributes, elf_other_obj_attributes,
	elf_known_obj_attributes_proc, elf_other_obj_attributes_proc):
	New.
	(bfd_elf_obj_attr_size, bfd_elf_set_obj_attr_contents,
	bfd_elf_get_obj_attr_int, bfd_elf_add_obj_attr_int,
	bfd_elf_add_proc_attr_int, bfd_elf_add_obj_attr_string,
	bfd_elf_add_proc_attr_string, bfd_elf_add_obj_attr_compat,
	bfd_elf_add_proc_attr_compat, _bfd_elf_attr_strdup,
	_bfd_elf_copy_obj_attributes, _bfd_elf_obj_attrs_arg_type,
	_bfd_elf_parse_attributes, _bfd_elf_merge_object_attributes): New.
	* elf.c (_bfd_elf_copy_private_bfd_data): Copy object attributes.
	(bfd_section_from_shdr): Handle attributes sections.
	* elflink.c (bfd_elf_final_link): Handle attributes sections.
	* elfxx-target.h (elf_backend_obj_attrs_vendor,
	elf_backend_obj_attrs_section, elf_backend_obj_attrs_arg_type,
	elf_backend_obj_attrs_section_type): New.
	(elfNN_bed): Update.
	* elf32-arm.c (NUM_KNOWN_ATTRIBUTES, aeabi_attribute,
	aeabi_attribute_list): Remove.
	(struct elf32_arm_obj_tdata): Remove object attributes fields.
	(check_use_blx, bfd_elf32_arm_set_vfp11_fix, using_thumb2,
	elf32_arm_copy_private_bfd_data, elf32_arm_merge_eabi_attributes):
	Update for new object attributes interfaces.
	(uleb128_size, is_default_attr, eabi_attr_size,
	elf32_arm_eabi_attr_size, write_uleb128, write_eabi_attribute,
	elf32_arm_set_eabi_attr_contents, elf32_arm_bfd_final_link,
	elf32_arm_new_eabi_attr, elf32_arm_get_eabi_attr_int,
	elf32_arm_add_eabi_attr_int, attr_strdup,
	elf32_arm_add_eabi_attr_string, elf32_arm_add_eabi_attr_compat,
	copy_eabi_attributes, elf32_arm_parse_attributes): Remove.  Moved
	to generic code in elf-attrs.c.
	(elf32_arm_obj_attrs_arg_type): New.
	(elf32_arm_fake_sections): Do not handle .ARM.attributes.
	(elf32_arm_section_from_shdr): Do not handle SHT_ARM_ATTRIBUTES.
	(bfd_elf32_bfd_final_link): Remove.
	(elf_backend_obj_attrs_vendor, elf_backend_obj_attrs_section,
	elf_backend_obj_attrs_arg_type,
	elf_backend_obj_attrs_section_type): New.
	* elf32-bfin.c (bfin_elf_copy_private_bfd_data): Copy object
	attributes.
	* elf32-frv.c (frv_elf_copy_private_bfd_data): Likewise.
	* elf32-iq2000.c (iq2000_elf_copy_private_bfd_data): Likewise.
	* elf32-mep.c (mep_elf_copy_private_bfd_data): Likewise.
	* elf32-mt.c (mt_elf_copy_private_bfd_data): Likewise.
	* elf32-sh.c (sh_elf_copy_private_data): Likewise.
	* elf64-sh64.c (sh_elf64_copy_private_data_internal): Likewise.

	include/elf/
	* arm.h (elf32_arm_add_eabi_attr_int,
	elf32_arm_add_eabi_attr_string, elf32_arm_add_eabi_attr_compat,
	elf32_arm_get_eabi_attr_int, elf32_arm_set_eabi_attr_contents,
	elf32_arm_eabi_attr_size, Tag_NULL, Tag_File, Tag_Section,
	Tag_Symbol, Tag_compatibility): Remove.
	* common.h (SHT_GNU_ATTRIBUTES): Define.
	* ppc.h (Tag_GNU_Power_ABI_FP): Define.

2007-07-25  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Document inlining fix.

	gdb/
	* blockframe.c (get_frame_block): Do not count skipped frames for
	non-innermost frames.

2007-07-23  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (rs6000-tdep.o): Update.
	* rs6000-tdep.c: Include "user-regs.h".

2007-07-10  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Add a note for static thread debugging
	fixes.

	Backport:
	2007-06-27  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* linux-thread-db.c (thread_db_attach): Delete.
	(thread_db_detach): Typo fix.  Call target_mourn_inferior
	instead of fixing up proc_handle.
	(have_threads_callback, have_threads): New functions.
	(thread_db_wait): Remove dead proc_handle.pid check.  Only
	translate PTIDs if we have registered threads.  Check for new
	threads if we have none.
	(thread_db_create_inferior, thread_db_post_startup_inferior): Delete.
	(find_new_threads_callback): Only enable event reporting if TID == 0.
	(same_ptid_callback): New.
	(thread_db_get_thread_local_address): Check for new threads.
	(init_thread_db_ops): Don't set to_attach, to_create_inferior,
	or to_post_startup_inferior.

	gdb/gdbserver/
	* thread-db.c (thread_db_find_new_threads): Add prototype.
	(thread_db_create_event): Check for the main thread before adding
	a new thread.
	(maybe_attach_thread): Only enable event reporting if TID == 0.
	(thread_db_get_tls_address): Check for new threads.

2007-07-10  Kazu Hirata  <kazu@codesourcery.com>

	Issue 1775
	gdb/
	* m68k-tdep.c (value_of_m68k_user_reg, mbb_regname): New.
	(m68k_gdbarch_init): Register a user register "mbb".

	opcodes/
	* m68k-dis.c (print_insn_arg): Use %mbo instead of %mbb.

2007-06-29  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml: Add a note for Altivec and SPE support.

	gdb/doc/
	* gdb.texinfo (Predefined Target Types): Add int128 and uint128.
	(PowerPC Features): New subsection.

	gdb/
	* ppc-tdep.h: Add constants for PowerPC register numbers.
	* rs6000-tdep.c (rs6000_tdesc_register_name): New.
	(rs6000_tdesc_register_type): New.
	(rs6000_register_reggroup_p): Do not save or restore pseudo regs.
	(rs6000_register_to_value): Use ppc_fp0_regnum instead of struct reg.
	(rs6000_value_to_register, rs6000_frame_base_sniffer): Remove
	assertions.
	(value_of_ppc_user_reg): New.
	(rs6000_gdbarch_init): Check for target described registers.  Compare
	target wordsize to binary wordsize.  Adjust register numbering if the
	target specified registers.
	* target-descriptions.c (tdesc_named_type): Handle int128 and uint128.
	(tdesc_find_register_early): New.
	(tdesc_numbered_register, tdesc_unnumbered_register): Use it.
	(tdesc_register_size): New.
	* target-descriptions.h (tdesc_register_size): Declare.
	* NEWS: Mention PowerPC and M68K register description support.
	* Makefile.in (rs6000-tdep.o): Update.
	* features/power-altivec.xml, features/power-with-spe.xml,
	features/power64-core.xml, features/power64-with-altivec.xml,
	features/power-spe.xml, features/power-core.xml,
	features/power-fpu.xml, features/power-with-altivec.xml: New.
	* features/Makefile (WHICH): Add PowerPC files.
	(power-with-altivec-expedite, power-with-spe-expedite)
	(power64-with-altivec-expedite): New.
	* regformats/power-with-altivec.dat, regformats/power-with-spe.dat,
	regformats/power64-with-altivec.dat: Generate.

	gdb/testsuite/
	* gdb.xml/tdesc-regs.exp: Add powerpc*-*-*.

	gdb/gdbserver/
	* Makefile.in (clean): Remove new files.
	(power-with-altivec.o, power-with-altivec.c, power-with-spe.o)
	(power-with-spe.c, power64-with-altivec.o, power64-with-altivec.c): New
	rules.
	* configure.srv: Add SPE and Altivec support for PowerPC.
	* linux-ppc-low.c (ppc_regmap): Do not mention FPRs when SPE is
	configured.
	(ppc_cannot_store_register): Do not check fpscr for SPE.
	(PTRACE_GETVRREGS, PTRACE_SETVRREGS, SIZEOF_VRREGS, ppc_fill_vrregset)
	(ppc_store_vrregset, PTRACE_GETEVRREGS, PTRACE_SETEVRREGS)
	(struct gdb_evrregset_t, ppc_fill_evrregset, ppc_store_evrregset): New.
	(target_regsets): Add Altivec and SPE regsets.
	* configure.ac: Test for Altivec and SPE.
	* linux-ppc64-low.c (PTRACE_GETVRREGS, PTRACE_SETVRREGS, SIZEOF_VRREGS)
	(ppc_fill_vrregset, ppc_store_vrregset): New.
	(target_regsets): Add Altivec regset.
	* configure: Regenerated.

2007-06-27  Richard Sandiford  <richard@codesourcery.com>

	sim/mips/
	* configure.ac, configure: Revert last patch.

2007-06-26  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:

	sim/mips/
	2007-06-26  Richard Sandiford  <richard@codesourcery.com>

	* configure.ac (sim_mipsisa3264_configs): New variable.
	(mipsis32*-*-, mipsisa32r2*-*-*, mips64*-*-*, mips64r2*-*-*): Make
	every configuration support all four targets, using the triplet to
	determine the default.
	* configure: Regenerate.

2007-06-25  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:

	sim/mips/
	2007-06-25  Richard Sandiford  <richard@codesourcery.com>

	* Makefile.in (m16_run.o): New rule.

2007-06-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.opt/inline-cmds.c (main): Mark the start brace with a comment.
	Encourage later breakpoints to be after the function calls.
	* gdb.opt/inline-locals.c (func1): Keep arg1 live until after the
	call.
	* gdb.opt/inline-cmds.exp: Allow two extra patterns when stepping.

2007-06-22  Daniel Jacobowitz  <dan@codesourcery.com>

	* serial.c (serial_for_ops): Use XCALLOC.  Allow NULL name.
	(serial_open): Use serial_free.
	(serial_fdopen): Use serial_for_ops.
	(serial_free): New.
	(do_serial_close): Use serial_free.

2007-06-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from FSF:
	gdb/gdbserver/
	* linux-low.c (linux_create_inferior): Try execv before execvp.
	* spu-low.c (spu_create_inferior): Likewise.

2007-06-20  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.
	* release-notes-csl.xml (GDB update): Update.

2007-06-20  Paul Gilliam  <pgilliam@us.ibm.com>
	    Thiago Bauermann  <bauerman@br.ibm.com>
	    Joseph S. Myers  <joseph@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (remote_check_symbols): Use
	gdbarch_convert_from_func_ptr_addr.
	* infcall.c (find_function_addr): Handle function descriptors
	without debugging information.
	* ppc-linux-tdep.c (ppc_linux_convert_from_func_ptr_addr): Renamed
	from ppc64_linux_convert_from_func_ptr_addr.  Handle -msecure-plt.
	(ppc_linux_init_abi): Always set convert_from_func_ptr_addr.
	* solib-svr4.c (solib_break_names): Remove "._dl_debug_state".
	(bfd_lookup_symbol): Do not take a SECT_FLAGS argument.  Always
	allow SEC_CODE and SEC_DATA.
	(enable_break): Update calls.  Pass current_target to solib_add.
	Use gdbarch_convert_from_func_ptr_addr.

	gdb/gdbserver/
	* remote-utils.c (look_up_one_symbol): Handle 'm' packets.

2007-06-19  Carlos O'Donell  <carlos@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Remote Protocol): Add "Standard Replies" to
	menu.
	(Overview): Use @r{]}.

2007-06-13  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	* remote.c (remote_escape_output, remote_unescape_input): Move
	earlier in the file.
	(error_from_remote): New function.
	(remote_wait, remote_async_wait): Report error responses using
	error_from_remote, instead of just reporting a warning.

	gdb/doc/
	* gdb.texinfo (Overview): Document conventions for describing
	packet syntax here.
	(Standard Replies): New section.
	(Packets, General Query Packets, Tracepoint Packets): Remove
	explicit mention of empty and error replies, except when they
	provide detail not covered in Standard Replies.

2007-06-14  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* serial.h (struct serial_ops): Forward declare.

2007-06-11  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* configure.ac (--with-relocated-sources): New.
	* configure, config.in: Regenerate.
	* source.c (add_substitute_path_rule): Remove static.
	* source.h (add_substitute_path_rule): Declare.
	* main.c: Include "source.h".
	(captured_main): Add substitution rule if RELOC_SRCDIR.

2007-06-07  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* addrmap.c (addrmap_splay_tree_remove): New.
	(addrmap_mutable_set_empty): Use it.

2007-06-07  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.
	* release-notes-csl.xml (GDB update): Update.

2007-06-07  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* serial.c (serial_for_ops): New.
	(serial_open): Use serial_for_ops.
	(do_serial_close): Close error serial,
	if necessary.
	* serial.h (serial_for_ops): New.
	(struct_serial): Remove error_fd field and
	add error_scb field.
	* ser-pipe.c (struct pipe_state): New field
	is_stderr.
	(pipe_open): Create serial for reading stderr.
	(pipe_close): Special-case closing stderr
	serial.
	* ser-base.c (read_and_print): New.
	(ser_base_wait_for): If serial has an associated
	error serial, wait on both.
	(generic_readchar): Use read_and_print.
	* ser-mingw.c (struct pipe_state): New field
	is_stderr.
	(pipe_windows_open): Create serial for stderr.
	(pipe_windows_close): Drain stdout and stderr
	before closing.

2007-06-07  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #1698
	gdb/
	* target-memory.c (blocks_to_erase): Correct off-by-one error.

2007-06-06  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_push_dummy_call): Correct padding of partial
	registers for big-endian.

2007-06-04  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (SFILES): Add inline-frame.c.
	(COMMON_OBS): Add inline-frame.o.
	(dwarf2loc.o, frame.o): Update.
	(inline-frame.o): New rule.
	* ada-lang.c (remove_out_of_scope_renamings): Use
	block_linkage_function.
	(ada_find_any_type): Likewise.
	(ada_unhandled_exception_name_addr_from_r): Use get_current_user_frame.
	(print_it_exception): Likewise.
	* block.c (contained_in): Rewrite to use lexical nesting.
	(block_linkage_function): Renamed from block_function.  Skip inlined
	function blocks.
	(block_inlined_p): New.
	(allocate_block): Initialize BLOCK_INLINED.
	* block.h (struct block): Add inlined flag.
	(BLOCK_INLINED): Define.
	(block_linkage_function): Renamed from block_function.
	(block_inlined_p): New prototype.
	* blockframe.c (get_frame_block): Handle inlined functions.
	(get_pc_function_start): Use block_linkage_function.
	(get_frame_function): Do not use block_function.
	(find_pc_sect_function): Use block_linkage_function.
	(block_innermost_frame): Use get_current_user_frame, get_frame_block,
	and contained_in.
	* breakpoint.c (watchpoint_check): Remove extra reinit_frame_cache.
	Skip over inlined functions.  Simplify epilogue check.
	(bpstat_stop_status): Use frame_id_stack_eq and get_current_user_frame.
	(resolve_sal_pc): Use block_linkage_function.
	(watch_command_1): Handle inlined functions.  Use frame_pc_unwind
	and frame_unwind_id.
	(until_break_command): Likewise.
	* buildsym.c (end_symtab): Set SYMBOL_SYMTAB for block functions.
	* dwarf2loc.c (dwarf_expr_frame_base): Use block_linkage_function.
	* dwarf2read.c (process_die): Handle DW_TAG_inlined_subroutine.
	(read_func_scope, new_symbol): Likewise.  Handle arguments specially
	for inlined functions without call site information.
	(die_specification): Treat DW_AT_abstract_origin as a specification.
	* findvar.c (read_var_value): Remove unused variable.
	* frame-unwind.c (frame_unwind_init): Add inline_frame_unwind.
	* frame-unwind.h (inline_frame_unwind): Declare.
	* frame.c (fprint_frame_id): Print inline depth and block start.
	(fprint_frame_type): Handle INLINE_FRAME and SENTINEL_FRAME.
	(frame_id_eq_1): Broken out from frame_id_eq.  Make the logic match
	the comments.
	(frame_id_eq): Use it.  Check the inline depth and block address.
	(frame_id_stack_eq): New.
	(frame_id_inner): Handle inlined functions.
	(frame_find_by_id): Use get_current_user_frame.
	(get_current_user_frame, get_real_frame): New.
	(get_current_frame): Use get_real_frame.
	(get_selected_frame): Use get_current_user_frame.
	(get_prev_frame_1): Check for inline frames.  Split out frame
	allocation to get_prev_frame_raw.
	(get_prev_frame_raw): New function.
	(get_prev_frame): Handle inline frames.
	(frame_unwind_address_in_block): Likewise, and correct typo.
	(pc_notcurrent): Delete.
	(find_frame_sal): Rewrite to handle inline call sites.  Use
	get_frame_address_in_block.
	(deprecated_update_frame_pc_hack): Make static.
	* frame.h (struct frame_id): Add inline_depth and block_addr.
	(frame_id_stack_eq, get_current_user_frame): New prototypes.
	(enum frame_type): Add INLINE_FRAME.
	(deprecated_update_frame_pc_hack): Delete prototype.
	(set_skipped_inline_frames, step_into_inline_frame)
	(inline_skipped_frames, inline_skipped_symbol): New prototypes.
	* infcall.c (call_function_by_hand): Do not pop the frame.
	* infcmd.c (set_step_frame): New.
	(step_1): Use step_once in both cases.
	(step_once): Use set_step_frame.  Handle inlined functions and
	non-async targets.
	(until_next_command): Use set_step_frame.
	(finish_command): Handle inlined functions.
	* inferior.h (set_step_info): New prototype.
	* infrun.c (step_current_symtab, step_current_line): New statics.
	(struct execution_control_state): Remove them from here.
	(set_step_info): New.
	(init_execution_control_state): Make static.  Do not set the symtab
	or line.
	(context_switch): Update.
	(stepped_in_from): New.
	(handle_inferior_event): Handle inlined functions.  Delete some dead
	code.
	(normal_stop): Do not call deprecated_update_frame_pc_hack.  Use
	get_current_user_frame and get_selected_frame.
	(restore_inferior_status): Use get_current_user_frame.
	* inline-frame.c: New.
	* mi/mi-cmd-stack.c (mi_cmd_stack_list_frames): Use
	get_current_user_frame.
	(mi_cmd_stack_info_depth, mi_cmd_stack_list_args): Likewise.
	* s390-tdep.c (s390_prologue_frame_unwind_cache): Handle INLINE_FRAME.
	* ser-base.c (reschedule): Fix initial connection for async targets.
	(generic_readchar): Likewise.
	* stack.c (frame_show_address): New.
	(print_frame_info): Use it.
	(print_frame): Likewise.  Use get_frame_function.  Handle inlined
	blocks.
	(parse_frame_specification_1): Use get_current_user_frame.
	(frame_info): Likewise.  Mark inlined functions.
	(backtrace_command_1): Use get_current_user_frame.
	(print_frame_local_vars, print_frame_label_vars): Update comments.
	(return_command): Refuse inlined functions.
	* symtab.c (lookup_symbol_aux_local): Stop at inlined function
	boundaries.
	(find_function_start_sal): Avoid inlined functions.
	(completion_list_add_fields): New.
	(make_symbol_completion_list): Use it.  Use block_static_block
	and block_global_block.  Check for inlined functions.
	* symtab.h (struct symbol): Update comment.
	* thread.c (thread_apply_all_command): Use get_selected_frame.
	(thread_apply_command): Likewise.
	* tracepoint.c (trace_find_line_command): Likewise.
	* valops.c (value_of_variable): Check block_inlined_p.

	gdb/testsuite/
	* Makefile.in (ALL_SUBDIRS): Add gdb.opt.
	* configure: Regenerated.
	* configure.ac (AC_OUTPUT): Add gdb.opt/Makefile.
	* gdb.opt/Makefile.in, gdb.opt/inline-bt.c, gdb.opt/inline-bt.exp,
	gdb.opt/inline-cmds.c, gdb.opt/inline-cmds.exp,
	gdb.opt/inline-locals.c, gdb.opt/inline-locals.exp: New.
	* lib/gdb.exp (skip_inline_frame_tests): New.
	(skip_inline_var_tests): New.

	./
	* release-notes-csl.xml: Document inlined function support.

	gdb/doc/
	* gdb.texinfo (Debugging Optimized Code): New chapter.
	(Compiling for Debugging): Reference it.  Move some
	text to the new section.

2007-06-02  Kazu Hirata  <kazu@codesourcery.com>

	Issues 1637 and 1655
	gdb/
	* doc/gdb.texinfo: Mention that inaccessible-by-default is on
	by default.
	* memattr.c (inaccessible_by_default): Change the initial
	value to 1.

	* release-notes-csl.xml: Mention the new default for
	inaccessible-by-default.

2007-05-24  Daniel Jacobowitz  <dan@codesourcery.com>

	* release-notes-csl.xml (GDB update): New.

2007-05-24  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* configure.tgt (i[34567]86-*-linux*): Use linux64 target if
	--enable-64-bit-bfd.

2007-05-23  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

2007-05-23  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* lib/gdbserver-support.exp (gdbserver_spawn): Only match full_buffer.
	(gdbserver_run): Kill any running gdbserver.
	* lib/mi-support.exp (mi_gdb_target_load): Likewise.

2007-05-23  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/ending-run.exp: Correct regexp for cs3.

2007-05-23  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	Backport:
	2007-05-23  Daniel Jacobowitz  <dan@codesourcery.com>
	* breakpoint.h (enum bpstat_what_main_action): Remove
	BPSTAT_WHAT_THROUGH_SIGTRAMP.
	* infrun.c (process_event_stop_test): Do not check for it.

2007-05-22  Carlos O'Donell  <carlos@codesourcery.com>

	* Makefile.tpl: Add install-pdf to install target deps.
	* Makefile.in: Regenerate.

2007-05-22  Carlos O'Donell  <carlos@codesourcery.com>

	gdb/
	* configure.ac: AC_SUBST datarootdir, docdir, htmldir, pdfdir.
	* Makefile.in: Set datarootdir, docdir, htmldir, and pdfdir.
	(FLAGS_TO_PASS): Add datarootdir, docdir, and htmldir.
	(MAKEHTML): Set to makeinfo --html.
	(MAKEHTMLFLAGS): Set to empty.
	(html__strip_dir): Define.
	(HTMLFILES): Define.
	(HTMLFILES_INSTALL): Define.
	(install-html): Copy new automake rule.
	* doc/Makefile.in: Set pdfdir and htmldir.
	(MAKEHTML): Set to makeinfo --html.
	(MAKEHTMLFLAGS): Set to empty.
	* doc/annotate.texinfo: Use ifnottex.
	* doc/stabs.texinfo: Likewise.
	* doc/configure.ac: AC_SUBST datarootdir, docdir, htmldir,
	pdfdir.
	* doc/configure: Regenerate.
	* configure: Regenerate.

2007-05-22  Carlos O'Donell  <carlos@codesourcery.com>

	sim/
	* Makefile.in: Add dummy install-pdf, html, and
	install-html targets.

	readline/
	* Makefile.in: Add dummy install-html and install-pdf
	targets.

2007-05-22  Carlos O'Donell  <carlos@codesourcery.com>

	bfd/
	* configure.in: ACSUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am
	and install-pdf-recursive targets. Define pdfdir.
	* doc/Makefile.am: Define pdf__strip_dir. Add
	install-pdf and install-pdf-am targets.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate
	* doc/Makefile.in: Regenerate.

	etc/
	* configure.in: ACSUBST pdfdir.
	* configure: Regenerate.

	opcodes/
	* Makefile.am: Add install-pdf target.
	* po/Make-in: Add install-pdf target.
	* Makefile.in: Regenerate.

2007-05-18  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/ending-run.exp: Extend _start function regexp.

2007-05-16  Sandra Loosemore  <sandra@codesourcery.com>

        Backport from mainline.
	2007-05-14  Thiemo Seufer  <ths@mips.com>

	sim/mips/
	* mips.igen (ALNV.PS, CEIL.L.fmt, CVT.L.fmt, CVT.PS.S, CVT.S.PL,
	CVT.S.PU, FLOOR.L.fmt, LDXC1, LUXC1, LWXC1, MADD.fmt, MSUB.fmt,
	NMADD.fmt, NMSUB.fmt, PLL.PS, PLU.PS, PREFX, PUL.PS, PUU.PS,
	RECIP.fmt, ROUND.L.fmt, RSQRT.fmt, SWXC1, TRUNC.L.fmt): Add support
	for mips32r2.

2007-05-01  Paul Brook  <paul@codesourcery.com>

	gdb/
	* m68k-tdep.c (REGISTER_BYTES_NOFP): Remove.
	(m68k_gdbarch_init): Check fido and has_fp when
	matching architectures.  Set the coldfire and
	fido fields in target-dependent data.  Set
	decr_pc_after_break to 2 only for coldfire and fido.
	* m68k-tdep.h (struct gdbarch_tdep): Add new field
	fido and clarify comment for the coldfire field.

2007-04-27  Paul Brook  <paul@codesourcery.com>

	gdb/
	* symfile.c (symfile_relocate_debug_section): Skip executable images.

2007-04-27  Paul Brook  <paul@codesourcery.com>

	gdb/
	* configure.tgt: Add arm*-*-ucliuux*.

	gdb/gdbserver/
	* linux-low.c (PTRACE_GETPROCMAP): Provide definition for ARM.
	(linux_read_offsets): Use it.
	* configure.srv: Add arm*-*-ucliuux*.

2007-04-26  Vladimir Prus  <vladimir@codesourcery.com>

	Merge from FSF trunk.

2007-04-25  Mark Mitchell  <mark@codesourcery.com>

	libiberty/
	* cygpath.c (<process.h>): Include it.
	(cygpath_log): New variable.
	(cygpath_log_msg_arg): New function.
	(cygpath_log_msg): Likewise.
	(cygpath_perror): Likewise.
	(cygpath_close): Declare as prototyped function.  Close the log
	file.
	(cygpath): Log interaction with cygpath.  If cygpath dies
	unexpectedly, restart it.
	(set_errno_from_windows_code): Avoid signed/unsigned comparison.

2007-04-19  Mark Shinwell  <shinwell@codesourcery.com>

	* release-notes-csl.xml (Debugging of signal handlers): New.

	gdb/
	* Makefile.in: Adjust dependencies of m68klinux-tdep.c.
	* m68klinux-tdep.c (m68k_uclinux_sigcontext_reg_offset): New.
	(m68k_linux_sigcontext_reg_offset): Fix typo.
	(target_is_uclinux): New.
	(m68k_linux_inferior_created): New.
	(m68k_linux_get_sigtramp_info):  Check for uClinux or
	normal Linux.  Use m68k_uclinux_sigcontext_reg_offset for
	uClinux.
	(_initialize_m68k_linux_tdep): Register
	m68k_linux_inferior_created.

2007-04-13  Paul Brook  <paul@codesourcery.com>

	* target-descriptions.c (tdesc_named_type): Add ieee_single and
	ieee_double.
	* doc/gdb.texinfo: Document ieee_single and ieee_double target types.

2007-04-12  Vladimir Prus  <vladimir@codesourcery.com>

	Fix the previous merge.
	gdb/gdbserver/
	* Makefile.in (gdbreplay): Add version.o.

2007-04-10  Vladimir Prus  <vladimir@codesourcery.com>

	Merge from FSF trunk.

2007-04-01  Vladimir Prus  <vladimir@codesourcery.com>

	libiberty/
	* cygpath.c (cygpath_close): New.
	(cygpath): Use cygpath_close.
	(rename): Call cygpath_close.
	(remove): New.
	(unlink): New.

2007-03-30  Kazu Hirata  <kazu@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_gdbarch_init): Make "long double" 64 bits
	on fido.

2007-03-30  Vladimir Prus  <vladimir@codesourcery.com>

	libiberty/
	* cygpath.c (rename): Correct the logic so that
	not report error when there is none.

2007-03-23  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	Properly compare filenames under MinGW.
	* utils.c (gdb_filename_cmp): New function.
	* defs.h (gdb_filename_cmp): New declaration.
	* dwarf2read.c (dwarf_decode_lines): Use gdb_filename_cmp, not
	strcmp, to decide when to create a new psymtab.
	* source.c (substitute_path_rule_matches)
	(find_substitute_path_rule, show_substitute_path_command)
	(unset_substitute_path_command): Change all uses of FILENAME_CMP
	to gdb_filename_cmp.
	* buildsym.c (start_subfile): Same.
	* symtab.c (lookup_symtab, lookup_partial_symtab): Same.

2007-03-23  Vladimir Prus  <vladimir@codesourcery.com>

	* gdb.mi/mi-var-child.c
	(do_children_tests): User char[2] instead of
	char so that automatic printing of pointers to char
	don't give unpredicable result.
	* gdb.mi/var-cmd.c (do_locals_test): Initialize
	local variables.
	* gdb.mi/mi-var-child.exp: Step to right line
	of do_children_tests.
	* gdb.mi/mi2-var-child.exp: Likewise.
	* gdb.mi/mi-var-cmd.exp: Step to right line of
	do_locals_tests.
	(do_children_tests): User char[2] instead of
	char so that automatic printing of pointers to char
	don't give unpredicable result.
	* gdb.mi/mi2-var-cmd.exp: Likewise.
	* lib/mi-support.exp (mi_continue_to_line):
	Pass test name to mi_wait_for_stop.

2007-03-22  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	* addrmap.c: Work even when CORE_ADDR doesn't fit in a
	splay_tree_key.
	(struct addrmap_mutable): Doc fix.  Keys are now pointers
	to CORE_ADDR values, not straight CORE_ADDR values.
	(allocate_key, addrmap_splay_tree_lookup)
	(addrmap_splay_tree_predecessor, addrmap_splay_tree_successor):
	New functions.  Use throughout, instead of the corresponding
	splay_tree_ functions.
	(addrmap_node_key): Properly fetch the CORE_ADDR.
	(addrmap_splay_tree_insert): Renamed, for consistency with above.
	Uses changed.
	(splay_compare_CORE_ADDR_ptr): Renamed from
	splay_compare_CORE_ADDR.  Compare keys as pointers to CORE_ADDRs.
	Uses changed.
	(_initialize_addrmap): Change assertion to check that a pointer to
	a CORE_ADDR fits in a splay_tree_key.

	gdb/
	* addrmap.c (splay_obstack_alloc): Assert that we're allocating
	something at least as large as a node.
	(splay_obstack_free): Doc fix.

	gdb/
	* addrmap.c (splay_tree_count): Renamed from splay_tree_counter,
	for consistency with other splay_tree_foreach callbacks.

2007-03-22  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* frame.c (frame_find_by_id): Return
	null for null frame id when target has no stack.

2007-03-22  Daniel Jacobowitz  <dan@codesourcery.com>

	sim/ppc/
	* configure.ac: Add --with-pkgversion and --with-bugurl.
	* psim.c (psim_usage): Take a HELP argument.  Print the bug URL.
	Exit with code 0 for help.
	(psim_options): Update calls to psim_usage.  Handle --help and
	--version.
	* psim.h (psim_usage): Update prototype.
	* main.c (main): Update psim_usage call.
	* Makefile.in (PKGVERSION, REPORT_BUGS_TO, VER_CFLAGS): New.
	(STD_CFLAGS, NOWARN_CFLAGS): Use $(VER_CFLAGS).
	(LIB_OBJ): Add version.o.
	(version.c, version.o): New rules.
	* configure: Regenerated.

2007-03-21  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	Merge from FSF.

2007-03-15  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	Support lexical blocks and function bodies that occupy
	non-contiguous address ranges.
	* addrmap.c, addrmap.h: New files.
	* block.h (struct addrmap): New forward declaration.
	(struct blockvector): New member, 'map'.
	(BLOCKVECTOR_MAP): New accessor macro.
	* block.c: #include "addrmap.h"
	(blockvector_for_pc_sect): If the blockvector we've found has
	an address map, use it instead of searching the blocks.
	* buildsym.c: #include "addrmap.h"
	(pending_addrmap_obstack, pending_addrmap_interesting): New static
	variables.
	(really_free_pendings): If we have a pending addrmap, free it too.
	(record_block_range): New function.
	(make_blockvector): If we have an interesting pending addrmap,
	record it in the new blockvector.
	(start_symtab, buildsym_init): Assert that there is no pending
	addrmap now; we should have cleaned up any addrmaps we'd built
	previously.
	(end_symtab): If there is a pending addrmap left over that didn't
	get included in the blockvector, free it.
	* buildsym.h (struct addrmap): New forward declaration.
	(record_block_range): New prototype.
	* objfiles.c: #include "addrmap.h".
	(objfile_relocate): Relocate the blockvector's address map, if
	present.
	* dwarf2read.c (dwarf2_record_block_ranges): New function.
	(read_func_scope, read_lexical_block_scope): Call it.
	* Makefile.in (SFILES): Add addrmap.c.
	(addrmap_h): New header dependency variable.
	(COMMON_OBS): Add addrmap.o.
	(addrmap.o): New rule.
	(block.o, objfiles.o, buildsym.o): Depend on $(addrmap_h).

	gdb/
	* block.c (blockvector_for_pc, blockvector_for_pc_sect): Return a
	pointer to the block, not its index in the blockvector.
	(block_for_pc_sect): Use the returned block, instead of looking it
	up ourselves.
	* block.h (blockvector_for_pc, blockvector_for_pc_sect): Update
	declarations.
	* breakpoint.c (resolve_sal_pc): Use returned block, instead of
	looking it up ourselves.
	* stack.c (print_frame_label_vars): Disable function, which
	depends on the block's index.

	gdb/
	* buildsym.c (finish_block): Return the block we've built.
	* buildsym.h (finish_block): Update prototype.

	gdb/
	* defs.h (CORE_ADDR_MAX): New constant.

2007-03-14  Carlos O'Donell  <carlos@codesourcery.com>

	libiberty/
	* cygpath.c (access): Remove erroneous X_OK setting on Win32.

2007-03-02  Vladimir Prus  <vladimir@codesourcery.com>

	Issue 1230
 	libiberty/
	* cygpath.c (set_errno_from_windows_code): New.
	(rename): New.

2007-02-28  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

2007-02-22  Mark Mitchell  <mark@codesourcery.com>

	sim/arm/
	* armos.c (SWIflen): Do not treate file descriptor zero as
	special.

2007-02-09  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* regformats/reg-arm-iwmmxt.dat: Delete unused file.

2007-02-09  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* xml-tdesc.c (space_group_children): Add terminating entry.

2007-02-09  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

2007-02-08  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.

2007-02-01  Daniel Jacobowitz  <dan@codesourcery.com>

	Merge from FSF.
	Apply submitted patches for table-driven XML parsing (listed below).
	Rewrite local XML parsing additional to use the table-driven parser.

	* release-notes-csl.xml: New file.

	2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* features/Makefile, features/arm-with-iwmmxt.xml,
	features/gdbserver-regs.xsl, features/number-regs.xsl,
	features/sort-regs.xsl, features/xscale-iwmmxt.xml: New files.
	* regformats/arm-with-iwmmxt.dat: Generate.
	* NEWS: Mention iWMMXt.

	gdb/testsuite/
	* gdb.arch/iwmmxt-regs.c, gdb.arch/iwmmxt-regs.exp: New.

	gdb/
	* Makefile.in (OBS): Add $(XML_BUILTIN).
	(XML_DIR, XML_TARGET, XML_FILES, XML_BUILTIN): New.
	(clean): Update.
	(target.xml, xml-builtin.c, stamp-xml, arm-with-iwmmxt.o)
	(arm-with-iwmmxt.c): New.
	* config.in, configure: Regenerate.
	* configure.ac: Check for iWMMXt.  Handle srv_xmltarget,
	srv_xmlbuiltin, and srv_xmlfiles.  Define USE_XML.
	* configure.srv: Mention srv_xmltarget and srv_xmlfiles.
	(arm*-*-linux*): Add iWMMXt and regset support.
	* linux-arm-low.c (PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset)
	(arm_store_wmmxregset, target_regsets): New.
	* server.c (get_features_xml): Take annex argument.  Check builtin
	XML documents.
	(handle_query): Handle multiple annexes.

	2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* Makefile.in (arm-tdep.o, eval.o, target-descriptions.o)
	(xml-tdesc.o): Update.
	* xml-support.c: Add a comment.
	(gdb_xml_enums_boolean): New variable.
	(gdb_xml_parse_attr_enum): Use strcasecmp.
	* xml-support.h (gdb_xml_enums_boolean): Declare.
	* xml-tdesc.c (struct tdesc_parsing_data): Record current_feature,
	next_regnum, and current_union.
	(tdesc_start_feature, tdesc_start_reg, tdesc_start_union)
	(tdesc_end_union, tdesc_start_field, tdesc_start_vector)
	(field_attributes, union_children, reg_attributes, union_attributes)
	(vector_attributes, feature_attributes, feature_children): New.
	(target_children): Make static.  Add <feature>.
	(tdesc_elements): Make static.
	* target-descriptions.c (struct tdesc_reg, tdesc_reg_p, type_p)
	(struct tdesc_feature, tdesc_feature_p): New types.
	(struct target_desc): Add features member.
	(struct tdesc_arch_data, tdesc_data): New.
	(target_find_description): Clarify error message.  Warn about
	ignored register descriptions.
	(tdesc_has_registers, tdesc_find_feature, tdesc_feature_name)
	(tdesc_named_type, tdesc_data_init, tdesc_data_alloc)
	(tdesc_data_cleanup, tdesc_numbered_register)
	(tdesc_numbered_register_choices, tdesc_find_register)
	(tdesc_register_name, tdesc_register_type)
	(tdesc_remote_register_number, tdesc_register_reggroup_p)
	(set_tdesc_pseudo_register_name, set_tdesc_pseudo_register_type)
	(set_tdesc_pseudo_register_reggroup_p, tdesc_use_registers)
	(tdesc_free_reg, tdesc_create_reg, tdesc_free_feature)
	(tdesc_create_feature, tdesc_record_type): New.
	(free_target_description): Free features.
	(_initialize_target_descriptions): Initialize tdesc_data.
	* arch-utils.c (default_remote_register_number): New.
	* arch-utils.h (default_remote_register_number): New prototype.
	* target-descriptions.h (set_tdesc_pseudo_register_name)
	(set_tdesc_pseudo_register_type, set_tdesc_pseudo_register_reggroup_p)
	(tdesc_use_registers, tdesc_data_alloc, tdesc_data_cleanup)
	(tdesc_numbered_register, tdesc_numbered_register_choices)
	(tdesc_has_registers, tdesc_find_feature, tdesc_feature_name)
	(tdesc_named_type, tdesc_create_feature, tdesc_record_type)
	(tdesc_create_reg): Declare.
	* gdbarch.sh (remote_register_number): New entry.
	* gdbarch.c, gdbarch.h: Regenerate.
	* remote.c (init_remote_state): Use gdbarch_remote_register_number.
	* features/gdb-target.dtd: Add feature, reg, vector, union, and field.

	* arm-tdep.c (arm_register_aliases): New.
	(arm_register_name_strings): Rename to...
	(arm_register_names): ...this.  Make const.  Delete the old version.
	(current_option, arm_register_byte): Delete.
	(set_disassembly_style): Simplify.  Do not adjust arm_register_names.
	(value_of_arm_user_reg): New.
	(arm_gdbarch_init): Verify any described registers.  Call
	tdesc_use_registers.  Don't use arm_register_byte.  Create aliases
	for standard register names.
	(_initialize_arm_tdep): Do not adjust arm_register_names.
	* user-regs.c (struct user_reg): Add baton member.
	(append_user_reg, user_reg_add_builtin, user_regs_init)
	(user_reg_add, value_of_user_reg): Use a baton for user
	register functions.
	* std-regs.c: Update.
	* user-regs.h (user_reg_read_ftype, user_reg_add_builtin)
	(user_reg_add): Add baton argument.
	* NEWS: Mention target description register support.
	* features/arm-core.xml, features/arm-fpa.xml: New.
	* eval.c (evaluate_subexp_standard): Allow ptype $register
	when the program is not running.

	gdb/doc/
	* gdb.texinfo (Requirements): Add anchor for Expat.  Update
	description.
	(Target Descriptions): Mention Expat.
	(Target Description Format): Document new elements.
	(Predefined Target Types, Standard Target Features): New sections.
	* doc/gdbint.texinfo (Target Descriptions): New section.

	gdb/testsuite/
	* gdb.xml/single-reg.xml, gdb.xml/tdesc-regs.exp,
	gdb.xml/core-only.xml, gdb.xml/extra-regs.xml: New files.

	2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* xml-tdesc.c (struct tdesc_xml_cache, tdesc_xml_cache_s)
	(xml_cache): New.
	(tdesc_parse_xml): Cache expanded descriptions.

	2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>
	gdb/
	* Makefile.in (XMLFILES): New.
	(COMMON_OBS): Add xml-builtin.o.
	(xml-builtin.c, stamp-xml): New rules.
	(xml-tdesc.o): Update.
	* features/feature_to_c.sh: New file.
	* xml-support.c (MAX_XINCLUDE_DEPTH): Define.
	(struct gdb_xml_parser): Add dtd_name and is_xinclude.
	(gdb_xml_start_element): Initialize scope after possibly reallocating
	scopes.  Move cleanup later.  Handle the XInclude description
	specially.
	(gdb_xml_end_element): Only parse the body if there is a current element.
	Call XML_DefaultCurrent if there is no element.
	(gdb_xml_fetch_external_entity, gdb_xml_use_dtd): New.
	(struct xinclude_parsing_data, xinclude_start_include)
	(xinclude_end_include, xml_xinclude_default)
	(xml_xinclude_start_doctype, xml_xinclude_end_doctype)
	(xml_xinclude_xml_decl, xml_xinclude_cleanup, xinclude_attributes)
	(xinclude_elements, xml_process_xincludes, fetch_xml_builtin): New.
	* xml-support.h (xml_fetch_another, xml_process_xincludes)
	(fetch_xml_builtin, xml_builtin, gdb_xml_use_dtd): New declarations.
	* xml-tdesc.c (tdesc_parse_xml): Add fetcher_baton argument.  Expand
	XInclude directives.  Use the compiled in DTD.
	(fetch_xml_from_file): Add baton argument.  Treat it as a containing
	directory name.  Do not warn here.
	(file_read_description_xml): Update call.  Warn here instead.  Pass
	a dirname as baton.
	(fetch_available_features_from_target): New.
	(target_read_description_xml): Use it.
	* features/gdb-target.dtd: Add copyright notice.  Use xinclude.dtd
	to handle XInclude.
	* features/xinclude.dtd: New file.

	gdb/testsuite/
	* gdb.xml/bad-include.xml, gdb.xml/inc-2.xml, gdb.xml/inc-body.xml,
	gdb.xml/includes.xml, gdb.xml/loop.xml,
	gdb.xml/tdesc-xinclude.exp: New files.

	gdb/doc/
	* gdb.texinfo (Target Description Format): Add section on XInclude.

2007-01-31  Kazu Hirata  <kazu@codesourcery.com>

	Issue #1088
	gdb/
	* breakpoint.c (do_enable_breakpoint): Call value_free only
	when bpt->val is non-NULL.

2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from FSF.
	gdb/gdbserver/
	* remote-utils.c [USE_WIN32API] (read, write): Define.
	(putpkt_binary, input_interrupt, readchar, getpkt): Use read and
	write.

2007-01-25  Paul Brook  <paul@codesourcery.com>

	Backport from FSF.
	gdb/
	* arm-tdep.c (arm_get_next_pc): Fix bitfield off-by-one error.

2007-01-24  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #1088
	gdb/
	* breakpoint.c (do_enable_breakpoint): Delay enabling until after
	checking watchpoint resources.

2007-01-12  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/var-cmd.c (do_children_tests): Initialize
	the 'struct_declarations' variable to zeros.
	* gdb.mi/mi2-var-child.exp: Step over said
	initialization.

2006-12-29  Vladimir Prus  <vladimir@codesourcery.com>

	Automatically distinguish coldfire from classic
	m68k by looking at the executable file.
	gdb/
	* m68k-tdep.c: Remove hardcoding of floating
	point types using macros.
	(REGISTER_BYTES_FP): Remove.
	(m68k_register_to_value, m68k_value_to_register)
	(m68k_svr4_extract_return_value): Use register_type
	to get the type of floating point register, so
	that to have a single place where type is determined.
	(m68k_gdbarch_init): Guess m68k/coldfire based on
	architecture of file. Depending on m68k/coldfire
	detection, set tdep->float_return and tdep->fpreg_type.
	* m68k-tdep.h (struct gdbarch_tdep): New field
	coldfire.  Clarify comment for 'fpreg_type'.

2006-12-21  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_register_bytes_ok): Remove.
	(m68k_gdbarch_init): Put the comment about not
	using m68k_register_bytes_ok here.

2006-12-18  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* buildsym.c (start_subfile): Handle producer.
	(record_producer): New function.
	* buildsym.h (struct subfile): Include producer.
	(record_producer): New prototype.
	* dwarf2-frame.c (struct dwarf2_cie): Add version and augmentation.
	(struct dwarf2_frame_state): Add armcc_cfa_offsets_sf and
	armcc_cfa_offsets_reversed.
	(execute_cfa_program): Handle armcc_cfa_offsets_sf.
	(dwarf2_frame_find_quirks): New function.
	(dwarf2_frame_cache): Call it.  Handle armcc_cfa_offsets_reversed.
	(decode_frame_entry_1): Record the CIE version.  Record the
	augmentation.  Skip armcc augmentations.
	* dwarf2read.c (read_file_scope): Save the producer.
	* symtab.h (struct symtab): Rename unused version member to
	producer.

2006-12-18  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	Backport from HEAD:
	2006-11-28  Daniel Jacobowitz  <dan@codesourcery.com>
	* dwarf2-frame.c (decode_frame_entry_1): Skip unknown augmentations
	without skipping the CIE.

2006-12-15  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* breakpoint.c (insert_bp_location): Add newline to note.

2006-12-15  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c (varobj_update): Fix merge messup
	that prevented -var-update from working on
	non-root varobjs.

2006-12-13  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_register_bytes_ok): Disable.
	(m68k_register_type): Check fpregs_present.  Return builtin_type_int0
	otherwise.
	(m68k_register_names): Remove fpcode and fpflags.
	(m68k_register_name): Call available_register_name.
	(m68k_convert_register_p): Check fpregs_present.
	(m68k_analyze_register_saves): Likewise.
	(m68k_dwarf_reg_to_regnum): Likewise.
	(m68k_check_feature_set): Set fp0_regnum.  Leave num_regs alone.
	Clear fpregs_present if there are no FP regs.
	(m68k_gdbarch_init): Set fpregs_present.  Don't adjust num_regs.
	Don't always use m68k_register_bytes_ok.  Remove FIXME.  Use
	available_register_reggroup_p.
	* m68k-tdep.h (struct gdbarch_tdep): Add fpregs_present.

2006-12-13  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* gdbtypes.c (append_composite_type_field): Correct the location of
	appended fields.
	* available.c: Move an orphaned comment to the right place.
	(space_record_offset_mapping, space_map_offset): New.
	(struct space_value_closure): Delete.
	(space_value_read): Expect a space closure.  Use space_map_offset.
	Handle reads spanning multiple registers.
	(space_value_write): Expect a space closure.  Use space_map_offset.
	(space_value_describe): Expect a space closure.
	(space_value_free_closure, space_value_copy_closure): Delete.
	(space_value_funcs): Don't use them.
	(make_space_value): Set the space as its own closure.
	* available.h (struct gdb_available_space): Add offset_map.
	(space_record_offset_mapping): New prototype.
	* parse-avail.c (enum xml_phase): Add PHASE_IN_GROUP.
	(struct xml_state_stack): Replace register list with gdb_type.
	Add space, next_tgt_offset, and next_gdb_offset.
	(xml_start_space): For consistency, don't warn.  Construct the
	space object and initialize the new structure type.
	(xml_start_group, xml_end_group): New.
	(xml_feature_start_element): Handle groups.  Don't allow <struct>
	in <space>.
	(xml_end_reg): New function.  Create new fields for registers in
	a group or a space.  Don't adjust the bit position.  Call
	space_record_offset_mapping instead.
	(xml_end_space): Remove type and space construction.
	(xml_feature_end_element): Call xml_end_reg and xml_end_group.
	* Makefile.in (available.o): Update.
	* features/gdb-target.dtd: Add <group>.

2006-12-12  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in (mi-cmd-var.o): Update dependencies.
	* gdb/mi/mi-cmd-var.c (restore_language): New.
	(mi_cmd_var_registers): Save and restore the language.

2006-12-12  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* value.h (struct lval_funcs): Pass two values to WRITE.
	* available.c (space_value_write): Use FROMVAL for the new data.
	Adjust bitfields to 32-bit alignment.
	* valops.c (value_assign): Don't call modify_field here.  Pass FROMVAL
	to the write method.

2006-12-11  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* parse-avail.c (enum xml_phase): New value PHASE_IN_STRUCT.
	(xml_start_reg): Initialize the 'type' field.
	(xml_start_union_or_struct): New function.
	(xml_start_union): Use the above.
	(xml_start_struct): New function.
	(xml_start_field): Allow field to appear in space definition.
	Parse 'start' and 'end' attributes. Create bitfield member.
	(xml_feature_start_elememt): Hook in the 'struct' element.
	(xml_end_space): If a type was specified for a register,
	look it up.

2006-12-11  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* mi/mi-cmds.h (mi_cmd_var_registers): New.
	* mi/mi-cmds.c: Register "var-registers".
	* mi/mi-cmd-var.c (create_varobj_in_frame): New function.
	(mi_cmd_var_create): Use the above.
	(mi_cmd_var_registers): New.

2006-12-11  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* c-typeprint.c (c_type_print_modifier):
	Do nothing about read-sensitive types, so that
	don't confuse Eclipse.

2006-12-11  Jim Blandy  <jimb@codesourcery.com>
	    Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* target.h (enum target_object): New value
	TARGET_OBJECT_SPACES.
	* available.c (struct space_value_closure): New.
	(space_value_read, space_value_write)
	(space_value_describe, space_value_free_closure)
	(space_value_copy_closure): New.
	(available_arch_changed_observer): New
	(_initialize_available): Register it.
	* remote.c (PACKET_qXfer_memory_mapped): New enumerator.
	(remote_write_qxfer): New function.
	(remote_xfer_partial): Handle writes for
	TARGET_OBJECT_SPACES.
	(remote_read_qxfer): Handle reads for TARGET_SPACES.
	* available.c (space_value_read): Adjust target object.
	Don't use VALUE_ADDRESS since its value is bogus.
	(space_value_write): Likewise.
	* parse-avail.c (xml_start_reg): Handle the 'offset'
	attribute.
	* Makefile.in (available.o): Update dependencies.

2006-12-11  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c (create_child): Make read-sensitive
	values frozen.

2006-12-08  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	From Vladimir Prus:
	* value.c (value_of_internalvar): If an internal variable's value
	is a computed lvalue, make retrieving its value produce an
	equivalent computed lvalue.

	gdb/
	* defs.h (enum lval_type): New value: lval_computed.
	* value.h (struct lval_funcs): New type.
	(allocated_computed_value, value_computed_funcs)
	(value_computed_closure): New declarations.
	(value_free): Replace macro definition with function definition.
	* value.c (struct value): Add a structure to the location union
	for computed lvalues, containing 'funcs' and 'closure' members.
	(allocate_computed_value, value_computed_funcs)
	(value_computed_closure): New functions.
	(set_value_component_location): If the original value is a
	computed lvalue, then call the closure's 'copy_closure' function.
	(value_copy): If we're copying an lval_computed value, call the
	closure's 'copy_closure' function.
	(value_free): New function.  Like the old macro, but for computed
	lvalues, call the closure's 'free_closure' function before freeing
	the value itself.
	* valops.c (value_fetch_lazy): Unlazy computed lvalues by calling
	their read function.
	(value_assign): Assign to computed lvalues by calling their write
	function.
	* ada-lang.c (ada_value_primitive_packed_val): Don't assume that
	all lazy values are in memory; computed lvalues can be lazy, too.

2006-12-08  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* value.c (value_of_internalvar): Don't unconditionally
	fetch it.
	(set_internalvar_lazy): New function.
	(set_internalvar): Implement in terms of above.
	* value.h (set_internalvar_lazy): Declare.

2006-12-07  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	Abstract out common code for copying value locations.
	* value.h (set_value_component_location): New declaration.
	* value.c (set_value_component_location): New function.
	(value_primitive_field): Use it.
	* valarith.c (value_subscript, value_subscripted_rvalue): Same.
	* valops.c (search_struct_field, value_slice): Same.
	* ada-lang.c (coerce_unspec_val_to_type)
	(ada_value_primitive_packed_val): Same.

	gdb/
	* value.c (value_copy): Copy the full 'location' contents, instead
	of assuming that copying ADDRESS will bring over everything in the
	union.

2006-12-06  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* available.c (copy_features_to_obstack):
	Copy memory spaces.

2006-12-06  Vladimir Prus  <vladimir@codesourcery.com>

	* varobj.h (varobj_set_frozen): New
	(varobj_get_frozen): New.
	(varobj_update): New parameter explicit.
	* varobj.c (struct varobj): New fields frozen
	and not_fetched.
	(varobj_set_frozen, varobj_get_frozen): New.
	(install_new_value): Don't fetch values for
	frozen variable object, or children thereof.  Allow
	a frozen variable object to have non-fetched value.
	(varobj_update): Allow updating child variables.
	Don't traverse frozen children.
	(new_variable): Initialize the frozen field.
	(c_value_of_variable): Return NULL for frozen
	variable without any value yet.
	* mi/mi-cmd-var.c (varobj_update_one): New parameter
	'explicit'.
	(mi_cmd_var_create): Output the 'frozen' field,
	as soon as testsuite is adjusted to expect that field.
	(mi_cmd_var_set_frozen): New.
	(mi_cmd_var_list_children): : Output the 'frozen' field,
	as soon as testsuite is adjusted to expect that field.
	(mi_cmd_var_update): Pass the 'explicit' parameter to
	varobj_update_one.
	* mi/mi-cmds.c (mi_cmds): Register '-var-set-frozen'.
	* mi/mi-cmds.h (mi_cmd_var_set_frozen): Declare.

2006-12-05  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	Parse register space definitions in XML features.
	* available.h (struct gdb_available_feature): New member, 'spaces'.
	(struct gdb_available_register): New fields, 'offset' and
	'read_sensitive'.
	(struct gdb_available_space): New struct type.
	* gdbtypes.h (TYPE_FLAG_READ_SENSITIVE, TYPE_READ_SENSITIVE): New
	macros.
	(make_qualified_type): New external prototype.
	* gdbtypes.c (make_qualified_type): Make this externally visible.
	* parse-avail.c (copy_feature_to_obstack): Copy spaces, too.
	(enum xml_phase): New member, PHASE_IN_SPACE.
	(struct xml_state_stack): New union member, 'space'.
	(reverse_reg_list): New function.
	(xml_start_reg): Record offsets and read-sensitivity.
	(xml_start_space): New function.
	(xml_feature_start_element): Features can have spaces.  Spaces can
	have registers.  Call xml_start_space to handle <space> elements.
	(xml_end_space): New function.
	(xml_feature_end_element): Call it to handle </space>.  Deal with
	regs appearing in either features or spaces.  Call
	reverse_reg_list to handle feature register lists.
	* c-typeprint.c (c_type_print_modifier): Print out
	'@read_sensitive' modifiers, for debugging.
	* features/gdb-target.dtd (feature): Features can have spaces.
	(reg): These may have offsets, and may be read-sensitive.
	(space): New element.

2006-12-05  Vladimir Prus  <vladimir@codesourcery.com>

	Port from FSF mainline:
	2006-07-29  Vladimir Prus  <vladimir@codesourcery.com>

	* mi/mi-cmd-var.c (print_varobj): New function.
	(mi_cmd_var_create): Use the above.
	(mi_cmd_var_list_children): Likewise.

2006-12-05  Vladimir Prus  <vladimir@codesourcery.com>

	Merge from mainline:
	2006-11-28  Vladimir Prus  <vladimir@codesourcery.com>

	Fetch varobj values from memory in a single place,
	and only fetch the values that are really needed.
	* varobj.c (struct varobj): Clarify comment.
	(my_value_equal): Remove.
	(install_new_value): New function.
	(type_of_child): Remove.
	(varobj_create): Use install_new_value.
	(varobj_set_value): Use value_contents_equal, not
	my_value_equal.
	(varobj_update): Use install_new_value.
	(create_child): Likewise. Inline type_of_child here.
	(value_of_child): Don't fetch the value.
	(c_value_of_root): Likewise.
	(c_value_of_variable): Likewise.
	(type_changeable): Improve comments.

2006-12-04  Jim Blandy  <jimb@codesourcery.com>

	gdb/
	* gdbtypes.c (append_composite_type_field): Return the new field.
	* gdbtypes.h (append_composite_type_field): Update prototype.

 	Add an observer for architecture changes.

 	gdb/doc/
 	* observer.texi (arch_changed): New observer.

 	gdb/
 	* gdbarch.sh: In gdbarch.c, #include "observer.h", and have
 	deprecated_current_gdbarch_select_hack call the arch_changed
 	observer.
 	* gdbarch.c: Regenerated.

2006-12-01  Kazu Hirata  <kazu@codesourcery.com>

	Merge from binutils-csl-2_17-branch:
	2005-08-01  Kazu Hirata  <kazu@codesourcery.com>

	opcodes/
	* m68k-dis.c (print_insn_arg): Add cac and mbb.
	* m68k-opc.c (m68k_opcodes): Add sleep and trapx.

2006-12-01  Kazu Hirata  <kazu@codesourcery.com>

	bfd/
	* archures.c (bfd_mach_cpu32_fido): New.
	(bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_a,
	bfd_mach_mcf_isa_a_mac, bfd_mach_mcf_isa_a_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_b_nousp,
	bfd_mach_mcf_isa_b_nousp_mac, bfd_mach_mcf_isa_b_nousp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac,
	bfd_mach_mcf_isa_b_emac, bfd_mach_mcf_isa_b_float,
	bfd_mach_mcf_isa_b_float_mac, bfd_mach_mcf_isa_b_float_emac):
	Increment the defined values.
	* cpu-m68k.c (arch_info_struct): Add en entry for
	bfd_mach_cpu32_fido.
	(m68k_arch_features): Add an entry corresponding to
	bfd_mach_cpu32_fido.
	(bfd_m68k_compatible): Handle bfd_mach_cpu32_fido.
	* elf32-m68k.c (elf32_m68k_object_p): Handle
	EF_M68K_CPU32_FIDO_A.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_CPU32_MASK.
	(elf32_m68k_print_private_bfd_data): Handle
	EF_M68K_CPU32_FIDO_A.
	* bfd-in2.h: Regenerate.

	include/
	* include/elf/m68k.h (EF_M68K_CPU32_FIDO_A,
	EF_M68K_CPU32_MASK): New.

2006-12-01  Kazu Hirata  <kazu@codesourcery.com>

	bfd/
	* elf32-m68k.c (elf32_m68k_object_p): Treat the default case
	as ColdFire.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.  Treat the default case as ColdFire.

2006-12-01  Kazu Hirata  <kazu@codesourcery.com>

	bfd/
	* elf32-m68k.c (elf32_m68k_object_p,
	elf32_m68k_print_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.

	include/elf/
	* m68k.h (EF_M68K_ARCH_MASK): New.

2006-12-01  Kazu Hirata  <kazu@codesourcery.com>

	bfd/
	* elf32-m68k.c: Update uses of EF_M68K_*.

	include/elf
	* m68k.h (EF_M68K_ISA_MASK, EF_M68K_ISA_A_NODIV,
	EF_M68K_ISA_A, EF_M68K_ISA_A_PLUS, EF_M68K_ISA_B_NOUSP,
	EF_M68K_ISA_B, EF_M68K_ISA_C, EF_M68K_MAC_MASK, EF_M68K_MAC,
	EF_M68K_EMAC, EF_M68K_EMAC_B, EF_M68K_FLOAT): Rename to
	EF_M68K_CF_ISA_MASK, EF_M68K_CF_ISA_A_NODIV, EF_M68K_CF_ISA_A,
	EF_M68K_CF_ISA_A_PLUS, EF_M68K_CF_ISA_B_NOUSP,
	EF_M68K_CF_ISA_B, EF_M68K_CF_ISA_C, EF_M68K_CF_MAC_MASK,
	EF_M68K_CF_MAC, EF_M68K_CF_EMAC, EF_M68K_CF_EMAC_B,
	EF_M68K_CF_FLOAT, respectively.

2006-11-30  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_compile_test): New.
	(skip_ada_tests, skip_java_tests): New.
	(gdb_compile): Use gdb_compile_test for f77.
	* lib/ada.exp (gdb_compile_ada): Use gdb_compile_test to record result.
	* lib/java.exp (compile_java_from_source): Remove runtests check,
	use gdb_compile_test to record result.
	* gdb.ada/packed_array.exp, gdb.ada/fixed_points.exp,
	gdb.ada/exec_changed.exp, gdb.ada/start.exp,
	gdb.ada/watch_arg.exp, gdb.ada/null_record.exp,
	gdb.ada/array_return.exp, gdb.ada/arrayidx.exp,
	gdb.mi/mi-var-child-f.exp, gdb.fortran/types.exp,
	gdb.fortran/array-element.exp, gdb.fortran/subarray.exp,
	gdb.fortran/derived-type.exp, gdb.fortran/exprs.exp,
	gdb.java/jmisc.exp, gdb.java/jmisc1.exp, gdb.java/jprint.exp,
	gdb.java/jv-print.exp, gdb.java/jmain.exp: Add language skip,
	adjust gdb_compile invocations.

2006-11-29  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb.threads/linux-dp.exp: Adjust regexps used to scan thread
	info.  Adjust test names.

2006-11-28  Vladimir Prus  <vladimir@codesourcery.com>

	Merged from FSF trunk.

2006-11-27  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.threads/linux-dp.exp: Read thread table before and after
	creating each philosopher and verify it.

2006-11-27  Nathan Sidwell  <nathan@codesourcery.com>
	    Paul Brook  <paul@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb.base/ending-run.exp: Flatten expect script stepping out of
	main to remove duplication.  Add start function of the form
	'_*start[1-9]*'. Add RVDS start function.

2006-11-27  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.trace/save-trace.exp, gdb.trace/collection.exp,
	gdb.trace/while-stepping.exp, gdb.trace/while-dyn.exp,
	gdb.trace/actions.exp, gdb.trace/limits.exp,
	gdb.trace/passc-dyn.exp, gdb.trace/tfind.exp,
	gdb.trace/packetlen.exp, gdb.trace/infotrace.exp,
	gdb.trace/report.exp, gdb.trace/passcount.exp,
	gdb.trace/backtrace.exp, gdb.trace/circ.exp,
	gdb.trace/tracecmd.exp, gdb.trace/deltrace.exp: Disable m68k-elf
	specific expectations.  Remove unterminated strings used as
	comments.

2006-11-21  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.mi/mi2-var-display.exp: Fix typo.

2006-11-21  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/break.c: Ensure malloc is in the executable.

	Apply 2006-11-10  Vladimir Prus  <vladimir@codesourcery.com>
	* gdb.base/completion.exp: Fix completion tests for
	'info' and 'info '.
	* gdb.base/help.exp (help_test_raw, test_class_help)
	(test_prefix_command_help): Move...
	* lib/gdb.exp: Here.
	* gdb.base/main.exp: Adjust.
	* gdb.cp/maint.exp: Adjust.
	* gdb.trace/tracecmd.exp: Use test_help_class.

	Apply 2006-11-09  Vladimir Prus  <vladimir@codesourcery.com>
	* gdb.stabs/weird.exp (print_weird_var): Use
	gdb_test_multiple instead of gdb_expect.

	Apply 2006-11-09  Vladimir Prus  <vladimir@codesourcery.com>
	* gdb.base/help.exp (help_test_raw): New.
	(test_class_help): New.
	(test_prefix_command_help): New.
	Adjust testcases.

	Apply 2006-11-09  Christophe Lyon  <christophe.lyon@st.com>
	* gdb.base/constvars.c (main): Write to crass and crips, so that
	they are allocated by the compiler.

	Apply 2006-11-06  Jim Blandy  <jimb@codesourcery.com>
	* dwarf2loc.c (dwarf_expr_read_reg): Use frame_register_read
	instead of frame_register.  Doc fix.

2006-10-08  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* breakpoint.c: Include "memattr.h".
	(automatic_hardware_breakpoints): New.
	(show_automatic_hardware_breakpoints): New.
	(insert_bp_location): Automatically use
	hardware breakpoints.
	(_initialize_breakpoint): Register the "auto-hw"
	variable.
	* Makefile.in (breakpoint.o): Update dependencies.

	gdb/doc
	* gdb.texinfo (Setting breakpoints): Document
	automatic software/hardware breakpoint usage and
	the "set breakpoint auto-hw" command.

2006-10-08  Vladimir Prus  <vladimir@codesourcery.com>

	Backport from mainline:
	libiberty/
	* pex-win32.c (no_suffixes): Remove.
	(std_suffixes): Add "" as first element.
	(find_executable): Remove detection of already-present
	extension. Try all suffixes in std_suffixes.

2006-11-06  Vladimir Prus  <vladimir@codesourcery.com>

	Merged from FSF trunk.

2006-10-31  Vladimir Prus  <vladimir@codesourcery.com>

	* arm/wrapper.c (sim_target_display_usage): New
	parameter 'help'. Print to stdout or stderr depending
	on the value of that parameter.
	* common/run.c (usage): Pass 'help' to
	sim_target_display_usage. Exit with 0 or 1 depending
	of value of 'help'.
	* common/run-sim.h: (sim_target_display_usage): New
	parameter 'help'.

2006-10-31  Vladimir Prus  <vladimir@codesourcery.com>

	sim/
	* common/Makefile.in: Pass PKGVERSION and REPORT_BUGS_TO
	defines.
	* common/Make-common.in: Likewise. Add version.o to
	sources.
	(version.c): New rule.
	* common/run.c: Include version.h.
	(usage): New parameter 'help'. Print output either to
	stdout or stderr depending on that parameter.
	(print_version): New.
	(main): Check for --help and --version.
	* common/common.m4: Define --with-pkgversion and
	--with-bugurl options.
	* common/version.h: New.
	* common/configure: Regenerated.
	* arm/configure: Regenerated.
	* m32r/configure: Regenerated.
	* m68hc11/configure: Regenerated.
	* frv/configure: Regenerated.
	* mn10300/configure: Regenerated.
	* cris/configure: Regenerated.
	* v850/configure: Regenerated.
	* h8300/configure: Regenerated.
	* mcore/configure: Regenerated.
	* configure: Regenerated.
	* d10v/configure: Regenerated.
	* sh/configure: Regenerated.
	* iq2000/configure: Regenerated.
	* erc32/configure: Regenerated.

2006-10-30  Kazu Hirata  <kazu@codesourcery.com>

	Merge:
	2006-08-31  Daniel Jacobowitz  <dan@codesourcery.com>

	* config.sub: Recognize fido.

	bfd/
	* config.bfd: Recognize fido.

	gdb/
	* config/m68k/fido.mt, config/m68k/tm-fido.h: New files.
	* configure.tgt: Recognize fido.

	Merge from binutils-csl-2_17-branch:
	2006-10-28  Kazu Hirata  <kazu@codesourcery.com>

	include/opcode/
	* m68k.h (mcfmac, mcfemac, cfloat, mcfhwdiv, mcfisa_a,
	mcfisa_aa, mcfisa_b, mcfusp, mcf_mask): Double the defined
	values.

	2006-06-23  Kazu Hirata  <kazu@codesourcery.com>

	include/opcode/
	* m68k.h (fido): Rename to fido_a.

	2005-07-22  Kazu Hirata  <kazu@codesourcery.com>

	include/opcode/
	* m68k.h (fido): New.

2006-10-10  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* configure.ac (REPORT_BUGS_TO): Set default here.
	* configure: Rebuilt.
	* Makefile.in (REPORT_BUGS_TO): Always define.
	(GDB_CFLAGS): Adjust.
	* main.c (print_gdb_help): Check REPORT_BUGS_TO is not empty.

	gdb/gdbserver/
	* configure.ac (--with-bugurl, --with-pkgversion): New.
	* configure: Rebuilt.
	* Makefile.in (PKGVERSION, REPORT_BUGS_TO): New.
	(GLOBAL_CFLAGS): Add them.
	(gdbreplay): Add version.o.
	* server.c (gdbserver_version): Print PKGVERSION.
	(gdbsrever_usage): Add stream parameter.  Print REPORT_BUGS_TO.
	(main): Adjust gdbserver_usage calls.
	* gdbreplay.c (version, host_name): Add declarations.
	(gdbreplay_version, gdbreplay_usage): New.
	(main): Accept --version & --help options.

2006-10-05  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_gdbarch_init): Register
	available_register_reggroup_p.

2006-10-03  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_reg_struct_return_p): Remove
	unused variables.

2006-10-03  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_check_feature_set): Don't request
	registers 29 and 30, since they don't exist.

2006-10-03  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* available.c (available_register_type):
	Handle new types 'code_pointer' and 'data_pointer'.
	* m68k-tdep.c (m68k_register_type): Call
	available_register_type.
	(m68k_register_names): Made top-level var.
	(m68k_register_name): Adjust for above.
	(m68k_require_register): New.
	(m68k_check_feature_set): New.
	(m68k_gdbarch_init): Check if feature set is provided.
	Advertise available features support.
	* m68k-tdep.h (M68K_NUM_REGS_NOFP): New.
	* Makefile.in (m68k-tdep.o): Add dependency.

	gdb/testsuite/gdb.base/
	* float.exp: Account for the fact that m68k might not
	have any float registers.


2006-09-29  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/fileio.exp: Add test for shell not available as well as
	available.
	* gdb.base/fileio.c (test_system): Check for shell twice.

	gdb/
	* main.c (captured_main): Make long_options const.
	(print_gdb_help): Use REPORT_BUGS_TO rather than hardwired address.

2006-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (available_h, arm-linux-nat.o): Update.
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS): New
	enums.
	(arm_linux_has_wmmx_registers): New.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmx_regs, store_wmmx_regs): New.
	(arm_linux_fetch_inferior_registers): Use them.
	(arm_linux_store_inferior_registers): Likewise.
	(super_xfer_partial, arm_linux_xfer_partial): New.
	(_initialize_arm_linux_nat): Use them.
	* available.c (available_xfer_builtin_features): New.
	* available.h: Include target.h.
	(available_xfer_builtin_features): New prototype.
	* config/arm/linux.mh (TDEP_XML): New.
	* features/arm-fpa.xml, features/arm-with-fpa.xml: New.
	* CHECKSUMS: Add them.

	gdb/testsuite/
	* gdb.arch/iwmmxt-regs.c, gdb.arch/iwmmxt-regs.exp: New.

2006-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* features/CHECKSUMS, features/arm-core.xml, features/arm-iwmmxt.xml,
	features/arm-vfp.xml, features/arm-with-iwmmxt.xml,
	features/arm-with-vfp.xml: New files.
	* regformats/reg-arm-iwmmxt.dat: New file.

	gdb/gdbserver/
	* Makefile.in (OBS): Add $(XML_BUILTIN).
	(XML_DIR, XML_TARGET, XML_FILES, XML_BUILTIN: New variables.
	(clean): Update.
	(CHECKSUMS, stamp-checksum, target.xml, xml-builtin.c, stamp-xml)
	(reg-arm-iwmmxt.o, reg-arm-iwmmxt.c): New rules.
	* configure.ac: Check for iWMMXt.  Set and substitute XML
	properties.
	* configure.srv: Mention srv_xmltarget and srv_xmlfiles.
	(arm*-*-linux*): Handle iwmmxt.
	* linux-arm-low.c (PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset)
	(arm_store_wmmxregset, target_regsets): New.
	* server.c (handle_query): Handle qXfer:features:read.  Also add
	it to qSupported.
	* config.in, configure: Regenerated.

2006-09-25  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (parse-avail.o): Update.
	* available.h (struct gdb_feature_set): New xml_document member.
	Remove corresponding FIXME.
	(struct gdb_available_feature): Add types member.
	(struct gdb_available_type): New type.
	(lookup_available_type): New prototype.
	* available.c (copy_features_to_obstack): Use OBSTACK_ZALLOC.
	Copy the xml document and checksum.  Copy types.
	(find_register): Optionally return the containing feature.  All
	callers updated.
	(lookup_available_type): New function.
	(available_register_type): Use it.
	* parse-avail.c (enum xml_phase): Add PHASE_IN_UNION,
	PHASE_IN_FIELD, and PHASE_IN_ARRAY.
	(struct xml_state_stack): Add type alternative to u.
	(xml_start_union, xml_start_array, xml_start_field): New.
	(xml_feature_start_element): Call them.
	(xml_end_union): New.
	(xml_feature_end_element): Call it.
	(available_features_from_xml_string): Save the xml document.

	gdb/doc/
	* gdb.texinfo (Self-Describing Targets): Add Predefined Target Types
	node to menu.
	(Self-Description Format): Update description of types.
	(Predefined Target Types): New section.

2006-09-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* available.c (available_features_from_target_object): Update
	call to available_features_from_xml_string.
	* available.h (available_features_from_xml_string): Update prototype.
	* parse-avail.c (struct xml_state_stack): Remove nested and
	features_only.
	(xml_feature_start_element): Remove dead code.
	(available_features_from_xml_string): Remove nested argument.
	(available_features_from_xml_file): Update call to
	available_features_from_xml_string.

2006-09-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (remote_xfer_partial): Delete unused local.
	(_initialize_remote): Remove merge droppings.

2006-09-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* avr-tdep.c (avr_scan_prolouge): Remove merge droppings.
	* mips-tdep.c (mips_n32n64_return_value): Likewise.
	(mips_gdbarch_init): Likewise.
	* remote-fileio.h (remote_fileio_reset): Likewise.

	gdb/testsuite/
	* gdb.stabs/exclfwd.exp: Remove merge droppings.
	* lib/compiler.c, lib/compiler.cc: Likewise.
	* lib/gdb.exp (gdb_compile, gdb_load_cmd): Likewise.

	include/
	* libiberty.h (pex_write_input): Remove merge droppings.

2006-09-22  Daniel Jacobowitz  <dan@codesourcery.com>

	Merged from FSF trunk.

2006-09-21  Daniel Jacobowitz  <dan@codesourcery.com>

	Merged from FSF trunk.

2006-09-20  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (remote_write_bytes_aux): Remove call to
	check_binary_download.
	* target-memory.c (target_write_memory_blocks): Add casts
	for comparison between signed and unsigned.

2006-09-17  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/break.exp: Fix duplicated break test.

2006-09-14  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #939:
	gdb/
	* arm-tdep.c (arm_register_name): Check is_m here for xPSR.
	(set_disassembly_style): Remove is_m check.
	(arm_check_feature_set): Allow xPSR spelling.

2006-09-10  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* configure.ac: Replace --with-versuffix with --with-pkgversion.
	Set REPORT_BUGS_TO rather than BUGURL.
	* configure: Rebuilt.
	* Makefile.in (VERSUFFIX_s, BUGURL_s): Remove.
	(PKGVERSION, REPORT_BUGS_TO): New.
	(CFLAGS): Adjust.
	* top.c (print_gdb_version): Adjust.

2006-09-08  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/gdbserver/
	* configure.ac: Do supplementary checks before reading configure.srv.
	* configure.srv: Quote variables.
	* configure:Rebuilt.

2006-09-07  Mark Mitchell  <mark@codesourcery.com>
	    Nathan Sidwell  <nathan@codesourcery.com>

	* configure.in (TOPLEVEL_CONFIGURE_ARGUMENTS, baseargs): Fix
	quoting.
	* configure: Regenerated.

2006-09-07  Joseph Myers  <joseph@codesourcery.com>

	gdb/
	* mips-linux-tdep.c (supply_gregset, fill_gregset,
	supply_fpregset, fill_fpregset): Remove duplicate definitions.

2006-09-06  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* memattr.c (mem_region_cmp): Correct return value.

2006-09-06  Paul Brook  <paul@codesourcery.com>

	* configure.srv: Fix misapplied patch.

2006-09-05  Paul Brook  <paul@codesourcery.com>

	gdb/
	* arm-tdep.c (arm_register_name_strings, arm_pc_is_thumb)
	(set_disassembly_style, arm_write_pc): Remove ARM_V7M conditionals.
	Use tdep->is_m instead.
	(arm_check_feature_set): Accept org.gnu.gdb.arm.core-v7m for core
	registers.  Use appropriate PSR name.
	* arm-tdep.h (gdbarch_tdep): Add is_m.
	* configure.tgt (arm-*stellaris*): Remove special case.
	* config/arm/armv7m.mt: Remove.
	* config/arm/tm-armv7m.h: Remove.

2006-09-04  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/gdbserver/
	* configure.ac: Check for __mcoldfire__ and set
	gdb_cv_m68k_is_coldfire.
	* configure.src: Use gdb_cv_m68k_is_coldfire to select between
	reg-cf.o and reg-m68k.o.
	* configure: Regenerated.

2006-08-23  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* target.c (target_memory_map): Vector is array of struct, not
	pointers to struct.
	* memattr.c (mem_region_cmp): Likewise.

2006-08-22  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Packets): Document vFlashErase,
	vFlashWrite and vFlashDone packets.
	(General Query Packets): Document qXfer:memory-map:read.
	Add a new feature for qXfer:memory-map:read.
	(Memory map format): New section.
	(Target Commands): Mention that gdb can write flash.

2006-08-22  Vladimir Prus  <vladimir@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (SFILES): Add target-memory.c.
	(COMMON_OBS): Add target-memory.o.
	* memattr.c (lookup_mem_region): Adjust handling for
	the top of memory.  Improve comments.
	* remote.c (packet_check_result): New function, split out
	from packet_ok.  Recognize "E." as an error prefix.
	(packet_ok): Use it.
	(remote_write_bytes_aux): New function, renamed from
	remote_write_bytes.  Take packet header, packet format,
	and length flag as arguments.
	(remote_write_bytes): Rewrite to use remote_write_bytes_aux.
	(remote_send_printf, restore_remote_timeout)
	(remote_flash_timeout, remote_flash_erase, remote_flash_write)
	(remote_flash_done): New.
	(remote_xfer_partial): Handle flash writes.
	(init_remote_ops, init_remote_async_ops): Set to_flash_erase
	and to_flash_done.
	* symfile.c (struct load_section_data): Include a pointer to
	the cumulative stats and a request queue.  Move most members
	to other types.
	(struct load_progress_data, struct load_progress_section_data): New
	types.
	(load_progress): Handle a NULL baton and zero bytes.  Update for
	type changes.
	(load_section_callback): Create memory write requests instead of
	writing to memory.  Don't print the progress message here.
	(clear_memory_write_data): New function.
	(generic_load): Use target_write_memory_blocks.
	* target-memory.c: New file.
	* target.c (update_current_target): Mention new uninherited methods.
	(memory_xfer_partial): Issue an error for flash writes.
	(target_flash_erase, target_flash_done): New functions.
	(target_write_with_progress): Call the progress callback at the
	start also.
	* target.h (enum target_object): Add TARGET_OBJECT_FLASH.
	(target_write_with_progress): Update comment.
	(struct target_ops): Add to_flash_erase and to_flash_done.
	(target_flash_erase, target_flash_done, struct memory_write_request)
	(memory_write_request_s, enum flash_preserve_mode)
	(target_write_memory_blocks): New, including a vector type
	for memory_write_request_s.

2006-08-22  Vladimir Prus  <vladimir@codesourcery.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (SFILES): Add memory-map.c and xml-support.c.
	(memory_map_h, xml_support_h): New.
	(target_h): Add vec_h dependency.
	(COMMON_OBS): Add memory-map.o and xml-support.o.
	(memory-map.o, xml-support.o): New rules.
	(remote.o): Update.
	* exceptions.h (enum errors): Add XML_PARSE_ERROR.
	* infcmd.c (run_command_1, attach_command): Call target_pre_inferior.
	* memattr.c (default_mem_attrib): Initialize blocksize.
	(target_mem_region_list, mem_use_target)
	(target_mem_regions_valid, mem_region_cmp, mem_region_init)
	(require_user_regions, require_target_regions)
	(invalidate_target_mem_regions): New.
	(create_mem_region): Use mem_region_init.
	(mem_clear): Move higher.
	(lookup_mem_region): Use require_target_regions.
	(mem_command): Implement "mem auto".
	(mem_info_command): Handle target-supplied regions and flash
	attributes.
	(mem_enable_command, mem_disable_command, mem_delete_command): Use
	require_user_regions.
	(_initialize_mem): Mention "mem auto" in help.
	* memattr.h (enum mem_access_mode): Add MEM_FLASH.
	(struct mem_attrib): Add blocksize.
	(invalidate_target_mem_regions, mem_region_init, mem_region_cmp): New
	prototypes.
	* remote.c: Include "memory-map.h".
	(PACKET_qXfer_memory_map): New enum value.
	(remote_protocol_features): Add qXfer:memory-map:read.
	(remote_xfer_partial): Handle memory maps.
	(remote_memory_map): New.
	(init_remote_ops, init_remote_async_ops): Set to_memory_map.
	(_initialize_remote): Register qXfer:memory-map:read.
	* target.c (update_current_target): Mention to_memory_map.
	(target_memory_map, target_pre_inferior): New.
	(target_preopen): Call target_pre_inferior.
	* target.h: Include "vec.h".
	(enum target_object): Add TARGET_OBJECT_MEMORY_MAP.
	(struct target_ops): Add to_memory_map.
	(target_memory_map, target_pre_inferior): New prototypes.
	* memory-map.c, memory-map.h, xml-support.c, xml-support.h: New files.

	gdb/doc/
	* gdb.texinfo (Memory Region Attributes): Mention target-supplied
	memory regions and "mem auto".

2006-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* ada-lex.l (HIGH_BYTE_POSN, is_digit_in_base, digit_to_int)
	(strtoulst): Moved to ...
	* utils.c (HIGH_BYTE_POSN, is_digit_in_base, digit_to_int)
	(strtoulst): ... here.  Enhanced to behave more similarly
	to strtoul.
	* defs.h (strtoulst): New prototype.

2006-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* Makefile.in (memattr_h, memattr.o): Update.
	* memattr.h: Include "vec.h".
	(struct mem_region): Remove linked list pointer.
	(mem_region_s): New typedef and corresponding vector.
	* memattr.c: Include "vec.h".
	(mem_region_chain): Delete.
	(mem_region_list): New vector pointer.
	(mem_region_lessthan): New function.
	(create_mem_region): Remove unused return value.  Use vector
	operations.  Remove linear search.
	(delete_mem_region): Delete.
	(lookup_mem_region): Use vector operations.  Add a FIXME.
	(mem_info_command): Update to work with vectors.
	(mem_enable, mem_enable_command, mem_disable, mem_disable_command)
	(mem_free, mem_delete): Likewise.

2006-08-22  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* vec.h: New file.
	* vec.c: New file.
	* Makefile.in (SFILES): Add vec.c.
	(vec_h): New.
	(COMMON_OBS): Add vec.o.
	(vec.o): New target.

	gdb/doc/
	* gdbint.texinfo (Array Containers): New section.

2006-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.def (host_modules, dependencies): Remove expat.
	* configure.in (host_libs): Likewise.
	* Makefile.in, configure: Regenerate.
	* expat: Remove directory.

2006-08-22  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport from HEAD:
	2006-08-22  Daniel Jacobowitz  <dan@codesourcery.com>
	* Makefile.in (INTERNAL_CPPFLAGS): New.
	(INTERNAL_CFLAGS_BASE): Use it.

2006-08-21  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Retrieving Self-Descriptions): Fix pxref typo.

	gdb/
	* m68k-tdep.c (m68k_frame_align, m68k_dwarf_reg_to_regnum): Remove
	duplicates caused by misapplied patch or merge.

2006-08-02  Richard Sandiford  <richard@codesourcery.com>

	gdb/gdbserver/
	* server.c (terminal_fd): New variable.
	(old_foreground_pgrp): Likewise.
	(restore_old_foreground_pgrp): New function.
	(start_inferior): Record the terminal file descriptor in terminal_fd
	and its original foreground group in old_foreground_pgrp.  Register
	restore_old_foreground_pgrp with atexit().

2006-08-01  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	Backport from mainline:
	2006-06-24  Eli Zaretskii  <eliz@gnu.org>
	* defs.h (DIRNAME_SEPARATOR) [!__CYGWIN__ && _WIN32]:
	Define to `;'.

2006-07-27  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/cursal.exp: Add "" to gdb_load call.

2006-07-24  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/auxv.exp: Skip on non-linux, non-solaris targets.
	* gdb.base/cursal.exp: Revert my 2006-06-09 change.  Use
	gdb_file_cmd followed by gdb_load.
	* gdb.base/dbx.exp: Revert my 2006-06-09 change.

2006-07-23  Kazu Hirata  <kazu@codesourcery.com>

	readline/
	Backport from mainline:
	* emacs_keymap.c: Add a MINGW32 hack.
	* readline.c: Use _rl_bind_if_unbound to avoid macro bugs.

2006-07-18  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* remote-fileio.c (remote_fileio_func_rename): Reorder to process
	input buffer before reading memory.
	(remote_fileio_func_stat): Likewise.

2006-07-16  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* configure: Rebuild to correct problem in previous patch.

2006-07-15  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* configure.ac: Accept --with-versuffix and --with-bugurl.
	* configure: Regenerate.
	* Makefile.in: (VERSUFFIX_s, BUGURL_s): New.
	(GDB_FLAGS): Add -DVERSUFFIX and -DBUGURL.
	* top.c (print_gdb_version): Print VERSUFFIX and BUGURL.

2006-07-04  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (struct remote_state): Add explicit_packet_size.
	(remote_arch_state): Remove explicit_packet_size.
	(get_remote_packet_size): Check explicit_packet_size.
	(get_memory_packet_size): Likewise.
	(remote_query_packet_info): Update.
	(remote_open_1): Reset explicit_packet_size.

	Backport:
	2006-07-04  Daniel Jacobowitz  <dan@codesourcery.com>
	* remote.c (init_remote_state): Use xrealloc instead of xmalloc.

	2006-06-08  Daniel Jacobowitz  <dan@codesourcery.com>
	* (struct remote_state): New type, only containing
	buf and buf_size.
	(remote_state): New variable.
	(get_remote_state): New function.
	(struct remote_arch_state): Renamed from struct remote_state.
	Removed buf and buf_size.
	(get_remote_arch_state): Renamed from get_remote_state.  All
	necessary callers updated to call this function.
	(init_remote_state): Initialize the architecture-specific state.
	Update the target-specific state if necessary.
	(get_remote_packet_size): New function.  All previous references
	changed to use this accessor function.
	(packet_reg_from_regnum, packet_reg_from_pnum): Take a
	remote_arch_state instead of a remote_state.  All callers changed.
	(_initialize_remote): Initialize the packet buffer here.

2006-07-03  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/
	* remote.c (remote_query_packet_info): Update for backported patch.
	(fetch_registers_using_g, store_registers_using_G)
	(remote_read_qpart): Likewise.

	Backport:
	2006-03-30  Daniel Jacobowitz  <dan@codesourcery.com>
	* remote.c (struct remote_state): Add BUF and BUF_SIZE.
	(init_remote_state): Initialize the new fields.
	(get_memory_packet_size): Update BUF and BUF_SIZE if necessary.
	(set_thread, remote_thread_alive, remote_unpack_thread_info_response)
	(remote_get_threadinfo, parse_threadlist_response)
	(remote_get_threadlist, remote_current_thread, remote_threads_info)
	(remote_threads_extra_info, extended_remote_restart, get_offsets)
	(remote_check_symbols, remote_open_1, remote_detach)
	(remove_vcont_probe, remote_vcont_resume, remote_resume)
	(remote_wait, remote_async_wait, fetch_register_using_p)
	(remote_fetch_registers, store_register_using_P)
	(remote_store_registers, check_binary_download, remote_write_bytes)
	(remote_read_bytes, remote_insert_breakpoint)
	(remote_remove_breakpoint, remote_insert_watchpoint)
	(remote_remove_watchpoint, remote_insert_hw_breakpoint)
	(remote_remove_hw_breakpoint, compare_sections_command)
	(remote_xfer_partial, remote_rcmd, packet_command)
	(remote_get_thread_local_address): Use the global incoming buffer
	instead of alloca or xmalloc.  Limit outgoing packets to
	rs->remote_packet_size and incoming packets to rs->buf_size.
	Update calls to getpkt and remote_send.
	(remote_send): Take arguments by reference.
	(putpkt_binary): Eliminate junkbuf.  Use skip_frame.
	(skip_frame): New function.
	(read_frame): Take arguments by reference.  Expand the packet
	buffer instead of issuing an error.
	(getpkt, getpkt_sane): Take arguments by reference.
	* remote.h (getpkt): Update prototype and doc.
	* tracepoint.c (remote_get_noisy_reply): Take arguments by
	reference.
	(target_buf): Change from array to pointer.
	(target_buf_size): New variable.
	(remote_set_transparent_ranges): Update call to getpkt.
	(trace_start_command, trace_stop_command, trace_status_command):
	Update calls to remote_get_noisy_reply.
	(finish_tfind_command): Take arguments by reference.
	(trace_find_command, trace_find_pc_command)
	(trace_find_tracepoint_command, trace_find_line_command):
	(trace_find_range_command, trace_find_outside_command): Update
	calls to finish_tfind_command.
	(_initialize_tracepoint): Initialize target_buf_size and target_buf.

2006-06-23  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): Fix variable name typo
	* config/unknown.exp: Check gdb_board_support before claiming it
	is not supported.

2006-06-22  Daniel Jacobowitz  <dan@codesourcery.com>

	gdb/testsuite/:
	* gdb.base/store.exp: Don't use gdb_suppress_entire_file.
	* gdb.base/gdb1555.exp: Use gdb_compile_shlib.  Skip if not
	native.
	* gdb.stabs/exclfwd.exp: Skip the test if configure did not
	enable stabs testing.
	* gdb.base/auxv.exp: Intercept undefined command messages before
	gdb_test_multiple does.

2006-06-19  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/recurse.exp: Revert my 2006-06-09 patch.  Rely on test
	harness to set number of hardware watchpoints.

2006-06-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.

2006-06-13  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): New.

2006-06-12  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_frame_align): Say which archs need alignment.

	gdb/testsuite/
	* gdb.base/charset.exp: Use ${srcfile}.

2006-06-10  Daniel Jacobowitz  <dan@codesourcery.com>

	Issue #669
	gdb/
	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 8K.

2006-06-09  Nathan Sidwell  <nathan@codesourcery.com>

	gdb/testsuite/
	* gdb.base/auxv.exp: Skip if bare_board
	* gdb.base/gdb1555.exp: Likewise.
	* gdb.base/start.exp: Skip if use_gdb_stub.

	gdb/testsuite/
	* gdb.base/recurse.exp: Add gdb,hardware_watchpoint target
	info.  Adjust testing to cope with a single watchpoint.
	* gdb.base/watchpoint.exp: Adjust expected string.

	gdb/testsuite/
	* gdb.base/cursal.exp: Run to main before setting listing
	size.
	* gdb.base/dbx.exp: Run to main before testing.
	* gdb.base/ending-run.exp: Add additional expected string.
	* gdb.base/huge.c: Allow CRASH_GDB to be set from command
	line.
	* gdb.base/huge.exp: Loop over compilation to find a size that
	is acceptable.
	* gdb.base/remote.exp: Correct expected strings.
	* gdb.dwarf2/mac-fileno.S: Avoid # comments.

	gdb/
	* remote-file.io.c (remote_fileio_func_system): Treat zero length
	string as NULL.  Adjust for NULL pointer argument.
	* doc/gdb.texinfo (system): Document behaviour with zero length
	string.

	gdb/testsuite/
	* gdb.base/fileio.c: Add system(NULL) test.
	* gdb.base/fileio.exp: Check it.

	gdb/testsuite/
	* gdb.cp/anon-union.cc: Add code at end of function.
	* gdb.cp/anon-union.exp: Adjust end of function breakpoint.
	* gdb.mi/var-cmd.c: Add code at end of function.
	* gdb.mi/mi-var-display.exp: Adjust end of next.
	* gdb.mi/mi2-var-display.exp: Likewise.

	gdb/testsuite/
	* gdb.base/break.c: Add breakpoint 10a marker.
	* gdb.base/break.exp: Check breakpoint on }

	gdb/
	* m68k-tdep.c (m68k_frame_align): New.
	(m68k_push_dummy_call): Don't align here.
	(m68k_gdbarch_init): Set frame_align here.

2006-06-08  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote.c (remote_open_1): Do preopen tasks before
	irreversably destroying state.

	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Use
	tdep->ptr_value_regnum for pointer returns.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_reg_struct_return_r): New, broken out of ...
	(m68k_reg_struct_return_p): ... here.  Implement gcc's structure
	mode algorithm.
	(m68k_svr4_init_abi, m68k_aout_init_abi): Set ptr_value_regnum.
	(m68k_gdbarch_init): Likewise.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add ptr_value_regnum
	field.

2006-06-05  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote.c (remote_insert_watchpoint): Return -1, rather than
	fatal error if packet is disabled.
	(remote_remove_watchpoint, remote_insert_hw_breakpoint,
	remote_remove_hw_breakpoint): Likewise.
	Revert my 2006-06-01  Nathan Sidwell  <nathan@codesourcery.com>
	change to breakpoint.c

	* gdb/testsuite/gdb.asm/m68k.inc (gdbasm_call): Use jsr.
	* gdb/testsuite/gdb.base/fileio.c (stop): New.  Call it everywhere
	the debugger should stop.
	* gdb/testsuite/gdb.base/fileio.exp: Add breakpoint to stop
	routine and adjust.
	* gdb/testsuite/gdb.base/charset.exp: Specify source file for
	breakpoint address.

	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Remove.
	(REGISTER_BYTES_FP): Use tdep->fpreg_type.
	(m68k_register_bytes_ok): adjust.
	(m68k_register_type): Use tdep->fpreg_type.
	(m68k_register_to_value, m68k_value_to_register): Likewise.
	(m68k_svr4_extract_return_value): Use tdep->float_return &
	tdep->fpreg_type.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_gdbarch_init): Set tdep->float_return & tdep->fpreg_type.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add floar_return &
	fpreg_type fields.
	* gdb/m68kbsd-tdep.c (m68kbsd_fpreg_offset): Use tdep->fpreg_type.

	* gdb/m68k-tdep.c (m68k_dwarf_reg_to_regnum): New.
	(m68k_gdbarch_init): Set it for dwarf & dwarf2 reg number
	conversion. Use M68K_NUM_REGS for number of regs.

	* gdb/configure.tgt (gdb_osabi): uclinux is like linux.
	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Return value
	is never in %a0.
	(m68k_reg_struct_return_p): Duplicate gcc's struct mode algorithm.
	(m68k_svr4_return_value) Use VALUE_STRUCT_CONVENTION.  do not rely
	on %a0.
	(m68k_push_dummy_call): Force stack alignment.
	(m68k_svr4_init_abi): Set struct_return convention.
	(m68k_aout_init_abi): New.
	(m68k_gdbarch_init): Default to bare elf ABI that gcc provides.
	* gdb/m68k-tdep.h (m68k_aout_init_abi): Declare.
	* gdb/m68kbsd-tdep.c (m68kbsd_aout_init_abi): Use m68k_aout_init_abi.
	(m68kbsd_elf_init_abi): Add comment.
	* gdb/m68klinux-tdep.c (m68k_linux_init_abi): Just set the struct
	pointer register here.

2006-06-01  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/breakpoint.c (insert_bp_location): Remember the failing
	watchpoint address and pass to remove_breakpoint.
	(remove_breakpoints, remove_hw_watchpoints, reattach_breakpoints,
	detach_breakpoints): Adjust remove_breakpoint call.
	(remove_breakpoint): Add VAL_FAILED parameter.  Stop removing
	watchpoint addresses when it is reached.
	(delete_breakpoint): Adjust remove_breakpoint call.

2006-05-24  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/remote-fileio.c (remote_fileio_reset): New.
	* gdb/remote-fileio.h (remote_fileio_reset): Prototype.
	* gdb/remote.c (extended_remote_restart, remote_open_1): Call it.

2006-05-22  Richard Sandiford  <richard@codesourcery.com>

	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.

2006-05-08  Richard Sandiford  <richard@codesourcery.com>

	include/opcodes/
	* m68k.h (mcf_mask): Define.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/testsuite/gdb.cp/gdb1355.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.cp/gdb1355.cc: Ensure all types are referenced.
	* gdb/testsuite/gdb.cp/hang2.C: Ditto.
	* gdb/testsuite/gdb.cp/m-data.cc: Ditto.
	* gdb/testsuite/gdb.cp/hang3.C: Ditto.
	* gdb/testsuite/gdb.cp/hang1.C: Ditto.

	* gdb/gdbtypes.c (rank_one_type): Check for plain char -> signed/
	unsigned char.

	* gdb/testsuite/gdb.base/completion.exp: Accept "long" as a type.

	* gdb/testsuite/gdb.base/volatile.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.base/constvars.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.stabs/weird.exp: Return -1 instead of issuing
	error.

	* gdb/testsuite/gdb.base/advance.c: Add proper function prototype.

	* gdb/testsuite/gdb.base/ending-run.exp: Add case for ARM runtime.

	* gdb/testsuite/gdb.base/gdb1821.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.base/ptype.exp: Accept different spellings of
	integer types.

	* gdb/testsuite/gdb.cp/inherit.exp: Cope with armcc vtable pointers.

	* gdb/testsuite/gdb.mi/mi2-var-child.exp: Accept different spellings
	of integer types.
	* gdb/testsuite/gdb.mi/mi-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-cmd.exp: Ditto.

2006-05-03  Paul Brook  <paul@codesourcery.com>

	* arm-linux-tdep.c (arm_linux_extract_return_value): Use gdb_byte.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/c-valprint.c: Handle class member typedefs.

	* gdb/symtab.c (skip_prologue_using_sal): Treat two consecutive lines
	at the same address as a prolouge marker.
	* gdb/arm-tdep.c (arm_skip_prologue): Use skip_prologue_using_sal.

	* gdb/dwarf2expr.c (execute_stack_op): Check for bogus DW_OP_reg.

	* gdb/dwarf2read.c (read_structure_type): Use tag name for C++/Java
	classes.

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (varobj_create): Call release_value after evaluate_type.
	(c_value_of_root): Initialize new_val.  Don't release_value a NULL
	value.

	* gdb/c-typeprint.c (cp_type_print_method_args): Don't print type
	details.

	* gdb/dwarf2read.c (dwarf2_debug_line_missing_file_complaint): New
	function.
	(dwarf_decode_lines): Check for line info without a file.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/dwarf2read.c (read_subroutine_type): Add armcc workaround.

	* gdb/dwarf2read.c (read_structure_type): Look for ADS vtable
	pointers.

	* gdb/dwarf2read.c (dwarf_decode_lines): Don't set dir for absolute
	paths.
	(dwarf_decode_lines): Ditto.
	(dwarf2_start_subfile): Split absolute filenames into path+file.

	* gdb/symtab.h (struct symbol): Add is_argument.
	(SYMBOL_IS_ARGUMENT): Define.
	* gdb/stack.c (print_frame_args): Use SYMBOL_IS_ARGUMENT.
	(print_frame_arg_vars): Ditto.
	* gdb/dwarf2read.c (new_symbol): Set SYMBOL_IS_ARGUMENT.
	(new_symbol): Mark optimized out arguments.

	* gdb/dwarf2read.c (partial_read_comp_unit_head): Accept version 3.

	* gdb/dwarf2read.c (read_unspecified_type): New function.
	(read_type_die): Handle DW_TAG_unspecified_type.

2006-05-03  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/dwarf2read.c (field_info): Add baseclasses.
	(dwarf2_add_field): Check base classes.
	(dwarf2_attach_fields_to_type): Ditto.

	* gdb/gnu-v3-abi.c (gnuv3_rtti_type): Check for NULL base_type.
	(gnuv3_virtual_fn_field): Handle missing base.
	(gnuv3_baseclass_offset): Handle missing vptr.
	* gdb/varobj.c (cplus_class_num_children): Call fill_in_vptr_fieldno.
	(cplus_name_of_child): Ditto.
	* gdb/eval.c (evaluate_subexp_standard): Ditto.
	* gdb/dwarf2read.c (read_structure_type): Search for vtable pointer
	by name in objects built by ARM compiler.

	* gdb/dwarf2read.c (dwarf2_add_member_fn): Calculate virtual function
	offset for classes without DW_AT_containing_type.

2006-04-28  Mark Mitchell  <mark@codesourcery.com>

	* gdb/mt-tdep.c (mt_register_name): Correct out-of-range logic to
	include additional registers.

2006-04-28  Richard Sandiford  <richard@codesourcery.com>

	* gdb/gdbserver/configure.srv (m68k*-*-linux*): Use reg-cf.o.

2006-04-19  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/doc/gdb.texinfo (Remote configuration): Mention "set remote
	load-offsets".
	(General Query Packets): Document qPartInfo.

2006-04-18  Mark Mitchell  <mark@codesourcery.com>

	Issue #655
	* gdb/mt-tdep.c (mt_gdb_regnums): Add ZI2, ZQ2, Ichannel2,
	Iscramb2, Qscramb2, Qchannel2.
	(mt_register_name): Likewise.
	(mt_copro_register_type): Describe ZI2 and ZQ2.

2006-04-11  Mark Mitchell  <mark@codesourcery.com>

	Issue #658
	* gdb/mt-tdep.c (mt_gdb_regnums): Define
	MT_COPRO_PSEUDOREG_MAC_REGNUM.
	(mt_register_name): Use it.
	(mt_copro_register_type): Likewise.
	(mt_register_type): Likewise.
	(mt_pseudo_register_read): Likewise.  Read the MAC register, not
	the coprocessor register.
	(mt_pseudo_register_write): Likewise.

2006-04-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Accept more
	mapping symbols.

2006-04-11  Daniel Jacobowitz  <dan@codesourcery.com>

	Backport:
	2006-03-09  Paul Brook  <paul@codesourcery.com>
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Recognise additional
	mapping symbols.

2006-04-02  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.def (host_modules, dependencies): Add expat.
	* configure.in (host_libs): Add expat.
	* Makefile.in, configure: Regenerate.
	* expat: New directory.

	* gdb/Makefile.in: Add expat, new files, and xml-builtin.c.  Update
	dependencies.
	* gdb/acinclude.m4: Include stdint.m4.
	* gdb/configure.ac: Use AC_C_BIGENDIAN and GCC_HEADER_STDINT.
	* gdb/aclocal.m4, gdb/config.in, gdb/configure: Regenerate.

	* gdb/auxv.h: Remove target_auxv_read prototype.
	* gdb/auxv.c, gdb/avr-tdep.c, gdb/ia64-tdep.c, gdb/linux-nat.c,
	gdb/procfs.c: Use target_read_whole.
	* gdb/sparc-tdep.c: Use target_read.

	* gdb/frame.c: Work around null frame_id handling.

	* gdb/breakpoint.c, gdb/f-valprint.c, gdb/infcmd.c, gdb/inflow.c,
	gdb/infrun.c, gdb/stack.c, gdb/valops.c, gdb/varobj.c,
	gdb/cli-cmds.c, gdb/testsuite/gdb.base/default.exp,
	gdb/tui/tui-disasm.c, gdb/tui/tui-source.c,
	gdb/tui/tui-winsource.c: Selected frame fixups.

	* gdb/README.AVAIL, gdb/available.c, gdb/available.h,
	gdb/parse-avail.c, gdb/sha1.c, gdb/features/feature_to_c.sh,
	gdb/features/gdb-target.dtd: New files.
	* gdb/arm-tdep.c: Handle missing FPA, present VFP, and
	self-described registers.  Decode VFP register numbers from DWARF.
	* gdb/arm-tdep.h: Add flags for VFP and FPA.
	* gdb/gdbarch.sh: Add available_features_support and feature_set.
	Export the arch's obstack.  Check feature sets.  Improve error
	handling.
	* gdb/gdbarch.c, gdb/gdbarch.h: Regenerated.
	* gdb/infcmd.c: Trigger architecture selection.
	* gdb/remote.c: Available feature support.  qPacketInfo support.
	Improved g/G packet support.  Improved qPart support.
	qPart:features support.
	* gdb/symfile.c: Adjust download_write_size.
	* gdb/target.c: Revise partial transfer support.  Handle available
	features method.  Add target_read_whole.
	* gdb/target.h: Add the available features object and methods.
	* gdb/doc/gdb.texinfo: Document new features.

	* gdb/symfile.h: Include symtab.h.

2006-03-31  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/config/m68k/monitor.mt (TDEPFILES): Remove unneeded
	monitors.
	(DEPRECATED_TM_FILE): Remove.

	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Define.
	(REGISTER_BYTES_FP): Use it.

	* gdb/configure.tgt (m68k-*-uclinux*): target is linux.

	* gdb/remote.c (remote_fetch_registers): Revert bogus change.

	* gdb/remote.c (remote_fetch_registers): Don't warn about short
	register packet if we've not set the expected value.

	* gdb/gdbserver/linux-low.c (linux_read_offsets): Remove debugging
	printf.

	* gdb/gdbserver/Makefile.in (reg-cf.o, reg-cf.c): New targets.
	* gdb/gdbserver/configure.srv (m68k*-*-uclinux*): New target.
	* gdb/gdbserver/linux-low.c (linux_create_inferior): Use vfork on
	mmuless systems.
	(linux_resume_one_process): Remove extraneous cast.
	(linux_read_offsets): New.
	(linux_target_op): Add linux_read_offsets on mmuless systems.
	* gdb/gdbserver/server.c (handle_query): Add qOffsets logic.
	* gdb/gdbserver/target.h (struct target_ops): Add read_offsets.

2006-03-30  Mark Mitchell <mark@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty/configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

2006-03-30  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gdb/testsuite/gdb.mi/mi-until.exp: kfail broken until command.
	* gdb/testsuite/gdb.mi/mi2-until.exp: Ditto.

2006-03-29  Nathan Sidwell  <nathan@codesourcery.com>

	* gdb/m68k-tdep.c (M68K_FPREG_TYPE, M68K_LONG_DOUBLE_FORMAT,
	M68K_RETURN_FP0): New.  Set for Coldfire.
	(m68k_register_type, m68k_register_to_value,
	m68k_svr4_extract_return_value, m68k_svr4_store_return_value,
	m68k_gdbarch_init): Use them.

2006-03-21  Mark Mitchell  <mark@codesourcery.com>

	* gdb/ser-mingw.c (net_windows_state): Add mutex.
	(net_windows_select_thread): Grab lock around access to
	read_event.
	(net_windows_wait_handle): Do not reset the read_event.
	(net_windows_open): Create a mutex.
	(net_windows_read_prim): New function.
	(_initialize_ser_windows): Use it.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-common.c (pex_run): Close the write end of the
	pipe after starting the child.

	* gdb/config/arm/armv7m.mt (TDEPFILES): Add prologue-value.o.

2006-03-21  Paul Brook  <paul@codesourcery.com>
	Daniel Jacobowitz <dan@codesourcery.com>
	Jim Blandy <jimb@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* configure.tgt (arm*-stellaris-*): Use armv7m configuration.
	* config/arm/armv7m.mt: New file.
	* config/arm/tm-armv7m.h: Likewise.
	* arm-tdep.c (arm_register_name_strings): Use xPSR on ARM V7M.
	(arm_pc_is_thumb): ARM V7M is always Thumb.
	(set_disassembly_style): Use xPSR on ARM V7M.
	(arm_write_pc): Do not set T bit in CSPR on V7M.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

2006-03-19  Mark Mitchell  <mark@codesourcery.com>

	* gdb/ser-mingw.c (free_pipe_state): Close pipe before calling
	pex_free.

2006-03-17  Mark Mitchell  <mark@codesourcery.com>

	* gdb/config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.

2006-03-17  Jim Blandy  <jimb@codesourcery.com>

	Add support for 'target remote |' on MinGW.
	* gdb/ser-mingw.c (struct pipe_state): New structure.
	(make_pipe_state, free_pipe_state, cleanup_pipe_state)
	(pipe_windows_open, pipe_windows_close, pipe_windows_read)
	(pipe_windows_write, pipe_wait_handle): New functions.
	(_initialize_ser_windows): Register a "pipe" interface based on
	them.

 	* libiberty/pex-common.c (pex_write_input): New function.
 	* libiberty/pexecute.txh (pex_write_input): Document it.
 	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
 	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
 	* libiberty/pex-msdos (funcs): Same.
 	* libiberty/functions.texi: Regenerated.

 	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libibery/functions.texi: Regenerate.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdb_proc_service.h (paddr_t): Use psaddr_t if available.
	* gdb/proc-service.c (ps_xfer_memory): Cast paddr_t to unsigned
	long.
	(ps_pglobal_lookup): Cast CORE_ADDR to paddr_t.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdbserver/linux-mips-low.c: Include <sys/ptrace.h> and
	"gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
	* gdb/gdbserver/Makefile.in (linux-i386-low.o, linux-mips-low.o)
	(linux-x86-64-low.o): Update.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/gdbserver/configure.ac: Remove checks for prfpregset_t.
	* gdb/gdbserver/gdb_proc_service.h: New file.
	* gdb/gdbserver/linux-i386-low.c, gdb/gdbserver/linux-x86-64-low.c,
	gdb/gdbserver/thread-db.c: Use the new "gdb_proc_service.h".
	* gdb/gdbserver/proc-service.c: Likewise.
	(ps_pglobal_lookup, ps_pdread, ps_pdwrite): Use psaddr_t.
	(ps_lgetfpregs, ps_lsetfpregs): Use a void* argument.
	* gdb/gdbserver/Makefile.in (gdb_proc_service_h): Updated.
	* gdb/gdbserver/configure, config.in: Regenerated.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/Makefile.in (mips_linux_tdep_h): New.
	(mpis-linux-nat.o, mips-linux-tdep.o): Update.
	* gdb/mips-linux-nat.c: Include "inferior.h", "mips-linux-tdep.h", and
	<sys/ptrace.h>.
	(have_ptrace_regsets, super_fetch_registers, super_store_registers)
	(mips64_linux_regsets_fetch_registers)
	(mips64_linux_regsets_store_registers, mips64_linux_fetch_registers)
	(mips64_linux_store_registers): New.
	(_initialize_mips_linux_nat): Override to_fetch_registers and
	to_store_registers.
	* gdb/mips-linux-tdep.h: New file.
	* gdb/mips-linux-tdep.c: Include "mips-linux-tdep.c".
	(ELF_NGREG, ELF_NFPREG, elf_greg_t, elf_gregset_t, elf_fpreg_t)
	(elf_fpregset_t, FPR_BASE, PC, CAUSE, BADVADDR, MMHI, MMLO)
	(FPC_CSR, FPC_EIR, EF_REG0, EF_REG31, EF_LO, EF_HI, EF_CP0_EPC)
	(EF_CP0_BADVADDR, EF_CP0_STATUS, EF_CP0_CAUSE, EF_SIZE)
	(MIPS64_ELF_NGREG, MIPS64_ELF_NFPREG, mips64_elf_greg_t)
	(mips64_elf_gregset_t, mips64_elf_fpreg_t, mips64_elf_fpregset_t)
	(MIPS64_FPR_BASE, MIPS64_PC, MIPS64_CAUSE, MIPS64_BADVADDR)
	(MIPS64_MMHI, MIPS64_MMLO, MIPS64_FPC_CSR, MIPS64_FPC_EIR)
	(MIPS64_EF_REG0, MIPS64_EF_REG31, MIPS64_EF_LO, MIPS64_EF_HI)
	(MIPS64_EF_CP0_EPC, MIPS64_EF_CP0_BADVADDR, MIPS64_EF_CP0_STATUS)
	(MIPS64_EF_CP0_CAUSE, MIPS64_EF_SIZE): Delete.
	(supply_32bit_reg): Use gdb_byte.
	(supply_64bit_reg): New.
	(mips_supply_gregset, mips_fill_gregset, mips_supply_fpregset)
	(mips_fill_fpregset, fetch_core_registers, supply_gregset)
	(fill_gregset, supply_fpregset): Update for renamed types.
	(mips64_supply_gregset): Use gdb_byte and supply_64bit_reg.
	(mips64_fill_gregset): Make global.  Handle 32-bit register
	sizes.
	(mips64_fill_fpregset): Make global.  Use gdb_byte.  Handle
	FP regsets properly.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-tdep.c (mips_supply_gregset): Renamed from supply_gregset.
	(mips_fill_gregset): Renamed from fill_gregset.
	(mips_supply_fpregset): Renamed from supply_fpregset.
	(mips_fill_fpregset): Renamed from fill_fpregset.
	(fetch_core_registers): Update calls.
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): New
	functions.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-tdep.c (mips_gdbarch_init): Default 64-bit ELF files to N64.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-tdep.c (is_mips16_addr, mips32_next_pc, add_offset_16):
	Correct arithmetic for 64-bit CORE_ADDR.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-tdep.c: Include "floatformat.h".
	(mips_linux_init_abi): Use 128-bit long double for N32 and N64.
	(mips_n32n64_return_value): Support 128-bit long double.
	(print_gp_register_row): Don't print spaces before ignored
	or floating point registers.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-mdebug-tdep.c (compare_pdr_entries): Use bfd_get_signed_32
	for code addresses.
	(non_heuristic_proc_desc): Likewise.

2006-03-15  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdb/mips-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New.
	* gdb/Makefile.in (mips-linux-nat.o): Update.

2006-03-08  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/arm-tdep.c (arm_push_dummy_call): Remove stack alignment.
	(arm_frame_align): New function.
	(arm_gdbarch_init): Use it.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/gdb.base/assign.exp: Correct fail message.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* sim/arm/elfos.c (ARMul_OSHandleSWI): Call correct function for IsTTY.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/lib/compiler.c: Extract armcc version number.
	* gdb/testsuite/lib/compiler.cc: Ditto.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2006-03-03  Khem Raj <khem@mvista.com>
	* remote-rdp.c (remote_rdp_xfer_inferior_memory): Use gdb_byte.

2006-03-07  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.

^L
Local Variables:
mode: change-log
change-log-default-name: "ChangeLog.csl"
End:
